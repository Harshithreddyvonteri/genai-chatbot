{"doc_id": "3f9651aa1fa289fb", "url": "https://handbook.gitlab.com/handbook/company/culture", "title": "GitLab Culture | The GitLab Handbook", "text": "The Handbook\nAbout GitLab\nGitLab Culture\nHere’s a look at what you can expect from our culture and all-remote environment.\nIntroduction\nPlease see our\ncompany page\nfor more general information about GitLab.\nLife at GitLab\nAt GitLab, our mission is simple: to enable everyone to contribute to and co-create the software that powers our world. Our platform doesn’t just bring people together—it unites teams and organizations, breaking down barriers and redefining what’s possible in software development.\nHere, you’re not just contributing to a tool, you’re shaping the future of secure, scalable software delivery. Our high-performance culture values collaboration, ownership, and impact, accelerating careers while driving global innovation.\nThis is more than a job, it’s your opportunity to build something that matters.\nEveryone can contribute\nOur size and\nour mission\n(enable everyone to contribute to and co-create the software that powers our world.) mean that our team members can — and are expected to — make an impact across the company.\nBecause we all use our product internally, you don’t have to be a developer to learn to collaborate in the GitLab tool.\nFrom your very first week, no matter your role, you’ll gain the technical skills needed to access, question, and contribute to projects far beyond your job description.\nThis unique approach works because we’re a team of helpful, passionate people who want to see each other, the company, and the broader GitLab community succeed.\nWe learn from each other, challenge each other, and thank each other.\nCome prepared to do meaningful work that will help shape the future of the company.\nWhile the opportunities to contribute are boundless in a growing organization like GitLab, they may not be clearly defined.\nYou’ll need to think creatively, speak up to see how you can help, and be willing to try something new.\nFreedom to iterate\nAt GitLab, our\nvalue of iteration\nhas a unique impact on the way we operate and get things done.\nWorking this way means our team members are expected to quickly deliver the minimal valuable change in their work instead of waiting to produce a polished, completed product.\nWhile this can be a challenging practice to adopt at first, it’s liberating to be able to make mistakes, get feedback quickly, and course correct to reach a better outcome, faster.\nAs our company and the industry continue to grow, you’ll have the freedom to change and constantly evolve everything from your schedule and your workspace to your job description and your skills.\nCulture at GitLab\nCulture at GitLab is composed of three things.\nCamaraderie (mutual trust and friendship). This is created and maintained by\ninformal communication\n. We also build trust by\neffectively collaborating\nwith others.\nWork style (how we work). This is defined and articulated in our\ncommunication guide\nand\nhandbook usage guide\n.\nOther pages related to culture\nDiversity, Inclusion and Belonging\nTalent Brand\nAll Remote\nGitLab is one of the world's largest all-remote companies\nCross-Culture Collaboration Guide\nThis guide will help GitLab team members in effective and inclusive communication and cross-cultural collaboration globally\nDiversity, Inclusion & Belonging\nDiversity, Inclusion & Belonging is fundamental to the success of GitLab. We include it in every way possible and in all that we do.\nGitLab CEO 101\nThere is a monthly GitLab CEO 101 call with new hires and the CEO.\nGitLab Events Code of Conduct\nGitLab is dedicated to providing a harassment-free and inclusive event experience for everyone!\nGitLab Songbook\nThe GitLab Songbook contains popular songs that have been adapted and arranged by GitLab team members.\nGitLab Summit\nOver the years, GitLab has hosted GitLab Summits, global team member events. In the past, these …\nGitLab Top Team Member\nLast modified July 17, 2025:\nRemoves outdated strategy page (\n387298cd\n)\nView page source\n-\nplease\ncontribute\n.", "num_words": 631}
{"doc_id": "08a96a443ad56d37", "url": "https://handbook.gitlab.com/handbook/people-group/talent-assessment", "title": "Talent Assessment | The GitLab Handbook", "text": "The Handbook\nPeople Group\nTalent Assessment\nOverview of three critical pieces of GitLab’s talent development program: performance, growth potential, and key talent.\nPurpose\nThe purpose of the Talent Assessment Program is to identify and retain team members who drive the success of our organization. This is a top priority and strategic process for people managers at GitLab. Our Talent Assessment Program (which is a critical piece of our overall\nTalent Development Program\nserves as a mechanism to help mitigate a couple of our biggest concerns:\nlack of performance management\nand\nlosing key people\n.\nAdditional key benefits of the Assessment Program include:\nHelp facilitate career development conversations (and ensure they’re occurring regularly)\nEnsure transparency and ongoing feedback between team members and their managers\nDiscuss promotion readiness and plan promotions\nSuccession planning\nIncrease awareness of top talent across departments (during calibration sessions)\nOverview\nWe use Workday to complete our Talent Assessment. You can review an overview of Workday Talent\nhere\n. Please reach out to your\nPeople Business Partner\nif you have any questions.\nYou can also review the following\nguide\nwhich mirrors what is included in the Workday Talent Assessment template to prepare you prior to the tool being launched.\nThere are many talent assessment options, and we have opted to use a Performance/Growth Potential Matrix (commonly known as “9-Box” in the US) and annually review Key Talent.\nGitLab’s Performance/Growth Potential Matrix is a type of talent assessment that forms part of our\nTalent Development Program\n.\nThe FY25 talent assessment should consider performance from the period FY25Q1 - FY25Q4\nFor team members with a tenure up to three months to the launch of the Talent Assessment Program will be designated as “Too New to Rate”. Also in some cases a “Too New to Rate” designation might be applicable for newly promoted or transferred team members. More about that designation can be found below.\nThe Performance/Growth Potential Matrix\nPerformance ↑\nGrowth Potential →\nDeveloping Growth Potential\nGrowing Growth Potential\nExceeding Growth Potential\nExceeding\nBox 5\nTeam member is consistently surpassing performance expectations in their current role but needs to continue to grow in current role, or has not exhibited the willingness or ability to grow in the current role.\nBox 2\nTeam member is consistently surpassing performance expectations in their current role, makes valuable contributions and consistently demonstrates competencies required. They have shown willingness and/or ability to further grow in their role and they may be ready to take on additional responsibilities in the next 12 months.\nBox 1\nTeam member is developing faster than the demands of their current position and/or division. Team member has been given additional assignments and has demonstrated high-level commitment/achieved significant results. Team member is ready to broaden their skill set and take on significantly greater scope and responsibility.\nPerforming\nBox 7\nTeam member is currently meeting expectations of their role, and/or team member is not willing or able to absorb greater scope, impact or complexity.\nBox 4\nTeam member is currently meeting expectations and has shown willingness or ability to further grow; may not be ready to absorb greater scope, impact or complexity in the next 12 months.\nBox 3\nTeam member is contributing as expected and is meeting performance expectations. They have shown willingness and/or ability to further grow in their role and they may be ready to take on additional responsibilities in the near future.\nDeveloping\nBox 9\nTeam member is not meeting performance expectations and there is still more to learn in the current position,\nor\n, team member has not been in the position long enough (promotion, new to the role, or new hire) to adequately demonstrate the pillars of growth potential for a sustained period of time.\nBox 8\nTeam member has not been in the position long enough to adequately demonstrate their capacity (promotion, new to the role, or new hire), or may have lost pace with changes in the organization. The team member has shown the willingness and/or ability to grow in the role aligned with the pillars of growth or has had opportunity to consistently demonstrate performance and growth potential.\nBox 6\nThe team member is not meeting the requirements of their current role, but has demonstrated willingness and ability to extend beyond scope once ramped, and/or is showing the willingness and ability to grow further with additional guidance or direction. The team member could be more successful in the current role with more direction/time to ramp, or in another role or department that more appropriately suits their skill set.\nThis matrix is an individual assessment tool that evaluates both a team members current contribution to the organization and their potential level of contribution.\nIt is commonly used in succession planning as a method of evaluation an organization’s talent pool, identifying potential leaders, and identifying any gaps or risks.\nIt is regularly considered a catalyst for robust dialogue (through a calibration process) and is considered more accurate than one person’s opinion.\nThe performance/growth potential matrix can be a diagnostic tool for career development.\nThe matrix serves as a tool to help managers assess, develop, and coach their team members - ultimately resulting in an ability to more effectively and efficiently lead teams.\nWhat is “Performance”?\nPerformance includes both results and behaviors, and is broken into three areas: Developing, Performing, and Exceeding.\nDeveloping\nPlease note that\nDeveloping\nshould not be automatically associated with underperformance. As highlighted below,\nDeveloping\ncan also be used for new hires or newly promoted team members that are still ramping up in their new roles. Your manager will provide example and detail to ensure the rationale behind the\nDeveloping\nrating is communicated.\nBased on the Job Family responsibilities,\nvalues\nand\nremote working competencies\n, team members in this category are not meeting all of the expectations. There is still more to learn and improve on in the current position to achieve the desired results. This may be due to the following:\nThe team member has not been in the position/at GitLab long enough to adequately demonstrate performance.\nThe team member has been recently promoted and needs time to ramp up performance in the new role.\nThe team member may have lost pace with changes in the organization.\nThe team member is not committed to the job responsibilities and/or GitLab.\nThe team member finds it difficult to perform work in a way that is aligned with our values and/or competencies.\nThe team member’s performance is aligned to our values and competencies, however, they lack results for Job Family responsibilities.\nTeam member was part of a recent\ntransfer\nand is still learning how to be successful on their new team.\nExamples:\nThe team member needs a lot of guidance from the manager with the majority of tasks to understand requirements and deliverables expected.\nThe team member has not been in the position long enough to adequately demonstrate their capacity. For example, the team member was recently promoted or has changed roles and needs more time to ramp up.\nThe team member is missing important due dates which is affecting the team, GitLab and/or customers.\nThe team member still needs to adapt remote working best practices. For example, the team member does not manage their own time or work to achieve results or may have difficulty with asynchronous communication.\nThe team member lacks (a part of) the knowledge, skills and abilities which are required for the role, resulting in a low quality of work being delivered.\nThere is a significant mis-alignment (i.e. the team member struggles to collaborate with others, the team member does not work iteratively and key metrics are impacted, etc.)\nPerforming\nBased on Job Family responsibilities,\nvalues\nand\nremote working competencies\nteam members in this category are “on track” and meeting all expectations. They can independently and competently perform all aspects of the Job Family responsibilities in a way that is aligned with our values and competencies. Their performance consistently meets the requirements, standards, or objectives of the job, and they can occasionally exceed expectations. They deliver results in a timely and accurate fashion. This performance may be expected as a result of:\nThe team member is consistent and stable in their performance.\nThe team member has the required knowledge, skills and abilities to perform in the role successfully and also applies values and competencies in their work.\nThe team member has adapted to remote working and their knowledge, skills, and abilities align seamlessly to their role at GitLab.\nExamples:\nTeam member is a dependable member of the team. Their manager can trust them to achieve key metrics.\nTeam member consistently works in accordance with our value and remote working competencies.\nWhile consistently meeting expectations, the team member does not regularly exceed expectations.\nTeam member does not frequently express interest in additional projects, responsibilities, or work outside of their immediate scope.\nThe team member is exemplifying our values in their work, but might have some competencies to improve on.\nExceeding\nTeam members that are exceeding consistently surpass the demands of their current position. They demonstrate unique understanding of work beyond the assigned area of responsibility. They contribute to GitLab’s success by adding significant value well beyond Job Family requirements,\nvalues\n, and\nremote working competencies\n. This performance may be expected as a result of:\nIndividual is developing more quickly than the demands of their current position.\nThey rise to the challenge when given additional assignments and achieve significant results.\nA “go-to” team member for their peers for tough problems and day-to-day guidance.\nHigh commitment and engagement to GitLab combined with extensive knowledge, skills, and abilities to perform in the role.\nExamples:\nConstantly seeks opportunities to improve both self and organization.\nThe team members exemplify great ways of giving and receiving feedback - incorporating this directly in their work.\nThe team members are ambassadors for the values, take full ownership of delivering projects, and very rarely miss due dates.\nPlease note that an\nExceeding\nassessment for the performance factor does not guarantee a promotion. While the performance factor is a consideration, there are several considerations that are reviewed when evaluating promotion readiness. Please work with your manager to align expectations.\nExpected Distribution Performance/Growth Potential Company-Wide\nNote that this is an expected distribution, not a forced distribution. The bell curve distribution aligns with what is most commonly used as a benchmark in the industry and serves as a baseline for us to review and calibrate against. There may be exceptions that are justified that can be discussed and reviewed during calibration. Where deviations from the expected distribution occur, managers should use this as a data point to further review and work with their leadership to ensure appropriate growth plans are in place, proper role fit exists, hiring plans are adjusted, that we are promoting at a fair and accurate rate.\nWe expect roughly ~5% of team members to be assessed as\nTNTR (Too New To Rate)\n.\nPerformance:\nDeveloping\n: 10%, not yet meeting all of the expectations\nPerforming\n: 60-65%, “on track” and meeting expectations\nExceeding\n: 25%, consistently surpasses the demands of their current role\nGrowth Potential:\nDeveloping\n: 10%\nGrowing\n: 60-65%\nExceeding\n: 25%\nRemember that “Developing” for Performance and Growth Potential should not be automatically associated with underperformance, and that many newly promoted team members and new hires fall into this category.\nThe Performance Factor\nWhile the primary objective of the performance axis of the Performance/Growth Potential Matrix is to calibrate team member performance, this axis of the matrix also directly impacts the\nPerformance Factor\n, which is a determining factor in the annual compensation review. Please reference the\nTotal Rewards Performance Factor page\nfor more detail on compensation impact.\nMeasuring Performance\nHow can managers determine whether their team members are Developing, Performing, or Exceeding? “The Performance Factor” is determined from several components outlined below. It is\noptional\nto use\nThe Performance Factor Worksheet\nfor weighing the different Performance Factors.\nJob Family Responsibilities and Functional Competencies\nPerformance against Job Family responsibilities, requirements, performance indicators, and functional competencies (if applicable) should be weighted at 60%.\nReview Job Families: Look at the Responsibilities section and how your team member is performing against those responsibilities\nExample:\nSoftware Engineer in Test\nReview Performance indicators per Job Family: Look at the Performance indicators.\nExample:\nSoftware Engineer in Test\n(if applicable)\nFunctional Competencies\nFor management roles, please also review and consider the\nlevels\noutlined in the Organizational Structure.\nGitLab Competencies\nPerformance against these competencies should be weighted at 40%.\nValues Competencies\nRemote Working Competencies\nJob Frameworks\n(If applicable)\nManager and Leadership Competencies\nWhen completing the talent assessment form, team members and managers should reflect on the applicable competencies and job frameworks when filling out the achievements, strengths, and opportunities section.  Given GitLab’s\nCREDIT values\nshould be lived, with each day representing a new opportunity to refamiliarize oneself with said values and strive to implement them in every professional interaction, there is an opportunity for team members and managers to rate how a team member demonstrates each of the CREDIT values.  The following rating scale is used for each value:\nRarely Demonstrated\n: team member demonstrates some of the sub-values associated with this value on an occasional basis.\nSometime Demonstrated\n: team member demonstrates most of the sub-values associated with this value on a regular basis.\nConsistently Demonstrated\n: team member demonstrates a large majority of the sub-values associated with the value in most interactions.\nUse the comment box at the end of the CREDIT values section to provide examples to support the ratings selected.\nWhat is “Growth Potential”?\nWhile performance is focused on the past and present, growth potential is focused on the future. Because of the nature of the future-focus associated with growth potential, it is more difficult to measure than performance, and inherently more qualitative than quantitative. A key element in determining growth potential is the manager and leadership observation and experience working with team members. Managers can gauge team member growth potential against the expectations in their current role or their growth potential to take on different roles across GitLab.\nGrowth potential refers to the ability and desire of a team member to successfully assume increasingly more broad or complex responsibilities and learn new skills, as compared to peers and the roles’ responsibilities outlined in their respective Job Family. This could include the growth potential to move up to the next level in their job family, and/or a lateral move.\nThe Growth Potential assessment helps managers determine the best growth trajectory for their team members. The growth potential assessment will be used as input to leverage our engagement tools, offer lateral and upwards career opportunities, and do succession planning.\nGrowth Potential\ncan change\nover time as team members develop new interests, as new opportunities for growth arise, and as team members continue to broaden their knowledge, skills, and abilities.\nMeasuring Growth Potential\nThere are four primary pillars to consider when measuring growth potential:\n“Growth Potential” Pillar\nDefinition\nAdaptability\nDemonstrating a willingness and ability to learn new skills and apply them to be successful under new, tough, or difficult conditions. Ability to navigate uncertainty and be flexible with change.\nExpandability\nExpandability outside their areas (laterally or vertically), with the willingness and ability to take on a role of greater complexity, impact, and scope.\nConsistency\nDemonstrating effective problem-solving capabilities, the consistent delivery of results over time in changing circumstances, and dependability in the commitments you make.\nSelf-Awareness\nThe depth to which an individual recognizes skills, strengths, weaknesses, blind spots, and is able to reflect and act to improve and invest in their own development. Judgment in decision-making is also a key element of self-awareness. Judgment can be seen through our level of self-awareness in several ways, including communication, collaboration, and results. Judgment can be defined as “The ability to make considered decisions or come to well thought-out conclusions”, and to do this effectively, we need to have a heightened sense of self-awareness in terms of how our communication will come across and how decisions and conclusions drawn will impact others and their willingness to collaborate.\nUnder each pillar there are a few questions that managers should consider when assessing team member growth potential. Please note that the answer to all of these questions does not have to be\nyes\nto determine a team member is “exceeding” growth potential, the questions are here to help guide managers through the thought and evaluation process.\nAdaptability\nDoes the team member adapt to change well? (i.e. realignments, management changes, company changes, etc.)\nDoes the team member seek to learn new skills to further succeed in their role?\nHas the team member demonstrated ability to learn new things effectively under pressure?\nExpandability\nDoes the team member demonstrate interest in other areas outside of the immediate scope of their role?\nDoes the team member invest time in learning new skills that will help them grow (laterally or vertically)?\nHas the team member volunteered for any “stretch” projects or initiatives?\nDoes the team member coach, mentor, and/or influence others?\nConsistency\nDoes the team member consistently deliver results?\nDoes the team member follow through on their commitments?\nIs the team member dependable?\nIf scope or timeline change, does the team member communicate the change and provide updates to stakeholders?\nSelf-Awareness\nDoes the team member respond to feedback aligned with our\nReceiving Feedback Guidelines\n?\nDoes the team member acknowledge their strengths and areas of improvement?\nDoes the team member work towards closing gaps for their improvement areas?\nDoes the team member demonstrate sound judgment in their decision-making?\nGrowth Potential Output\nAfter assessing team member growth potential based on the four pillars outlined above, managers can determine whether team member growth potential is currently developing, growing, or exceeding.\nDeveloping\n“Developing” growth potential generally refers to a team member who is not working at full growth potential against the roles and responsibilities outlined in their Job Family. There could be a variety of reasons for this, including:\nThey are new to their role and did not have the time to demonstrate willingness and/or ability aligned with the pillars of growth potential\nLack of motivation to take on new projects\nMotivated to do what is needed in current job, not in what is required in a higher level\nNot expressing interest or demonstrating desire to continuously learn new skills\nPlease note that “developing” growth potential\ndoes not\nequate to “developing” performance, but correlates with the pillars of growth potential outlined in the “measuring growth potential” section below.\nExamples:\nA team member is recently promoted or is new to the company, and hasn’t had sufficient time to demonstrate the pillars of growth potential for a sustained period of time (and at the new level, if recently promoted)\nA team member has actively expressed that they do not have an interest in learning new skills or take on new projects. In a day-to-day they show self-awareness but they have not shown great adaptability, expandability and consistency to further expand on their role and responsibilities.\nGrowing\n“Growing” growth potential generally refers to a team member who is growing in their current role and demonstrating interest in advancing (up or laterally) and they exhibit knowledge, skills, and abilities that indicate this. Team members with “growing” growth potential generally:\nShow interest in areas outside of their immediate scope occasionally\nAre comfortable in their current role\nAre a stable counterpart for other team members (especially for peers and more junior team members)\nLearn and apply new skills when the job calls for it; apply lessons learned to enhance success\nExample:\nA team member has demonstrated adaptability and expandability but has not been consistent in their results or self-awareness. This holds the team member back from growing to a higher level or taking on more complex responsibilities in their current role.\nExceeding\n“Exceeding” growth potential generally indicates that a team member will be ready for promotion within the next year (or when an opportunity arises). “Exceeding” growth potential team members:\nFrequently seek involvement in stretch project/projects outside of their scope\nInvest in their development; seek feedback to improve and applies that feedback on the job\nDemonstrate ability to learn new skills\nActively pursue increased opportunities to influence decisions and inspire others\nExample:\nA team member has consistently and proactively looked for opportunities to fill gaps and take on stretch projects. When another team member left the team, you leaned on this team member to help keep projects moving forward until you found a suitable backfill. They regularly ask for feedback from peers and adapt their approach accordingly. This has given your team member skills beyond their current job requirements, and broader understanding of the business.\nCalibration\nThe portion of the Performance/Growth Potential matrix that often entails the most significant time commitment is the live calibration session of team members with leadership. The calibration session is very valuable to ensure consistency across the Job Family and level, raise any questions, and provide cross-departmental and/or cross-divisional feedback on team members to capture the assessment of different managers as opposed to the opinion of the direct manager exclusively.\nEnsure consistency and fairness in assessments\nCalibrate on approach and thought process behind assessments\nProvide cross-departmental and/or cross-divisional feedback\nProvide an additional checkpoint to check for\nunconscious bias\nCalibration can be done asynchronously or synchronously, and should be done by level (i.e. Manager calibration for their directs, Director calibration for their directs, etc.) so as not to disclose Talent Assessment evaluations amongst peers.\nToo New to Rate\nFor newly onboarded team members, with a tenure up to 3 months, we have implemented a “Too New to Rate” (TNTR) assessment category. This designation will be applied to individuals with a start date within 3 months of the kick off of Talent Assessment as they have not yet had sufficient time to demonstrate their Performance/Growth Potential according to the defined pillars.\nThe introduction of a “Too New to Rate” category is a solution as feedback was raised that being rated “Developing” in many cases does not reflect the actual Performance/Growth Potential. Therefore a TNTR designation is to accurately reflect the time to get up and running of recently onboarded team members. This category acknowledges that new hires require a reasonable timeframe to familiarize themselves with the organization, their role, and the expectations before they can be accurately assessed using the Performance/Growth Potential Matrix.\nWhile newly onboarded team members do not need to complete the Talent Assessment evaluation in Workday, it’s still important for them to have a check-in conversation with their manager. We recommend that this conversation happens after the team member has completed 3 months with GitLab. We’ve created\nthis template\nfor team members and managers to complete. The goal would be for the newly onboarded team member and their manager to come together to have a conversation reflecting on their first 3 months at GitLab, highlighting their strengths and opportunities, then aligning on any support needed for the team member moving forward.\nBesides team members with a GitLab tenure up to 3 months (New hire TNTR), the “Too New to Rate” designation will also be available for team members that have just transferred or were promoted to a new role. Please see the\nPromotions or Transfer During Assessment Cycle\nsection for more details and guidance on how to evaluate and consider performance in these scenarios.\nIf any of the above cases arise it is recommended that you discuss with your People Business Partner to ensure the Too New to Rate designation is consistently applied.\nCalibration Session\nThe calibration session is one of the most important pieces of the Performance/Growth Potential Matrix process, as it provides time for managers, their peers, and their manager to calibrate. Below are a few communication guidelines to ensure efficiency and fairness during the calibration session discussion.\nBest Practices\nBe conscious of time and consider setting a (reasonable) time limit per team member being discussed.\nReview program guidelines and avoid leniency bias.\nRefer to performance data that you may have taken on a team member throughout the past year - including  any stakeholder or cross-functional feedback, performance against metrics over time, key accomplishments, etc.; this will help avoid bias like recency bias or the halo effect. Please note that when reviewing feedback for the  talent assessment, it’s important to take into account areas in which the team member has improved. Two quarters is a fairly significant amount of time and team members have (hopefully) taken action on improvement areas during this period, which should be reflected in the assessment. Managers and other participants in calibration discussions should be prepared with this information if asked how they determined a rating.\nLeaders should feel comfortable providing feedback on team members in other functions that they have direct experience working with.\nFocus on discussing artifacts that are relevant to the performance factor and refrain from discussing artifacts that are not relevant to performance being developing, performing or exceeding. Examples of artifacts which are not relevant: upcoming maternity/parental leave, personal information/home situation or things that were confidentially shared and do not relate to performance.\nRefer to the competencies, job family, job frameworks and values when deciding what is relevant.\nUtilize the SBI model for\nfeedback\n. Focus on facts and avoid blanket statements as opposed to (i.e. [team member] has poor communication), “[team member] struggled with collaboration during the roll-out of x project and could have improved communication by ensuring they aligned with x stakeholders more regularly during the process. The impact of this was x.”\nCalibration is not a stack ranking of team members. While some inter-person comparison may happen, it should only be to ensure that evaluations are being applied fairly across different raters.\nAsk questions and provide feedback!\nThis may seem obvious, but it is an important aspect to help identify any potential bias\nWho Do I Calibrate?\nIt is likely not necessary to discuss each team member in detail, particularly for larger groups. Calibration sessions typically focus on gaps, outliers and areas that might require additional management attention and/or alignment.\nAs a best practice, we should calibrate outliers. “Outliers” are typically considered to\nBox 1 (“Exceeding Growth Potential” and “Exceeding Performance”) and Box 9 (“Developing Growth Potential” and “Developing Performance”)\n.\nPeople Business Partners\nand business leaders have discretion to expand this threshold as needed, but live calibration for team members in Box 1 and Box 9 should be the baseline across the board.\nA few additional reasons to consider calibrating beyond Box 1 and Box 9 are:\nTeam members close to promotion\nTeam members who have changed assessments from the previous fiscal year (i.e. “Performing Performance” to “Exceeding Performance”)\nTeam members in Box 3 (“Exceeding Growth Potential” and “Performing Performance”) to highlight potential development opportunities from peer groups\nOutliers based on Performance alone (i.e. everyone “Developing Performance” and everyone “Exceeding performance”)\nAnyone hired in the last 3 months assessed as Performing or Exceeding for Performance aligned with eligibility guidance\nAnyone identified as Key Talent\nCalibration Session Pre-Work\nIt is\nabsolutely essential\nthat managers complete the required pre-work to ensure that the live calibration session is as efficient and productive as possible. Pre-work includes:\nFor calibration sessions you can leverage\nthis agenda template\nReview the team member’s own\nSelf-Evaluation\nif they have completed one, if they wished to complete one.\nReview the Job Family/Families that will be calibrated in detail\nReview our competencies\nTalent Assessment Training\nJob frameworks\nHigh Performing Team Indicators\nValues competencies\nRemote work competencies\nFunctional competencies\n(if applicable)\nDetermine the appropriate box for each of your team members\nAdd notes for each of your team members to the agenda, at least 12 hours before the session\nAn example of notes could include:\n2-3 strengths/accomplishments (and supporting examples)\n2-3 improvement areas\nAnything else noteworthy (i.e. recently promoted or transferred, etc.)\nKeep the\nSBI Model\n(Situation, Behavior, Impact) in mind when adding notes for strengths/accomplishments and improvement areas. Each point should include clear examples and blanket statements should be avoided.\nReview the notes of your peers for other team members and add feedback/questions/thoughts for discussion\nIf you did not attend the people manager live training session, please access the training video.\nTopics To Avoid\nWhile we want to encourage open and transparent conversation during calibration session, there are certain topics that should be avoided to ensure we respect team member privacy.\nSharing whether team members are currently undergoing\nformal performance remediation\n. It is okay to share that team members are receiving coaching, but specifics pertaining to Written coaching, PIPs, etc. should be avoided.\nAnything related to health (i.e. medical diagnoses, conditions, disabilities, etc.). It is okay to share that team members have a lot going on in their personal lives, but we should not go into detail.\nNote that this applies for team member’s friends/family as well.\nIdentifying Action\nAfter the calibration sessions the performance and growth potential outcomes can be used as input for the following:\nCareer Development Conversations\nPromotion planning\nIdentifying\nL&D opportunities\nSuccession Planning\nQ4 Formal Talent Assessment\nTimeline\nDetailed dates for FY26 are pending and process is subject to modification. In general the timeframe runs from January through March with ACR (compensation statement) release in April and compensation changes and promos effective beginning of May.\nNote that different departments may have additional due dates built into the high level timeline, so please follow up with your\nPeople Business Partner\nif you have any questions.\nBelow are the current activities for the formal assessment beginning in Q4 (January)\nKick off Optional Self-Evaluation cycle for all Team Members\nDue date for all Self-Evaluations\nManagers begin to review their team members self evaluations and gather feedback. Workday Calibration cycle opens and Calibration discussions occur\n5:00pm PST Workday Calibration will be locked\nKick off the Manager Evaluation cycle in Workday\nAnnual Compensation Review Kicks off for Managers\nDue date for all Manager evaluations. Talent Assessment in Workday is locked.\nTotal Rewards and final E-Group review and approval\nManagers can communicate Performance/Growth Potential assessment and Annual Compensation Review to team members\nTalent Assessments pending in Workday will be auto advanced to team members*\nAnnual Compensation Review effective date\n*Team members who are on Leave of Absence (LOA) on TBD are excluded from the auto advancement of their talent assessment until they return to work.\nNote: For full details on our Annual Compensation Review (ACR) timeline and cycle, please refer to our ACR\nhandbook page\n.\nCadence\nGitLab completes talent assessment\nat least\nonce per year in Q4, with a recommended informal mid-year check-in. The formal assessment ideally takes place prior to the\nannual compensation review\n. Our e-group completes Performance/Growth Potential Matrix multiple times a year for their direct reports.\nEligibility\nAnyone hired on or before January 31st should receive a Performance and Growth Potential assessment, as they are eligible for Annual Compensation Review. However, if the team member being assessed has been with GitLab for a period of 3 months or less or recently transferred roles or was promoted, please see the\nToo New To Rate description\n.\nTeam Member Self-Evaluations\nIt is up to all team members’ discretion if they wish to complete their Self-Evaluation in Workday. While they are voluntary, self evaluations are highly encouraged so the team member’s perspective is captured and shared with their manager prior to the manager’s evaluation and Calibration Sessions. Please review the most current\ntimeline\nto ensure a timely delivery.\nTeam members may use Claude, Insights, and GitLab Wrapped to assist in the preparation of your self evaluation.  AI tools like these can be super helpful to assist you in gathering information about your accomplishments, or helping you brainstorm how you might refine your self evaluation. However, meaningful human input and review is always required, and you should not rely solely on Claude to write your self-evaluation.\nMatrix Assessment Timeline\nThe Performance/Growth Potential Matrix typically takes 4-6 weeks to complete from beginning to end. Steps are as follows:\nTeam members have the opportunity to complete a Performance Review Self-Evaluation if they so wish, and share it with their manager through Workday.\nManagers complete a Manager evaluation and Performance/Growth Potential ratings for their respective team members\nLive session takes place for calibration with managers up to E-Group level\nExecutive Review (leadership meets to review the matrix results, key talent, promotion requests, development and performance actions, review discrepancies, and measure against previous matrix results)\nTalent Management and People Analytics performs an equality review.\nFinal approval of E-Group members and Total Rewards.\nAnnual Compensation review kicks off after Talent Assessment\nPerformance/Growth Potential and Annual Compensation Review updates are communicated to team members\nFinal Assessments in Workday\nAligned with the\ntimeline\n, managers can see final assessments for each of their team members in their respective Workday profiles.\nPromotions or Transfers During Assessment Cycle\nThe cut-off date to determine whether to assess team members as Too New to Rate based on recent promotion/transfer for the FY25 Talent Assessment cycle is based on their time in role prior to the start of the Talent Assessment cycle,\n2025-01-27\n. Please note, that a “transfer” constitutes as a change to one or multiple of the following things: job family, department, division, or job grade. A change in job title specialty and manager alone would not constitute as a transfer.\nGuidelines are as follows:\nIf a team member interviews and transfers or is promoted to a new role, with an effective date\nwithin\n90 days of the start of the talent assessment cycle or throughout the talent assessment cycle (on or after 2024-10-01), guidance would be that they should be assessed as Too New to Rate.\nFor example, if a Senior Manager is promoted to Director on 2024-11-02, they would be assessed as\nToo New to Rate\nfor the Talent Assessment cycle.\nIf a team member interviews and transfers to a new role or was promoted to a new role more than 90 days before the start of the talent assessment cycle (on or before 2024-10-01) they would be assessed based on the new level/role.\nFor example, if a Senior Manager is promoted to Director on 2024-09-15, they would be assessed based on the new Director-level role for the Talent Assessment cycle.\nException for FY25 Talent Assessment Cycle\n: Due to the transition of our promotion cycles, team members who receive a promotion effective in the FY26 Q1 (Feb 1) cycle, will receive a talent assessment rating that is reflective of their full FY25 performance, and not be classed as TNTR for this talent assessment cycle. For example, if a Senior Manager is promoted to Director effective 2025-02-01, their Talent Assessment should reflect their Senior Manager level to ensure we are capturing a full year of Performance and Growth Potential feedback.\nIt is important to note that because being promoted recognizes high performance both in terms of increased scope/responsibility and monetarily through compensation increase therefore a\npromotion “resets” the performance factor evaluation\n.\nWhile a recent promotion resets the performance factor evaluation, and a job transfer is internal mobility that may be a lateral job level, there are  soft skills and technical skills that are most likely transferable. When assessing team members who have transferred teams or changed roles throughout the year, managers should gather feedback from the previous manager on performance as well and take that into account when evaluating and documenting performance to reflect performance for the entire year. Managers should also provide the team member feedback on how they’re doing in their current role to ensure they’re set up for success, and aware of feedback moving forward in their current position.\nBest Practices for Communicating Performance/Growth Potential Factors\nCommunication\nIn most companies the Performance/Growth Potential Matrix is used exclusively as a management tool and results are not typically shared with team members. In the spirit of our transparency value, we want to encourage feedback with team members.\nDiscussion topics that arise during calibration sessions (or at any other point during the assessment process) are confidential. Please do not share with anyone other than each individual team member.\nAfter calibration sessions are done and performance and growth potential factors are determined, it’s time to communicate the final results with team members.\nPlease follow the Talent Assessment timeline and communicate performance and growth potential ratings to team members in your performance review conversations within the communication window\n. The conversation following the talent assessment process is the most important part; it is a great way to drive alignment with your team members and set them up for success moving forward.  Below are  some of the best practices for communications, but remember, if you are ever in doubt please reach out to your manager or\nPeople Business Partner\nfor additional support.\nCommunicate performance and growth potential factors face-to-face over Zoom\n. As a manager, this is the opportunity for you to have a conversation with your team member about their performance and growth potential. Having the conversation over Zoom allows for you to have a dialogue with your team member (versus just sharing their performance and growth potential factor asynchronously) and allows you to pick up other information, like tone and non-verbal cues which can tell you more about how someone is feeling during this conversation. You may also choose to share the PDF of the review prior to the conversation so that your team member has time to process the information. If so, ideally share just 1-2 days prior to the conversation so you are able to address questions promptly.\nPrepare for the discussion ahead of time.\nAs a manager, you should prepare in advance of calibration discussions with your team members. Before communicating a team member’s\nperformance and growth potential factors\n, it’s beneficial to look back through your preparation document, notes, and anything relevant that was discussed as part of the calibration exercise. Be prepared with notes on the following:\nAreas the team member is doing well\nAreas that need improvement\nAreas that you identified as either strengths and/or development areas that differed from the team member’s self-assessment.\nProvide specific examples for both strengths and improvement areas. The\n(Situation - Behavior - Impact) model can be effective for delivering examples structured in a way that makes impact clear to team members.\nThink about recommendations and/or focus areas for a team member’s development OR if a team member has an active\nIndividual Growth Plan(IGP)\n, consider how the feedback fits into their current IGP\nSchedule a separate call or repurpose your\n1:1\n) to discuss a team member’s performance and growth potential factor\n. The performance and growth potential factors should be communicated at the beginning of the meeting. This allows the team member time to ask questions, discuss their assessment, and most importantly, determine next steps. If your 1:1s are often filled with agenda items, the recommendation is to schedule another call to make sure you have ample time allocated.\nProtect the confidentiality of other team members\nby avoiding saying things like “you were the only team member to be rated this performance factor.”\nAvoid making future promises\nlike, “In the next review, I will rate you X performance/growth potential factor.”\nSample Script for Delivering a Talent Assessment\nThe script below is intended to help you structure your Performance and Growth Potential conversation. Personalizing this conversation to reflect your authentic tone will make this a more effective conversation with your team member.\n“Thank you for taking some time today to discuss your Performance and Growth Potential. I wanted to discuss your achievements and strengths, improvement areas, future development, and the final result of the talent assessment.”\n“I assessed your performance factor as *\n[Insert Performance factor]\n:”\nExceeding\n(consistently surpassing the demands of their current position)\nPerforming\n(“on track” and meeting all expectations of current position)\nDeveloping\n(room to learn and grow, not currently meeting all expectations of current position)\nToo New To Rate\n(hired or transferred <90 days from the start of the Talent Assessment program)\n“I assessed your performance as\n[Insert Performance Factor]\nbecause:”\nI assessed your performance against your job responsibilities as\n[Insert Performance Factor]\n.\nYour strengths in your job responsibilities are [Insert strengths with supporting examples]\nYour opportunities in your job responsibilities are [Insert opportunities with supporting examples]\nI assessed your performance against values competencies as\n[Insert Performance Factor]\n.\nYour strengths in aligned competencies are [Insert strengths with supporting examples]\nYour opportunities in aligned competencies are [Insert opportunities with supporting examples]\n“I assessed your growth potential factor as *\n[Insert Growth potential factor]\n:”\nExceeding\n(ready to take on more responsibilities within the next year (or when an opportunity arises))\nGrowing\n(growing in current role, demonstrating interest in advancing (up or laterally) and they exhibit knowledge, skills, and abilities that indicate this.)\nDeveloping\n(not working at full growth potential against the roles and responsibilities)\n“I assessed your growth potential as\n[Insert Growth Potential Factor]\nbecause:”\nI assessed your growth potential against the four pillars of growth potential as\n[Insert Growth Potential Factor]\n.\nYou have shown X, Y, Z [Insert strengths with supporting examples]\nYour opportunities to further grow in your role are X, Y, Z are [Insert opportunities with supporting examples]\nIf a team member was identified as\nkey talent\n, please ensure to communicate to the team member during the talent assessment conversation.\nI’d like to thank you for your hard work as, and I look forward to continuing to work together! Do you have any questions?\n[Allow team member to ask questions and respond]\nAs a next step, let’s schedule some time to talk more about what you want to do in the future and create a career development plan together OR let’s talk about how this feedback should be incorporated into your Individual Growth Plan.\nSample Next Steps\nThe most important part of the talent assessment discussion is to determine next steps in partnership with your team member. The team member should be the DRI for the next steps with support from you as their manager. Our\nCareer Development handbook page\nincludes a lot of great information and resources on career development including\nan Individual Growth Plan guide\nwhich should help provide structure and a plan for next steps.\nIf you have any questions or concerns about next steps, please contact your manager and/or your\nPeople Business Partner\n.\nInformation Guide\nPerformance/Growth Potential Review General Information\nWhy does this matter to me?\nThe Talent Assessment involves all team members and managers.\nTeam Members are assessed according to\nperformance\nand\ngrowth potential\n. Team Members should be prepared to have a conversation with their manager about their performance and growth potential in\neach year.\nManagers assess their team members’\nperformance\nand\ngrowth potential\n. Managers attend calibration meetings in which team members’ ratings are discussed and evaluated to ensure consistency and minimize bias. Once the program closes, managers are responsible for communicating Performance/Growth Potential Factor to team members.\nCan I use Claude or other AI tools to help me with my self evaluation?\nYes. You may use Claude, Insights, and GitLab Wrapped to assist in the preparation of your self evaluation.  AI tools like these can be super helpful to assist you in gathering information about your accomplishments, or helping you brainstorm how you might refine your self evaluation. However, meaningful human input and review is always required, and you should not rely solely on Claude to write your self-evaluation.\nCan I utilize Claude or other AI tools to help with manager evaluations?\nClaude is the only AI tool you are permitted to use for this purpose, and it may only be used to assist in the writing of manager evaluations. Use of Insights, GitLab Wrapped, or any other AI tool for the assessment of team members or the writing of manager evaluations is not permitted. Claude can be super helpful to assist you in brainstorming how you might refine the feedback in your manager evaluation. However, meaningful human input is required in assessing performance and growth potential of your team members, and you should not rely solely on Claude to write manager evaluations. We also have a robust calibration process in our talent assessment program to ensure we are consistently and fairly assessing performance and growth potential across GitLab.\nHow does this impact the way I work at GitLab?\nThe Performance Assessment\nis an evaluation of your performance against\njob family responsibilities\nand\nGitLab competencies\nand\nGrowth\nis evaluated against the 4 pillars of Growth Potential. Both can help you determine strengths and improvement areas that you can apply in your day-to-day work/way you work.\nHow does this impact the teams I lead?\nAs a manager, you assess your team members’\nperformance\nand\ngrowth potential\n. Managers attend calibration meetings in which team members’ assessments are discussed and evaluated to ensure consistency and minimise bias. Once the program closes, managers are responsible for communicating Performance/Growth Potential Factor to team members.\nWho can I reach out to in supporting me during Talent Assessments for my team?\nYou can reach out to your manager or your\naligned People Business Partner\n.\nAs a manager, when reviewing my team members, what is the difference between Developing and Underperformance?\nThe “Developing” rating means that the team member is not (yet) meeting all of the responsibilities and competencies for the role. This can be for many reasons, including a recent start date. By contrast,\nUnderperformance\ninvolves\nconsistently\nnot meeting the goals and requirements of the job; GitLab follows specific processes to attempt to remediate.\nWhile everyone within the Developing category isn’t automatically Underperforming, a team member who is Underperforming would also be grouped into the Developing category, because Performing is not an accurate assessment.\nTeam members who are on a formal Underperformance remediation plan, such as a\nPerformance Improvement Plan\n, are not eligible for a compensation increase as a result of the\nAnnual Compensation Review\n.\nWill my Growth Potential assessment impact my compensation?\nYes both Performance, Growth Potential, and Key Talent Assessment can impact your Total Rewards.\nCan my performance factor be changed?\nAfter the Talent Assessment closes, the performance factor cannot be changed. You should work with your manager to develop a plan to develop your performance for future assessments.\nDoes this mean I am automatically getting an X% increase in the upcoming Annual Compensation Review?\nThe Performance/Growth Potential Factor is one of the factors considered in the\nAnnual Compensation review\n. The recommended increases displayed in the handbook are there to ensure company wide consistency. The factors taken into account for the Annual Compensation Review are:\nYour hire date (new hires hired after October 31st are ineligible for compensation review)\nOther compensation increases received over the last year\nTiming of promotion and/or role changes\nYour current placement within the compensation band\nLocation factor\nRole benchmark updates\nCompany budget for compensation increases\nWhen is the next opportunity for my performance to be reviewed?\nTalent Assessments are formally conducted at the beginning of the fiscal year (Q1) to assess the prior year, and we encourage a mid-year check-in at the half-year.\nWhat can I do to change my performance factor in the future?\nThere are many things that you can do to change your performance factor in the future. Please work with your manager on a career development plan and discuss actions that can be taken to improve.\nCan my Growth Potential rating be changed?\nAfter the Talent Assessment closes, your growth potential factor cannot be changed. Your manager assessed your growth potential factor and this would be an opportunity for you and your manager to align on your growth opportunities. This discussion can also be an input into your career development discussion.\nWhat can I do to change my Growth Potential rating in the future?\nThere are many things that a team member can do to change their growth potential factor in the future. Talk with your manager about how you might be able to develop a plan to increase your\nexpandability, adaptability, consistency and self-awareness\n. Do you currently possess all the skills needed for your current role? Have you identified what skills you would like to learn? Have you determined what your career goals are, and are you actively working towards those goals? Are there additional projects to take on, to stretch your current responsibilities and/or skills? These are some discussion questions that might help you and your manager align on a future plan for growth.\nMy team member is currently on a performance remediation plan; how should I handle this?\nYou should continue to move forward with communicating their performance factor to them and use the meeting as an opportunity to reinforce the expectations of meeting the goals highlighted in the plan.\nTalent Assessment - Manager Scenarios\nMy team member is on a leave (protected leave or PTO) during the Talent Assessment period. How should I handle communication of their assessment?\nIf they will be returning from leave before the due date to communicate\nTalent Assessment results\n, please wait until their return from leave to communicate their assessment. If they are returning from leave after the due date to communicate Talent Assessment results, you may email them to offer to discuss their assessment. If they do not reply or prefer to wait until their return, please respect that choice.\nMy team member was on protected leave for a large portion of the Talent Assessment period. How should I factor this in when assessing them?\nIt’s important to ensure you are assessing the team member’s performance for their contributions while working during the assessment time period. There should be no adverse impact on their overall assessment due to being on leave for a portion of the period. During calibration, please remain vigilant to ensure no private details related to their time away are disclosed. Please reach out to your PBP to discuss the specific details related to your team member.\nMy team member is on leave of absence during the Talent Assessment communication window. What happens to their Talent Assessment?\nPlease do not action the To-Do task “Meet with your Employee” if your team member is on leave of absence (LOA). We will exclude team members on LOA from the auto advancement setting on TBD and you can communicate their talent assessment when they return to work.\nMy team member was assessed as key talent last year, and is not for this assessment period. How should I handle communication with them?\nThere is no guarantee that team members will retain their key talent assessment each assessment period. Make sure to explain the reasons why their key talent assessment has changed, including how we assess Key Talent and the\ndefinition outlined in the Handbook\n.\nRemember to end the conversation by discussing what your expectations are of key talent going forward. It’s important not to make promises about future assessments, but to focus on what makes a team member critical to the business, and how you, their manager, will support them.\nMy team member was exceeding performance last assessment, and is not for this period. How should I communicate this change?\nIt’s important to take a look at what may have changed since last year. Is your team member in a new role? On a new team? Did they take on bigger stretch assignments?\nAny of these factors can influence a team member’s performance. Be prepared with specific examples to share which support your performance assessment. The feedback conversation should also focus on what success looks like for the team member in the year to come and how you, as the manager, can support them with their goals.\nI have just adopted a new team, and the previous manager is no longer at GitLab. How can I assess the performance of my team fairly?\nYou may be able to gather insights from your manager or cross functional stakeholders who have worked closely with the team member in the performance period. You may have access to the recent 360 feedback for each of your team members, as well as their talent assessment from last year to help inform your thinking. If you haven’t already, it’s important to ask the team member to share their own perspective on their accomplishments prior to you taking the role, so you are well prepared for the discussion of your assessment.\nA team member recently moved to be my direct report, however for the majority of the performance year, they reported to another manager. Are there options to delegate or re-assign the manager evaluation to their previous manager?\nAs a manager, you can delegate the manager evaluation to another manager in your direct management chain. If your team member moved from another manager in another organization, you should collaborate with the previous manager to write the review with their input. The previous manager can leverage the Talent Assessment\ngoogle template\nto capture their feedback and provide it back to you so that you can enter it into Workday. As the new manager, you will be responsible for the calibration of team members in your management chain at the time of calibration. You should also ensure your communication of the final talent assessment is done in a joint conversation with the previous manager, you as the new manager and your team member.\nThis would be a great opportunity to ensure a formal transition and knowledge of performance and feedback takes place between previous manager and new manager. Please enter a HelpLab request if you have any questions about your specific scenario.\nMy team member does not agree with their placement in performance and growth potential. How should I approach this?\nRemember that this conversation will be most effective if you are well prepared. If you haven’t yet, take an opportunity before the performance and growth potential conversation to understand their own assessment of their results.\nDuring the performance and growth potential conversation, provide the opportunity for a dialogue with your team member. Remain open and curious about their perspective. Engage in active listening, ensuring that you aren’t planning your counterpoints while they are sharing. The expectation is not that the results will necessarily change but the insights they provide may shape how you both think about their growth and development path.\nIf you feel a conversation might be particularly challenging, you may reach out to the TMR team or your PBP to role play the discussion and ensure you are prepared.\nMy team member is exceeding growth potential expectations, how should I be thinking about their ongoing development?\nGreat! At GitLab team members have the opportunity to own their own development, and deserve a great manager (you) to facilitate it. Ask your team member to articulate where they would like to see their skills and career develop. You may have insights that help them refine those goals based on where you see the business going, as they will be most successful in gaining the experience they’re looking for if there are opportunities to align those goals with business goals.\nThe\nCareer Development handbook page\nhas more ideas to help your team member craft a growth plan, including information on GitLab’s\nGrowth and Development benefit\n.\nHow should we be communicating Growth Potential to team members?\nFirst, ensure the team member understands what we mean when we say we are assessing Growth Potential, including the\n4 pillars\nthat you considered when making the assessment. Be prepared with specifics that led to your evaluation.\nRemember, Growth Potential can change over time as team members are promoted, develop new interests, as new opportunities for growth arise, and as team members continue to broaden their knowledge, skills, and abilities. Avoid making promises, but if your team member sees themselves in a higher position, help them understand behaviors you expect to be able to assess them differently next time.\nI received unexpected feedback about my team member from a cross-functional stakeholder in my calibration session. What should I do?\nIf you receive unexpected feedback during the calibration, ensure you really understand what happened, and what has been discussed with your team member so far. If someone has tried to help this team member in the past, how did it go? Can your peer provide specifics to help you understand the impact of the behaviors? Talk to your peer about the importance of using this feedback to help your team member grow, and make sure you have agreement on how you plan to deliver this message.\nDuring the discussion with your team member, be prepared to gain their perspective on the situation first. Listen actively and consider their point of view. When delivering the message, consider the root cause, focus on impact and alignment with our values, and end with a discussion on future actions that would be more successful.\nIf and when appropriate, check in with your peer on how improvements are going. Be sure to stay close to the situation so you are in a position to deliver more timely feedback if the behavior is ongoing.\nHow do I assess team members in acting or interim roles?\nFor team members who have assumed an\nActing or an Interim role\n, we will assess team members aligned with their\npermanent positions\n(i.e. not the Acting or Interim position).\nAs the Talent Assessment impacts compensation, and Acting/Interim periods are not permanent, in the instance that a team member does not end up moving into the Acting/Interim role permanently, we would not want to have their compensation impacted by a temporary position.\nMy team member is performing at a high level in terms of results, but they struggle with behavioral alignment to one or more of our values. How do I take the “how” into account when I am assessing their performance and growth?\nReview the handbook content on how we\nmeasure Performance\nand how we\nmeasure Growth Potential\n. When a high output/results-oriented team member is struggling with soft skills and/or behavior, this is oftentimes related to improvement areas in terms of alignment to our\nvalues competencies\n, and/or our\nGrowth Potential pillars\n(particularly, but not limited to, Self-Awareness). Considering our measurement guidelines for Performance and Growth Potential holistically, and be sure that your assessment takes all of our competencies, job family responsibilities, and pillars into account.\nMy team member has the skills to perform, but there are\nwill-based performance issues\nthat are impacting their ability or the team’s ability to succeed. How should I think about this in terms of assessing their performance?\nFirst, act early. Do not wait for a formal performance and growth potential assessment conversation to deliver feedback about your concerns. Be specific, and document your conversation. Loop in a TMR specialist for support as these conversations can be challenging.\nReview the definition of “Developing” performance. Note that one criteria that applies to this category is a team member who is struggling to perform in a way that is aligned to our values and competencies. Think about the specific behaviors or impacts of their work or how they are working that have led you to assess that they are not fully engaged. Despite having the skills, if your team member is not contributing at the level they are expected to be, you should consider that a performance issue in the way you would a skill based performance issue. Keep in mind that not addressing these challenges may be affecting your other team members, especially those who may be picking up the slack. We encourage to review the handbook page on\nUnderperformance\n.\nMid-Year Check In\nGreat managers share\nfeedback\nwith team members year-round in 1:1 meetings and ad-hoc. A dedicated Mid-Year check-in is a useful tool to support a  holistic discussion between team member and manager about how things are going as we approach the second half of the fiscal year. During the Mid-Year check in, we assess how things are going from both the team member and managers’ points of view, and share feedback to help inform performance and development plans. Leaning into where things are going well, as well as uncovering blind spots or improvement areas early are the keys to delivering great results. A Mid-Year check in complements weekly, on-going feedback, so we recommend documenting your discussion in your 1:1 doc to support frequent updates on action items and development goals.\nGoals of the Mid-Year check in are:\nTo provide a dedicated space for questions/clarification about performance and growth opportunities at GitLab\nTeam members share a cumulative self assessment of their performance against expectations and progress on development goals\nManagers respond, and provide their own cumulative update to the team member on how things are going. This should build on the regular performance feedback they should be delivering weekly in 1:1s and ensure no surprises at the end of the year review.\nEligibility\nTo participate in the mid-year check in we recommend that team members have at least 3 months of tenure so accomplishments and improvement areas are able to be clearly outlined with examples.\nProcess\nRecommended process for our Mid Year check-in will be as follows:\nTeam Member Led: Team member provides a self-assessment on their own performance in their\n1:1 document\nGoogle docs template\nis available to guide the self-assessment process. Team members are encouraged to author a document based on this template, share it with their manager and link it to the top of their 1:1 document. Team members should reflect on their achievements, strengths, and opportunity areas since the last formal Talent Assessment in Q4. It is the team member’s responsibility to provide the self-assessment and bring it to the conversation with their manager to discuss and align on. Linking the document to the 1:1 agenda ensures the self-assessment is available to come back to throughout the rest of the year.\nThe template contains an agenda for the Mid-Year check-in as follows:\nAchievements\nList your 3 most significant achievements since the last formal\nTalent Assessment\n, aligned with the job responsibilities and expectations of the role. This can include significant impact to the department or company, customer-impact, community-impacting, etc. Feedback can also be included in this section if applicable.\nStrengths & Opportunities in Role\nIn this area the goal is to determine 2-3 strengths and 2-3 opportunity areas in accordance with your role, job family, and\njob framework\n. Include examples when necessary to provide clarity or context.  Ensure there are actionable takeaways.\nSupport Needed\nA place to outline any support needed from your manager for your ongoing success and development at GitLab.\nManager Feedback\nManagers will provide additional feedback or response to the self-assessment outlined above. Managers should be sure to reference the Achievements (3) and Roles & Responsibilities (Strengths and Opportunities) outlined by the team member above, and to any additional thoughts or feedback (2-3 points).\nNext Steps\nA space for the team member and manager to document any relevant next steps stemming from this conversation. This could be a full\nIndividual Growth Plan\nor a couple of key actions or development opportunities for the individual.\nManager Feedback: Team members let their manager know when they have provided their self-assessment overview in their\n1:1 document\nTeam members should share their Mid-Year Check In document with their manager at least one week prior to the live discussion to ensure managers have time to review the content, and to add in their own feedback in the\nManager Feedback\nsection.\nLive Discussion\nTeam members and managers use a dedicated 1:1 to discuss the Mid Year check in.\nAlign on actions/next steps\nTeam member and manager align on action items stemming from the conversation to best support team member development and alignment to their goals. You are encourage to leverage our\nCareer Development and Mobility\n) handbook page for ideas and inspiration.\nTimeline\nMid-Year Check-In Timeline (FY2026):\n2025-06-16 – 2025-06-30: Manager & Team Member preparation & 360 feedback gathering (optional)\nw/c 2025-06-30 & 2025-07-07: People Manager Enablement Sessions\n2025-07-01 – 2025-07-18: Mid-year conversations conducted & documented\n2025-07-21 – 2025-07-25:Follow-up on development & performance goals\nSuccession Planning\nSuccession planning is an important step in our Talent Assessment process. Completing the\nPerformance/Growth Potential Assessment\ngives leaders a fresh overview of the top performers and the highest growth team members in their respective organizations. Particularly for individuals in Senior Leadership roles and above (the\nS-Group\nand depending on structure the\nDirector-Group\n, a recommended next step following the Performance/Growth Potential assessment is to do succession planning.\nSuccession planning ensures we are identifying and developing future GitLab leaders to ensure business continuity in the event of an unforeseen change, and providing the current leadership team the opportunity to grow and scale. It may provide an opportunity to diversify our leadership team by developing our internal bench of talent. Note, potential alone does not determine who will be a successor. Strong succession candidates should demonstrate sustained exceeding performance and growth, aspire to have a role at the next level, and be ready for a much larger role in the near term.\nQuestions we should ask ourselves when thinking about succession planning (and the individual(s) identified) are:\nWhat are our current and upcoming business goals?\nDoes the successor candidate have a track record of delivering strategic results, working in alignment with our values, and demonstrating high growth potential?\nDoes our successor candidate have skill gaps that must close before they are ready to deliver on the business goals identified?\n(if we do have skill gaps)\nCan we develop our successors to close those gaps? If so, how? How long will this additional exposure and skill development take? Who else at GitLab should we engage to support their development?\nIf not, do we need to hire externally to ensure business continuity?\nIf we do not have anyone who could assume the role in an emergency situation, what is our plan to provide emergency coverage?\nSuccession Planning Process\nThe succession planning process might vary slightly for different areas of the business depending on size and structure, but at a high level the process should flow as follows:\nLeaders go through the\nPerformance/Growth Potential Assessment\nprocess for all of their direct reports.\nIdeally, this process includes\ncalibration\nto generate a level of initial familiarity amongst leadership peers with the talent in the organization.\nLeaders identify and document their respective successors\n(and emergency coverage plans if the identified successor could not currently cover in an emergency situation) leveraging\nthis template\n.\nSuccession plans are reviewed with peers\n(i.e. all other executives, all other senior leaders in the function, etc.) and your\nPeople Business Partner\n, ideally during a synchronous session to facilitate discussion and questions.\nDevelopment plans are finalized\nfor successors and documented in the successor slide.\n(if applicable)\nSkills gaps impacting ability to achieve business goals are identified and actions are put in place\nto ensure these gaps are closed/minimized (i.e. stretch assignments, increased visibility and exposure, or hiring)\nSuccession Readiness Definitions\nSuccession Readiness\nDescription\nEmergency (ER)\nSomeone who could take over this role if the current person were affected by a\nlottery factor\nor had to take emergency leave. Has competency and experience to provide coverage on an interim basis (~6 months), but may not be suitable for the role long-term\nNote: If there is no one who could assume the role today in an emergency situation, part of the succession coverage plan should include an overview of recommendation steps (i.e. engaging a consultancy, splitting up the team, etc.)\nReady Now (RN)\nSomeone who has 90% of the competency & experience to take the role now\nReady in 1-2 years\nWith additional responsibility & exposure, could take the role soon. Likely has the competency and experience to provide coverage on an interim basis if there is an urgent business need\nReady in 2-3+ years\nLonger term candidate who requires significant development. May also have the competency to provide coverage on an interim basis if there is an urgent business need.\nNote that the\nEmergency Coverage\nslide in the\ntemplate above\nshould only be used to if the identified successor could not provide temporary coverage for the current leader in an emergency situation.\nResources\nResource\nPurpose\nWorkday: Self Assessment & Manager Evaluation Template\nTeam members and managers can leverage this template to begin thinking through and documenting the optional self-assessment and the manager evaluation for the Talent Assessment. Please note that this template is for team members who would like to get an early start ahead of Workday launching the Talent Assessment cycle, however, all assessments will need to be transferred over to Workday for formal documentation and calibration.\nWorkday Job Aid: How to Complete My Annual Self Evaluation\nTeam member instructions for how to complete their annual Self-Evaluation task in Workday.\nWorkday Job Aid: How to Complete the Manager  Evaluation and Assess Growth Potential\nManager instructions for how to complete their Manager Evaluation task and Assess Growth Potential task in Workday.\nWorkday Job Aid: How to Complete Talent Calibration\nManager instructions for how to complete their Talent Calibration in Workday.\nWorkday Job Aid: How to Facilitate Calibration - PBPs\nPBP instructions for how to facilitate calibration sessions in Workday.\nWorkday Calibration Video Tutorial\nManager instructions for how to complete their Talent Calibration in Workday.\nTalent Assessment Calibration Agenda Doc\nThis template can be used by managers to ensure similar pre-work, structure, and context to generate alignment ahead of live calibration sessions. The agenda is also recommend to ensure rationale behind potential assessment changes during calibration are recorded.\nValues competencies\nValues competencies form an important part of the Performance Factor evaluation and are important to review prior to beginning the assessment period.\nHigh Performing Team Indicators\nWe’ve broken down each characteristic of high performance to help you recognize and measure success.\nRemote work competencies\nRemote work competencies form an important part of the Performance Factor evaluation and are important to review prior to beginning the assessment period.\nFunctional competencies\nFunctional competencies (for groups that have them developed) can also influence the Performance Factor and should be reviewed prior to the assessment period.\nIt is important to me mindful of unconscious bias always, and especially during talent reviews and assessments. It is highly recommended that you review the handbook page and watch the training.\nPerformance Factor\nhandbook page\nThis page is the SSOT to review the Performance Factor’s impact on compensation.\nKey Talent\nKey Talent Criteria\nKey Talent makes up roughly ~10% of the population. Key Talent represents team members who have a significant impact on GitLab’s present and future success. They deliver quality results that are instrumental in moving critical company initiatives forward and do so consistently in alignment with our values. These team members are often recognized as experts in their current role. Team members, at any level, can be considered Key Talent.\nTeam members identified as Key Talent typically have knowledge, skills, and experience that:\nSubstantially impacts the company’s ability to achieve significant milestones and results\nDemonstrates consistently strong performance\nDemonstrates growth potential; the ability and desire to assume increasingly more broad or complex responsibilities and learn new skills.\nHas an outsized, measurable impact on business performance\nHas a significant impact to the operation of a critical functional area\nHas demonstrated the ability to scale with the organization\nKey Talent, Performance, and Growth Potential\nTeam members identified as key talent must be assessed at minimum Performing and Growing (Box 4) in the\nTalent Assessment process\n.\nAlthough Performance and Growth Potential are a consideration in the Key Talent selection process, they are not the only criteria used to determine the designation and should not be used in isolation. It is important to look holistically at the Key Talent Criteria outlined above when determining who qualifies as Key Talent on your team.\n“TNTR” (Too New to Rate) team members can be considered key talent but this would be an exception. In order for a “TNTR” team member to be identified as key talent they must meet the criteria above and be ramping successfully in their new role.\nWe exclude team members rated “TNTR” when we calculate our Key Talent distribution across the company. E.g. Team members designated Key Talent during Calibration\ndivided by\nTalent Assessment eligible team members (excluding TNTR) = Key Talent Distribution %\nBelow are a few examples to help managers think through Key Talent designations as they relate to Performance and Growth Potential:\nA team member that has a performance assessment of “Exceeding” is not automatically indentified as Key Talent. Perhaps they are doing exceptionally well in their role, but the impact on business performance may not be significant enough to meet the definition above.\nA team member that is new to the role due to recent promotion and rated “TNTR” could be identified as Key Talent if they are ramping successfully in their role and have a high impact on the ability for the company to achieve results.\nNote: Intentionally hoarding knowledge is in direct conflict with our\ntransparency value\nand is viewed as a performance issue as we measure performance based on alignment with our values.\nKey Talent and Single Points of Failure (SPOF)\nSingle Points of Failure (SPOF) refers to a single person whose absence would significantly impact the ability of an area of the company to function.\nTeam members that are identified as Key Talent can also be SPOF, as the definition of SPOF overlaps with a few of the Key Talent Criteria outlined above, however, a team member who is identified as SPOF is not also Key Talent by default.\nA few key differences between Key Talent and SPOF include: team member’s performance and growth potential, risk mitigation plans, and support/development strategies.\nFour scenarios exist in the context of our Talent Assessment:\nTeam member identified as Key Talent\nTeam member identified as SPOF\nTeam member identified as Key Talent and SPOF\nTeam member identified as neither one\nTo review the SPOF definition in more detail along with a few examples, please review our\nOrganizational Design\nhandbook page.\nProcess To Determine Key Talent\nIt is important to have a holistic view of all team members when determining who meets the key talent criteria, which is why we require a certain scope when calibrating key talent and making final recommendations in the organization. There are several factors that can help determine the level at which key talent should be assessed, including things like reporting lines and span of control. As a general rule, if a people manager meets the following requirements, key talent calibrations should start at their level:\nSenior Manager level or above\n20+ direct and indirect reports\nThe process to determine Key Talent is as follows:\nDirect managers make initial key talent recommendations in Workday. The direct manager should include the key talent recommendation along with the Performance and Growth Potential recommendation. The\nkey talent criteria\nthat is met should be noted in Workday.\nDuring sub-department calibration sessions, Senior Managers+ should calibrate on the initial key talent recommendations and make adjustments as appropriate, keeping in mind both\nkey talent criteria\n, and number of individuals identified as key talent, as key talent makes up only ~10% of team members company-wide.\nThe Senior Manager (if applicable), Director, Senior Directors, VP, and People Business Partner (PBP) discuss and calibrate the Key Talent nominations at the department level calibration sessions.\nA final proposal goes to the E-Group member who adds in their Key Talent and reviews for final approval on Division level.\nOrganizational Value\nA very small portion of our business (roughly ~10% of the population) is considered to be key talent. As such, a team members’ value in the organization should not be determined based on whether or not they are identified as key talent.\nWhile some team members are identified as key talent, this does not mean the rest of our team is not valued and important to our organization’s success. Aligned with our\nexpected performance distribution\n, approximately 60-65% of our team are core performers (or\n“performing”\n. Core performers are responsible for keeping things consistently moving forward. This group comprises the largest population in companies across the board for a reason and is an essential part of any organization’s success.\nImpact of Being Identified as Key Talent\nWe want to make sure we use engagement tools to retain Key Talent. A few of our primary engagement tools are:\nLearning & Development\n, growth opportunities and compensation.\nLearning & Development:\nWe want to support the growth of Key Talent and their competencies, skills, and knowledge by providing them with the tools they need and the opportunities to progress their own personal and professional development goals. As a people manager it’s your priority to identify\nL&D opportunities\nfor your team.\nGrowth Opportunities:\nAs a people manager, it’s important to have career conversations and identify growth opportunities with your team members. For Key Talent, it’s especially important to discuss their motivation and ambitions. Growth opportunities can be both horizontal and vertical. Examples of growth opportunities are: expanding the scope within a team member’s current role, a lateral move to a new role, or a promotion to the next level.\nCompensation:\nAt GitLab, compensation = cash + equity + benefits. We have a\nmarket-based approach\nand differentiate pay based on performance. Our Annual Compensation Review Cycle and Annual Equity Refresh program allow us to differentiate compensation based on performance and for Key Talent.\nSuccession Planning:\nAs team members identified as Key Talent are critical to roles that have a high impact on the company’s success, it is important that we identify successors to mitigate risk in the organization.\nNote that being considered or designated as a key talent one year, does not mean or guarantee that a team member will be considered or designated as a key talent moving forward.\nKey Talent Program\nSupporting Key Talent at GitLab is a critical element of business scalability and organizational development and growth. Our Key Talent are often individuals that can be looked to for mentorship and guidance by others, but it is also important that we invest in the development of this group and ensure that key knowledge is shared. A couple of key ways we can support our Key Talent is through regular discussions and the development of\nIndividual Growth Plans (IGPs)\n.\nBelow are suggestions for getting started, resources for managers, a\nKey Talent Engagement Discussion template\n, and a recommended cadence.\nKey Talent Engagement Discussion\nOne way to set up a structure and regular cadence for touchpoints with our Key Talent population is through Key Talent Engagement Discussions. We recommended these discussion focus areas are: Overall Engagement, Growth/Challenge, and Support Needed. The main goals for check-ins with this group include:\nGet a pulse on overall engagement\nUncover potential risks for business continuity and implement plans to mitigate\nIdentify areas of support needed\nIdentify opportunity for stretch projects and continued growth\nUse this discussion as a starting point to partner with team members to get\nIndividual Growth Plans (IGPs)\nin place\nLeverage this data to identify key themes and potential actions across our Key Talent pool with the goal of improving engagement (leaders can work with their aligned\nPeople Business Partner\non this piece)\nManagers can leverage\nthis template\nto help facilitate consistency in Key Talent Engagement Discussions.\nIndividual Growth Plans (IGPs)\nKey Talent Engagement Discussions can be a great starting point to start thinking through Individual Growth Plans, which is the recommended next step. Some ideas for our Key Talent population to consider when thinking through\nIndividual Growth Plans (IGPs)\ninclude:\nStretch project (Cross functional, and an opportunity to be DRI)\nMentor (leader to help identify internal or external mentor)\nCoach or Coaching program (e.g.\nCoaching Right Now\nManagement development (if applicable)\nCross-functional/leadership exposure plan\nCross learning plan with other roles within their division\nCadence\nWe recommend that managers perform Key Talent Engagement Discussions twice per year, roughly every 5-6 months. Discussion timing is at manager discretion, as we want to ensure these discussions are held at the most relevant and impactful time for each team member. Key Talent Engagement Discussions are more geared towards stay interview format, and should not replace ongoing informal check-ins, regular feedback, and growth discussions that happen more regularly in 1:1s.\nA couple of options for Key Talent Engagement Discussions that managers can consider are:\nBefore Mid-Year check-in\n: Before our company-wide\nMid-Year check-ins\n. This cadence would be 1) Key Talent Engagement Discussions, 2) Mid year check-in discussion, 3)\nIndividual Growth Plans (IGPs)\n(\nif applicable\n). Touching base with Key Talent ahead of Mid-year check-ins can help provide an insightful baseline and level of insight before going into more performance-focused discussions.\nIn FY'24 Q2, we will begin\noptional\nKey Talent Engagement Discussions across the organization aligned with our upcoming mid-year check-in process. For divisions or departments that choose to opt in, the high level timeline would be as follows (exact dates TBD):\nMay: Key Talent Engagement Discussions (optional)\nJune:\nMid year check-ins\n(required)\nJuly: IGP (Individual Growth Plan) development (optional)\nAfter our\nTalent Assessment cycle\n: This cadence would be 1) Self-assessment, 2) Talent Assessment performance review discussion, 3) Key Talent Engagement Discussion, 4)\nIndividual Growth Plans (IGPs)\n(\nif applicable\n). We recommend that Key Talent Engagement Discussions occur\nafter\nTalent Assessments as opposed to before to ensure we have the most recent group of key talent calibrated and confirmed before Key Talent Engagement Discussions occur.\nAs mentioned above, Key Talent Engagement Discussions can be done at any point during the year, it is not necessary that they are coupled with our Mid year check-in process.\nLast modified June 6, 2025:\nUpdated Mid-Year Check-In Timeline (\n0311457d\n)\nView page source\n-\nplease\ncontribute\n.", "num_words": 13579}
{"doc_id": "7e97630cf2a4989d", "url": "https://handbook.gitlab.com/handbook/alliances", "title": "GitLab Alliances Handbook | The GitLab Handbook", "text": "The Handbook\nGitLab Alliances Handbook\nWe invite organizations interested in becoming a GitLab Partner to\n.\nAlliance Mission\n“To go fast, go alone. To go far, go together.”\n- Proverb\nAt GitLab, we collaborate with well-respected, industry-leading\ncloud, platform and technology providers\nacross all major industries to deliver the best curated modern devops platform.  Our partners are a critical element of GitLab’s mission:\nto enable our customers with modern software-driven experiences, and to ensure “Everyone Can Contribute” through a robust and thriving partner ecosystem that cultivates innovation and stimulates transformation.\nTogether, we can help enterprises lead the digital transformation necessary to compete effectively in the market today.\nThe commitment to helping customers and partners succeed - how we contribute our time, technology and know-how to improve the communities where we work and live and grow our business - is a journey that is transparent, ethical and honorable.  We demand high performance and high standards from ourselves and our partners.\nWe look forward to working with you - to build and deliver the solutions that delight customers.\nGitLab Team Members: Please visit the internal*\nAlliance Handbook Page\nfor additional information.\nAlliance Partner Program\nWe are firm believers that partnership is the foundation from which collaboration and innovation is built upon. As a GitLab Alliance Partner, you’ll have access to the resources, tools, and support you need to accelerate business growth providing greater customer value through solution offerings that are integrated and interoperable with GitLab.\nWe recognize that not all partners have the same needs or goals, and as such, our program is designed with three Alliance Partner types in mind.\nCloud Partners\nPlatform Partners\nTechnology Partners\nPartners that provide public cloud computing services and software marketplaces where customers can procure and deploy GitLab\nPartners that provide modern cloud / cloud-native application platforms which increase the modularity and extensibility of GitLab across enterprises and architectures\nIndependent Software Vendors (ISV) Partners with complementary technologies that seamlessly integrate / interoperate with GitLab for more complete customer solutions\nPillars for Successful Partnerships\nMutually beneficial value exchange drives mutual partner success. We believe these pillars ensure a more sustainable future.\nExposure\n- Partnerships that generate exposure to new markets, segments, and users.\nProduct Knowledge\n- Partnerships that have product familiarity provide greater advocacy.\nAdoption\n- Partnerships, both upstream and downstream, that increase feature adoption and product/platform utilization.\nRevenue\n- Partnerships that have a material effect on revenue growth.\nResults\n- Partnerships that align on objectives and outcomes.\nCollaboration\n- Partnerships that are committed to building reciprocal relationships between organizations and teams.\nEngagement Models\nThere are a variety of ways to partner together to develop solutions. Partner type, solution and/or services offering, and route to market are all considerations when determining the best option, resale or co-sell.  Below are a few examples of how GitLab works with Alliance Partners to deliver consumable customer solutions.\nMarketplace\n(resale)\nSolution listings sold through partner software marketplaces and other digital storefronts\nOEM/Embedded\n(resale)\nIntegrated or bundled solution offerings sold through direct and indirect channels\n(co-sell)\nCollaborative selling motions that stimulate sales of our respective products, independently\nProgram Benefits\nGitLab Alliance Partners are a key part of GitLab’s commitment to the DevOps community. Alliance Partnerships help customers get more value by uniting the capabilities of our products and technologies to provide end-to-end customer solutions. The GitLab Alliance Partner Program provides partners with the following program benefits:\nBrand Recognition\nPartner logo displayed on GitLab Alliance Partner Program webpage. Partners benefit from the association and increased exposure to the rapidly DevOps community\nGitLab brand use. Leverage for marketing purposes on websites, social media channels, and marketing and sales collateral\nSolution Validation\nResources to enable our partners to develop partner solutions that integrate/interoperate with GitLab. GitLab validated solutions help build confidence and trust with customers and channel partners by providing assurance of solution readiness.\nSales & Marketing\nSales awareness and engagement. Promoting partners and solutions to stimulate sales\nGo To Market assets and collateral. Equipping partners with resources designed to market and sell our joint solutions to prospects and customers.\nAdditional Resources\nAlliance Partner Onboarding\nIf you are interested in becoming a GitLab Alliance Partner, you can learn more on our\nAlliance Partner Onboarding\npage.\nLicense Requests\nAlliance Partners may be eligible for NFR (not for resale) licenses to develop and test integrations with GitLab. You can learn more about the NFR program\nhere\n.\nAcquisitions\nIf you are a Partner interested in inquiring about a potential acquisition of your company please visit our\nacquisition handbook\n.\nGitLab Integration Instructions\nLearn about integrating with GitLab, as well as partnership, marketing, and licensing opportunities.\nLast modified June 27, 2024:\nFix various vale errors (\n46417d02\n)\nView page source\n-\nplease\ncontribute\n.", "num_words": 787}
{"doc_id": "edc58472cb6a1822", "url": "https://handbook.gitlab.com/handbook/finance/spending-company-money", "title": "Spending Company Money | The GitLab Handbook", "text": "The Handbook\nFinance\nSpending Company Money\nAll team members and contractors must protect our Company assets, such as equipment, supplies, cash, and information. Treat Company assets with the same care you would if they were your own. No team member or contractor may commit theft, fraud or embezzlement, or misuse Company property.\nGuidelines\nAs a public company, GitLab has an obligation to act in the best interests of the corporation and its shareholders. This obligation is shared by all team members and is the basis of our global travel and expense policy as a public company; team members must be thoughtful in spending the Company’s money.\nSpending Company money includes travel and expenses.\nYou may privately use GitLab property, a MacBook for example, to check your private e-mails or watch a movie as long as it does not violate the law, harm GitLab, or interfere with Intellectual Property. More details can be found in the\nInternal Acceptable Use Policy\n.\nFile your expense report in a timely manner, as expense claims over 90 days from purchase date will not be reimbursed unless approved by your Manager.  The sooner it is submitted, the sooner you will get reimbursement.\nIf team members knowingly submit expenses for reimbursement for personal purchases that are not covered in the expense policy, this is a violation of our\nCode of Business Conduct & Ethics\n.\nPolicy Links and Resources\nThis table captures all of the links for different policies that are documented around using Company money. This includes information of when to use our expense tool Navan, when to use a virtual credit card and when to get a PO from Zip.\nPolicy Name\nOwner\nDescription\nGlobal Travel and Expense Policy\nPolicy and procedures by which reimbursable expenses are reimbursed\nProcurement Process (PO)\nVP Finance\nProcess to engage the procurement team\nSpending Company Money\nOur policy on spending Company money; Links to resources\nGitLab Internal Acceptable Use Policy\nRequirements related to the use of GitLab computing resources and data assets by GitLab team members\nGrowth and Development Benefit\nAccess external resources to develop their career\nNavan Physical Card Policy\nGuidelines for acceptable use of physical corporate cards\nGitLab Related Party Transactions\nRelated Party Transactions Policy\nWays to spend company money\nIndividual expenses that meet the expense policy on your personal credit card: Please see our\nGlobal Travel and Expense Policy\nto see what we will reimburse and how to get reimbursement.\nIndividual expenses using a virtual card: Please see our\nGlobal Travel and Expense Policy\n.\nIndividual expenses using a Navan physical card. Please see our\nNavan Physical Card Policy\n.\nCompany expenses using a Coupa virtual card:\nCoupa Virtual Card\n.\nCompany expenses using a purchase order: Please see our\nProcurement Process (PO)\n.\nLast modified January 30, 2025:\nReplace ref links with regular links (\nc4c9b3d1\n)\nView page source\n-\nplease\ncontribute\n.", "num_words": 480}
{"doc_id": "bd8b04a14f7b1dca", "url": "https://handbook.gitlab.com/handbook/about/maintenance", "title": "Content Websites | The GitLab Handbook", "text": "The Handbook\nAbout the Handbook\nContent Websites\nOverview\nThis area has traditionally been referred to as\n“the handbook”\n, but over time has grown in scope to include multiple sites, projects, repos, and types of content.\nTherefore, we are using the term “content websites” here to avoid ambiguity and properly frame discussions around this scope of responsibility.\nSee our\ndirection page\nfor more.\nIf you need help, please see the\nediting handbook section\n, or\nescalation information\nif it’s urgent.\nTeam Structure\nThe maintainer of this page (as indicated in the sidebar) is considered the\nfor GitLab’s “content websites”. At present, the roles and responsibilities are as follows:\nRole\nOwner\nCurrent Individual(s)\nResponsibilities\nHandbook DRI\nLearning & Development\nTre Ely, Jamie Allen\nPrioritize work, make decisions on content sites, coordinate major changes\nKeep pipeline green\nGroup of volunteers\n@gitlab-com/content-sites/keep-main-green\nHelp fix the pipeline if jobs are failing (as needed)\nCode Maintainer\nGroup of volunteers\nDRI, plus\n@gitlab-com/content-sites/handbook-tools\nCode reviews, escalation point for “Keep pipeline green” group, and as time allows, development work\nNote: Both volunteer groups have owner role to the\ncontent-sites\ngroup in order to resolve any escalations.\nWhat are the content websites?\nThe public\nhandbook.gitlab.com\nwebsite:\nWhile often referred to as “the handbook”, this website also serves a wide variety of other content including the\njob families\n, and the\nTeamOps\npages.\nhandbook.gitlab.com\nis primarily backed by the\ngitlab-com/content-sites/handbook\nproject and repo.\nData (YML) files currently resides in the\ngitlab-com/www-gitlab-com\nrepository.\nThe\n“Internal Handbook” at\ninternal.gitlab.com\n:\nThis website contains content that falls into the\nnot public\ncategory. More details are available in\nthe Internal Handbook usage page\nThe Internal Handbook is backed by the\ngitlab-com/content-sites/internal-handbook\nproject and repo.\nThe theme for the handbook sites is in the\ngitlab-com/content-sites/docsy-gitlab\nproject.\nWhat are NOT content websites?\nThe\nabout.gitlab.com\nmarketing website.\nThe\ngitlab.com\nsite.\nThe\ndocs.gitlab.com\nproduct documentation site.\nAny other GitLab-managed or GitLab-owned website other than what is described above.\nIssue triage\nThe following guidelines are used for triaging issues in\ncontent sites projects\nthat are\nin-scope\n.\nThe triage guidelines use the\nproduct issue triage\ninformation as a basis. However, as the group structure and resources differ for the content\nsites, so do the guidelines.\ntriage bot\nexists to help triage issues.\nTypes of issues and resourcing\nHandbook issues typically fall under one of the following:\nContent: Anything related to updating the text in the handbook, including required fixes.\nFeature: New or an enhancement of how the handbook works, such as theme, or shortcode.\nOperations: Theme, pipeline, local development, linters, other maintenance, and related documentation.\nIssues may be considered a bug separately from the category when applicable (not a feature).\nThe team overseeing the content websites generally only resources operations issues,\nunless the issue is a blocker for contributing or using the handbook.\nPriority\nThe priority label is used to indicate the importance of an issue and guide its scheduling.\nPriority labels are expected to be set based on the needs of GitLab.\nPriority can apply to any type of issue.\nFor bug issues, priority typically matches the\nseverity\n.\nMatch the priority to the severity if uncertain.\nPriority\nImportance\nIntention\n~\"hb-priority::1\"\nUrgent\nWe will address this as soon as possible regardless of the limit on our team capacity. Our target resolution time is 30 days.\n~\"hb-priority::2\"\nHigh\nWe will address this soon and will provide capacity from our team for it. Our target resolution time is 30-90 days.\n~\"hb-priority::3\"\nMedium\nWe want to address this but don’t have visibility when this will be addressed. No timeline designated.\n~\"hb-priority::4\"\nLow\nWe don’t have visibility when this will be addressed. No timeline designated.\nWe encourage contributions for all issues, especially priority 3 and 4 issues, in order to be addressed sooner.\nSeverity\nSeverity labels help us determine urgency and clearly communicate the impact of a ~“Handbook::Operations” issue on users.\nThe severity should be determined based the various factors in the table below.\nWhen an issue falls under multiple categories, use your best judgment.\nOnce you’ve determined a severity for an issue, add a note that explains in summary why you selected the severity you did. This will help future team members understand your rationale so they will know how to proceed with acting upon the issue.\n~\"Handbook::Operations\" ~\"type::bug\"\n~\"hb-severity::1\"\n: Blocker\n~\"hb-severity::2\"\n: High\n~\"hb-severity::3\"\n: Medium\n~\"hb-severity::4\"\n: Low\nGeneral bugs\nBroken feature with no workaround or any data-loss.\nBroken feature with an unacceptably complex workaround.\nBroken feature with a workaround.\nFunctionality is inconvenient.\nImpact on users\nImpacts 20% or more of users without an available workaround\nImpacts 20% or more of users, but a reasonable workaround is available\nImpacts between 5%-20% of users without an available workaround\nImpacts up to 20% of users with a reasonable workaround, or workaround not required.\nMinimal impact on typical user’s workflow. Workaround is available or not needed.\nUser experience problem\nUsers are blocked and/or likely to make risky errors.\nUsers are significantly delayed by the available workaround.\nUsers are self sufficient in completing the task with the workaround, but may be somewhat delayed.\nUsability isn’t ideal or there is a small cosmetic issue.\nTimeline for resolution is based on\npriority\n.\nTriage bot\nPlease see the relevant project readme for implementation information.\nLast modified July 4, 2025:\nUpdate keep main green group info (\nc98fcfa8\n)\nView page source\n-\nplease\ncontribute\n.", "num_words": 892}
{"doc_id": "8fdd59df0d635bbc", "url": "https://handbook.gitlab.com/handbook/marketing/blog/release-posts", "title": "GitLab Release Posts | The GitLab Handbook", "text": "The Handbook\nMarketing\nBlog Handbook\nGitLab Release Posts\nGuidelines to create and update release posts\nIntroduction\nRelease posts are\nblog posts\nthat announce changes to the GitLab application. This includes our regular cadence of monthly releases which happen\nevery month\n, and patch/security releases whenever necessary.\nRelease posts follow a process outlined here, and the templates that are used to create them also highlight what needs to be done, by whom, and when those items are due.\nFrequently used templates\nHelpful reference pages\nRelease post scheduling\nSchedule\nAt a high level, the Release post schedule is:\nMonday, 3 weeks before release\nRelease Post Manager manually trigger the following\nscheduled pipelines in the www-gitlab-com project\n:\nRelease Post Process Kickoff Tasks\nThese invoke the\nbin/rake release_post:start\nrake task. (\npipeline configuration\n;\nrake task\n)\nThis task creates the branches, MRs, and issues necessary to run the Release Post process\nThe MRs and issues will be assigned to the Release Post Manager using the content in\nrelease_post_managers.yml\nAfter the\nRelease Post Process Kickoff Tasks\npipeline completes, and the release post branch is created with associated merge request, manually trigger the following\nscheduled pipelines in the www-gitlab-com project\n:\nAdd deprecations and removals to current release post branch\nMonday through Thursday, 3 weeks before release\nPMs\ncontribute MRs for their\ncontent blocks\nFeatures and Upgrades\nare contributed as release post item MRs targeting the release post branch\nPrimary items are added to\nfeatures.yml\nRecurring content blocks for Omnibus, GitLab Runner, and Mattermost are added by the area owner\nNon-standard product announcements, uncategorized items, and other announcements can be announced using the\nextras\ncontent type\nEMs and PMs\nannounce\ndeprecations and removals\nThursday, 1 week before release\nCode cutoff\nEMs and PMs\nmake sure items that are feature flagged are\nenabled by default\nto ensure inclusion into the self-managed release.\nDeprecation and removal MRs are assigned to TWs for final review and merge.\nTW Reviewers\nfinish review of Features, Deprecations, Removals, Upgrades, and Extras\nPMMs, Product Design Managers, Product Designers, and PM Leaders\ndo optional reviews of release post item MRs\nEMs\n:\nMerge feature release post item MRs if the underlying code was merged by the Thursday, 1 week before release\nMerge feature release post item MRs if manually verified to be in the release\nMRs can be manually verified using the\n/chatops run release check <MR URL> <RELEASE>\nchatops command\nTW Reviewers\nmerge deprecation and removal MRs\nNote:\nMRs added after the Thursday, 1 week before release should target the\nrelease-x-y\nbranch, not\nmaster\nMonday of release week\nAt\n4 pm UTC (11 am ET / 8 am PT)\n, another\nrelease post automation\ntask (\nscheduled pipeline\n;\nrake task\n) performs content assembly\nRelease Post Manager\npicks features to highlight and creates the introduction content\nMonday through Tuesday of release week\nContributor Success\nadds the\nNotable Contributor\nRelease Post Manager and Technical Writer\nperform final reviews\nChanges after\n4 pm UTC (11 am ET / 8 am PT)\non the Monday of release week will be done via the\nrelease-X-Y\nbranch and are subject to approval by the Release Post Manager.\nThe TW Lead verifies the deprecations and removals links in the release post\nRPM create a\nWhat’s New\nNote:\nThe Monday through Tuesday of release week can fall on vacations or holidays. PMs should designate who to respond to time-sensitive inquiries should they be unreachable. Release Post Managers are empowered to make decisions and\ndisplay bias for action\nif they haven’t received a response by EOD on the Tuesday of release week.\nThursday, release day\nRelease team\npublishes the latest package\nAfter the package is\nreleased\n, the\nRelease Post Manager\npublishes the release post to the  master branch\nThe\nGitLab.org Releases page\nwill also populate the changelog via an\nautomated process\nwhen release posts are published (\npipeline task\n)\nNote:\nDetails for all of these steps are described in the\nMonthly release\npost\nMR template\nand the\nMonthly release\npost item\nMR template\n.\nParticipants\nRelease Post Manager\nPM contributors\nPMM reviewers\nPMM lead\nTW lead\nProduct Design reviewers\nTW reviewers\nTechnical advisors\nEngineering Managers\nVolunteering for the Release post\nEach month, a Product Manager, Technical Writer, and an Engineering Department Technical Advisor volunteer to manage the release post, as listed in the\nRelease Post Scheduling page\n. Product Marketing Managers also sign up, but mostly as shadows for awareness for their related marketing activities. The Product Manager volunteer will lead the release post as the Release Post Manager and is listed as the Author of the release post when the post is published. To update the\nrelease post scheduling list\n, all volunteers need to edit the data file below:\nData YAML file\n: gathers the Release Post Managers for every release (9.0 onwards). Be sure to update the “Managers” section below the “Versions” if this is your first release.\nIt’s highly recommended that all volunteers shadow the release post prior to the one they run. Volunteers can update the previously mentioned data YAML file to indicate both when they shadow and when they help run the release post.\nRelease Post Managers will need\nMaintainer\naccess privileges for the\nhttps://gitlab.com/gitlab-com/www-gitlab-com/\nproject. If you need access, model your request after\nthis confidential issue\n.\nRelease Post Manager\nProduct Managers of any level (IC or managers) can volunteer for any release that doesn’t have someone assigned yet. While we encourage IC product managers to take advantage of this opportunity to demonstrate their leadership skills, we also value that managers will bring their experience to the role.\nBefore committing to the date of your choice, please be sure you can perform the critical path Release Post Manager tasks between Thursday, 1 week before release, and the\nrelease date\nof the month as defined in the\nmonthly MR template\n. If you cannot perform any of the Release Post Manager tasks between Thursday, 1 week before release, and the\nrelease date\nof the month, please sign up for a release post that better aligns with your availability.\nTo assign yourself as Release Post Manager or Release Post Manager’s shadow, simply add your name on the\nRelease Post Scheduling page\nby submitting an MR to update the\n/data/release_post_managers.yml\nfile. Otherwise, PMs will be assigned using a fair scheduling principle leveraging this\ntracking doc\n:\nMembers that never managed a release post before\nMembers that have the longest interval since they managed their last release post\nAfter joining the company, there is a grace period of a few months where the new Product Manager\nwill get up to speed with the process, then they will be scheduled to manage a release post.\nAdding members to the list is a shared task, and everyone can contribute by following the\nprinciple described above. Scheduled people are pinged in the merge request to make them aware.\nThey don’t need to confirm or approve, since they can always update the list if they are not\navailable for the given release post.\n⚠️ Important\nIf you’re scheduled for a given month and you can’t make it because you’re on\nvacation, overloaded, or for any other reason, that is okay,\nas long as you swap the\nRelease Post Manager role\nwith someone else\nbefore\ncreating the merge request and starting the\nwhole process. If you take it, you’re responsible for the entire process and must be\navailable to carry it out until the end.\nRelease Post Manager Shadow\nEach month, a Product Manager also acts as a shadow to support the Release Post Manager tasks if needed, act as back up on decisions in absence of the Release Post Manager and prepare to run the next release post. By shadowing the month prior to leading the effort, Product Managers are prepared and aware of any shifts in processes or optimizations needed since the last time they participated.\nShadows should remain engaged with the release process by:\nFollowing the activity in the slack channels\nAttending the weekly standups\nAssisting the Release Post Manager with content reviews and any other tasks they ask for help on\nIn order to properly onboard the shadow, the Release Post Manager should:\nSet up an initial coffee chat with your shadow the week after the previous release ships to get to know each other and clarify any initial questions from the shadow\nPoint the shadow to this page\nInclude the shadow in the initial release post MR creation\nInclude the shadow on all meetings and as much as possible on activities like reviews or other opportunities where you can work synchronously together\nRemember: The goal of the shadow is to get them engaged and aware of the process so they can run one on their own. Include the shadow as much as possible so they can learn and be prepared!\nTechnical Advisor considerations\nWe recommend that technical advisors volunteer for at least 2 or 3 release posts in a row to allow proper time for orientation with the process and the ongoing technical backlog.\nTechnical advisors are expected to:\nSolve problems with Git branch conflicts and Ruby installations.\nBe able to technically contribute to\nwww-gitlab-com\nsource code.\nResolve some of the\nbacklog issues\n.\nThe responsibilities of a technical advisor can be seen in more detail in\nTechnical advisors\n.\nRelease Post Manager Responsibilities\nCritical path tasks\nCompleting all the tasks assigned to the Release Post Manager in the Release Post MR template\nReminder: If you cannot perform any of the Release Post Manager tasks between Thursday, 1 week before release, and the\nrelease date\nof the month as defined in the\nmonthly MR template\n, it is recommended you sign up for another release post. In the case that schedule/circumstances changes after you’d already signed up for the release post, please start a thread in #product in slack and tag\n@[name of PLT member who is reviewing this month]\n. The name of the PLT member who is reviewing this month can be found on the\nrelease post scheduling page\nIdentify the top feature to highlight on the release post page and collecting feedback from the VP of Product\nCreating the What’s New MR and working with the VP of Product to identify what to include in\nWhat’s New\nSending out reminders about upcoming due dates\nMerging the release post MR on the\nrelease date\nand ensuring the release post page goes live\nCollecting feedback in the release post retrospective issue during the release post not just for your own challenges, but other team members challenges as they pop on Slack and other places\nDoing a sync retro with the Technical Writer, the Technical Advisor and the Release Post Manager Shadow sometime between the day after the\nrelease date\nand one week after the\nrelease date\n, to identify and collaboratively complete actions to improve the process and update the handbook/MRs\nMaking sure all the action of the retrospective issue are completed and the issue closed before the next\nrelease post automation task runs on the Monday, 3 weeks before relea\nOther key tasks\nRunning a weekly sync or async standup with the release post team (sync standup required for major releases)\nReviewing and supporting overall content quality and accuracy of all content published in the release post\nIncluding the Release Post Manager Shadow as much as possible on activities so they learn prior to their rotation\nAdding the\ncover image\nthat is (jpg, png) is\nsmaller than 300KB\nMonitoring the Slack Release Post channel to help answer questions and troubleshoot hurdles\nPinging the PMs and others as needed in Slack or MRs to help resolve feedback\nMaking sure the release post is\nready to merge two days before the\nrelease date\nCommunicate\ndirectly with product managers using\n#product\non Slack as needed to field questions that come up from viewers of the release post blog once it is live on the\nrelease date\nIf you need additional support in engaging with the community, the Developer Advocacy team (\n#dev-advocacy-team\non Slack) is available to support on\nrelease days\nMaking sure the auto sorting of secondary features by title (alpha) and stage generally looks good or is revised if need be\nContent Reviews\nWorking with PMs and others as needed to make sure any external blogs they reference in their content blogs go live before the release post blog gets published on the\nrelease date\nMaking sure the TW Lead is aware if release post items are added or removed after the Monday of release week\nInforming the social team that the release post has been published and it’s time to schedule social media posts\nSupporting on tasks specific to\nmajor releases\nif collaborators reach out\nHow to get started\nMake sure you have\nMaintainer\naccess to project\nhttps://gitlab.com/gitlab-com/www-gitlab-com/\n. If you need access, model your request after\nthis confidential issue\n.\nAn automated task will\ncreate the branches, MRs, and issues necessary to run the Release Post process, including making the appropriate assignments and mentions based on the\nRelease Post Manager schedule\n.\nIf you have not been assigned to a Release Post X.Y MR by the end of the day on the Monday, 3 weeks before relea:\nWork with your Technical Advisor to run\nbundle exec rake release_post:start\nto kickoff the X-Y Release Post, or\nFollow these steps to\nmanually create the release post branch and required directories/files\nCommunication\nThe Release Post Manager, the Technical Advisor, the Technical Writer, and PMM Lead will need to communicate about topics that are related to the release post but not relevant to the broader team, these chats should occur in Slack\n#X-Y-release-post-prep\nchannel in Slack, to minimize distractions and unnecessary notifications for the broader team in Slack #release-post.\nThe Release Post Manager posts in Slack channels most frequently with reminders. As such, if the Release Post Manager is seeking guidance on how to phrase certain posts, it’s recommended to scroll to the approximate date that post would have been made by the previous Release Post Manager in the relevant Slack channel. However, here are some best practices and an example:\nMake a clear, descriptive statement of what’s being shared and why\nIf you need someone to take an action, say so explicitly and tag that person\nIf the action requested is time sensitive, give a clear due date\nIf there are known issues they need to be aware of, list them out\nAlways cc your release post team for big announcements so everyone is in the loop\nWhen communicating in either Slack\n#release-post\nor\n#X-Y-release-post-prep\n, organize your announcements and requests via unique discussions threads to make it easier to track conversations. For example, avoid combining various reminders just because they fall on the same date when they address different topics. As a general rule, if there’s is a unique task list item for the reminder in the MR template, that reminder should get its own separate post whether it is in Slack or the MR itself. Also, review GitLab’s\neffective slack communication\nguidance.\nSample post to executive stakeholders for review is below.\nThe name of the PLT member who is reviewing this month can be found on the\nrelease post scheduling page\n@[name of PLT member who is reviewing this month] The 13.6 Release Post has been generated and can be reviewed at\n`https://release-13-6.about.gitlab-review.app/releases/2020/11/22/gitlab-13-6-released/index.html`\nPlease share your feedback by\n<\ntime\ndatetime\n=\n\"18:00\"\n>\n6 pm UTC (1 pm ET / 10 am PT)\n</\ntime\n>\non Friday November 20 (tomorrow). Thank you for your review!\nCurrently there are no known issues/adjustments to the content but I know of one deprecation that needs to be added and will happen with my first wave of edits.\nHere's the 13.6 release post MR:\n`https://gitlab.com/gitlab-com/www-gitlab-com/-/merge_requests/66652`\ncc\nLead\n@tech\n-advisor\nOther samples for posts include reminders and notices on any items that the Release Post Manager is taking:\n🎺 Hi team! Announcing a \"last call\" that no further contributions to the bugs, performance improvements, and usability improvements MRs will be taken after the Thursday, 1 week before release. Please get them in 🏃‍♂️ cc @[name of PLT member who is reviewing this month]\nHey team, reminder that there are currently XX Open and Ready MRs targeting XX.X milestone (link to open MRs). Please take a moment to ask your EMs to merge or to move out the items that won't make milestone.\nHi all, I will be completing the final merge for the release post in the next 45 minutes-1 hour! I will be coordinating any activities with team members to resolve any problems that come up. cc\n@Tech\nAdvisor\nLead\nThe Developer Advocacy Team will reach out to the Release Post Manager in Slack #release-post following their\nRelease days process\nwhen they need help responding to inquiries about content in the release post blog. These needs will primarily arise within the first week of going live with the blog. However, as the Author for a specific release post, you may get pinged to help coordinate a response some weeks later as issues arise. You will usually just need to find the best DRI to handle the issue, often the PM of the release post item in question.\nSometimes, external PR and Marketing firms reporting on the release or managing media relations may ping the RPM directly with questions, since the RPM is the “author” of the release post. If this happens, the Release Post Manager should figure out who in Marketing can take over this communication.\nContent reviews\nThe due dates for various reviews across all participants can be found on the\nrelease post MR template\nand the\nrelease post item MR template\n. PM contributors are encouraged to cease attempts to add new content blocks after the content merge deadline on the Thursday, 1 week before release, and especially after final content assembly happens on the Monday of release week at\n3 pm UTC (11 am ET / 8 am PT)\n. Exceptions can be made for highly impactful features, but it is up to the discretion of the Release Post Manager to work with the PM to add more content blocks up until the Wednesday, day before release.\nKeeping an eye on the various content reviews (TW, PMM, and Director) for the individual release post items (content block MRs) is the responsibility of PM contributor. However, it is recommended that the Release Post Manager keep an eye on how many items are not yet marked with the Ready label on the Thursday, 3 weeks before release of the month or not yet merged on the Thursday, 1 week before release, and check in with PMs in Slack Release Post channel to support and clear hurdles if needed. A really easy way to do this is to keep your eyes on the\nPreview page\nand copy-edit and link check items as new items appear. It’s also important to do this because this page is LIVE to users and should be error free.\nThe review and any needed adjustment to the ordering of secondary features due to stakeholder feedback is the responsibility of the Release Post Manager. Secondary features, removals, and upgrade notes are all sorted alphabetically by title, grouped by stage. To affect the sort order of the secondary features, a change to the content block’s\ntitle\nis required. The Release Post Manager should work with the product managers of the content blocks to make these changes, to ensure accuracy and alignment.\nAfter the Review App for the release post has been generated, the Release Post Manager solicits additional feedback from the\nproduct leaders\nvia Slack in the #release-post channel.\nIt is the Release Post Manager’s responsibility to make sure all content is completed by the Tuesday of release week, ensuring a one day buffer is left for final error fixes and small improvements.\nTo the extent possible, we strive to use\nGitLab’s Community Code Review Guidelines\nwhen performing Release Post content review.\nWhat RPM should look for when reviewing content blocks\nIt is recommended for the Release Post Manager to review all content for quality, including the marketing intro. But when reviewing content blocks in each release post item MRs, the RPM should look for the following:\nAre the why (problem) and the what (solution) clearly stated? See\nwriting about features\nas a guideline for what feature descriptions should contain.\nDo the filenames follow the recommended file-naming convention? See\nimportant note on naming files\nunder\nInstructions\nfor PM contributors.\nTips for reviews\nUtilize the\nAvailable now on GitLab\npage to easily scan release post items that have been merged.\nSearch the\nAvailable now on GitLab\nand preview pages for characters like\n[\n,\n]\n,\n(\n, and\n)\nto find malformed links.\nCopy/paste the content of those pages into a tool like Grammarly to find less obvious typos like duplicate words.\nRelease post intro content\nThe introduction content of the release post (found in\nYYYY-MM-DD-gitlab-X-Y-released.html.md\n)  is templated to be standard across all release posts, and should not be modified without approval from\n@justinfarris\n. This file is linked at the top of the release post MR for reference and ease of editing. The Release Post Manager will make sure all primary items are approved and a top feature is designated and ask the VP of Product for feedback.\nPM Contributors\nProduct Managers are responsible for\nraising MRs for their content blocks\nand ensuring they are reviewed by necessary contributors by the due date. These are mostly added by the Product Managers, each filling up the sections they are\naccountable for\n, but anyone can contribute, including community contributors. Content blocks should also be added for any epics or notable community contributions that were delivered.\nContribution instructions\nIn parallel with feature development, a merge request should be prepared by the PM with the required content.\nDo not wait\nfor the feature to be merged before drafting the release post item, it is recommended PMs write Release Post Item MRs as they prepare for the milestone Kickoff.\nImportant\nThe\nInstructions\nbelow apply up to the Monday of release week\n7:59 am UTC (2:59 am ET / Thursday, 1 week before release 11:59 pm PT)\n. After content assembly on the Monday of release week, anyone who wants to include a change in the upcoming release post must coordinate with the Release Post Manager and follow detailed instructions in the\nMerging content blocks after the Monday of release week\nsection for special handling of late additions.\nKey dates\nDuring kickoff preparation, or when planning for the upcoming milestone: consider creating the release posts early to enable the team to\nwork backwards\nThursday, three weeks before the release - Drafted\n: ready for review by Product Marketing, Tech Writer, and PM Group Manager or PM Director\nMonday through Thursday the week before the release - Reviewed\n: reviewed by all required stakeholders, content revised as needed and ready to be merged\nThursday, 1 week before release - Merged\n: release post item MR merged by the Engineering Manager if feature has been merged\nMonday of release week - Final content assembly\n: and release post blog content lock in preparation for final reviews/editing\nImportant\nIf a feature being announced involves references to external business partners, you’ll need to start MR draft approvals earlier. One such example would be\nCloud Seed\n. These types of announcements require extra reviews with GitLab leadership, business partners and Legal team. In these cases, please reach out to\n@justinfarris\nto start MR reviews at least one milestone ahead of the milestone in which you want to make the release post announcement.\nRelease Post Item Instructions\nOption 1: automated MR creation\nThe\nrelease post item generator\nautomates the creation of release post items using issues and epics. Draft your release post content under the\nRelease notes\nsection of the\nfeature issue template\nand then follow the\nrelease post item generator\ninstructions.\nNote:\nThe generator will not create an MR for a confidential issue. To add a release post item for work relating to a confidential issue, follow the steps below to create an MR manually and remove any confidential information or links.\nOption 2: manual MR creation\nCreate a new branch from\nmaster\nof the\nwww-gitlab-com repository\nfor each feature (primary, secondary, removal).\nDeprecations are handled differently\nOpen a merge request targeted at the\nmaster\nbranch\nUse the\nRelease Post Item template\nContent should be one YAML file added to\ndata/release_posts/unreleased/\non the\nmaster\nbranch\nSee\ndata/release_posts/unreleased/samples/\nfor format and sample content\nNote that the structure needs to be preserved, like\nfeatures:\nthen\nprimary:\n, then the feature content\nImages should be placed in\n/source/images/unreleased/\nUpdate the\ndata/features.yml\n(if applicable) to include your feature and commit the changes as part of the same merge request\nComplete the PM checklist included in the\nRelease Post Item MR template\n, which includes but not limited to these tasks:\nAssign the MR to the relevant Tech Writer for review\nAssign the MR to the relevant Product Marketing Manager, and/or Director if additional review is needed\nOnce all content is reviewed and complete, add the\nReady\nlabel and assign MR to the appropriate Engineering Manager (EM) to merge when the feature is deployed and enabled.\nImportant note on naming files\n: PMs should create file names that are descriptive and have reasonable overlap with the title of the content block itself. This makes it easier to related content blocks to yml file by different participants in the review process. Either underscores\n_\nor hyphens\n-\ncan be used as long as the correct prefix is used (\nstagename\n,\nremoval\n, or\nupgrade\n) as listed below.\nFeature file names:\nstagename-featurename.yml\n(for example,\ncreate-group-wikis.yml\n).\nDo not:\nDesignate primary vs. secondary as that can change.\nUse category or group name.\nInclude the reporter’s name.\nRemoval file names:\nremoval-something-else-descriptive.yml\nUpgrade file names:\nupgrade-another-description.yml\nSome troubleshooting hints:\nUse\ngit merge\n, don’t use\ngit rebase\n.\nRebase is a powerful tool that makes for a clean commit history, but due to the volume of commits by the number of collaborators on the\nwww-gitlab-com\nrepo, it will typically have a lot of conflicts you’ll have to manually work through. Since your content MRs should only contain changes relevant to your own content block and a single addition to\nfeatures.yml\n, merge conflicts should be minimal, and typically nonexistent. If you start a rebase and run in to issues, you can always back out with\ngit rebase --abort\n.\nRemember to close your quotes, check your filenames, and indent properly.\nMany vague pipeline errors are caused by common coding gotchas. Make sure your quotes are closed, the file you’re referencing uses\nexactly\nthe same filename you listed, and you have the right indentation set on each line.\nContent\nWe want to help people understand new features to increase adoption their adoption. In general, release posts should succinctly state the problem to solve, the solution, and how customers benefit from the solution. Be sure to reference your Direction items and Release features. All items which appear\nin our\nUpcoming Releases page\nshould be included in the relevant release post.\nWhen writing your content blocks, be sure to reference\nWriting about features\nto ensure your release post item writeups align with how GitLab communicates. For example, we avoid formal phrases such as “we are pleased to announce” and generally speak directly to our users by saying “you can now do x” rather than “the user can now do x”. Checking out the links to these guidelines will help you align our tone/voice as you write, ensuring a smoother and more speedy review process for your release post items.\nPM contributors are encouraged to use discretion if wanting to add new content blocks after the final merge deadline of the Thursday, 1 week before release, and especially after final content assembly happens at 8 AM PST (3 PM UTC). But if highly impactful features are released that can not wait till the next blog post, PMs should reach out and coordinate with the Release Post Manager. It is up to the discretion of the Release Post Manager to work with the PM to add more content blocks up until the Wednesday, day before release.\nPrimary vs. secondary\nWhen creating your content for a Release Post item you’ll need to determine if it’s a\nprimary\nor\nsecondary\nfeature. Do this in collaboration with your PMM counterpart and reference this guidance if you’re unsure:\nA feature should be\nprimary\nif the feature:\nMatures a category (post release you’d update the\ncategory maturity\nfor the category your feature lives within)\nIs\nnew\n, or a significant improvement - it adds key functionality that did not exist previously or significantly changes existing functionality\nHas high demand from customers or the wider community (measured by discussion or upvotes on an epic/issue)\nFeature ties into a current Marketing narrative or campaign\nAll\nprimary\nfeatures should have a corresponding entry in\nfeatures.yml\nas well as a photo or video in the release post item block.\nBeta features may be included as primary, or secondary items, but must clearly reflect the\nBeta\nstatus.\nExperimental features are not to be included as primary or secondary items to the release posts.\nExperimental Features\nTo include an experimental feature in the release post, use the\nexperiment template\n, when creating a release post item in the\nunreleased\ndirectory. Experiment features are displayed in their own section of the release post.\nReviews\nPM Director/Group Manager, PMM, and Product Design reviews are highly recommended, but the Tech Writer review is the only one required for inclusion in the Release Post. Tech Writer review is required even when late additions are made to the release post after the Monday of release week. The Tech Writing review should be focused on looking for typos, grammar errors, and helping with style. PMs are responsible for coordinating any significant content/tech changes. Communicating priority about which release post items are most important for review will help Product Section leads, PMMs, and Tech Writers review the right items by the Thursday, 3 weeks before release, to ensure the proper labels are applied to the MR and assign reviewers to the MR when it is ready for them to review (ex:\nTech Writing\n,\nDirection\n,\nDeliverable\n, etc).\nNote: For consistency, use the\nReviewers for Merge Requests\n] feature in GitLab when assigning PM Director/Group Manager, PMM, TW, and Product Design team members for content reviews.\nRecommendations for optional PM Director/Group Manager and PMM Reviews\nAs PMM reviews are not required, but recommended - and Product Leader and Product Design reviews are optional - PMs should consider a few things when determining which content blocks to request a review for:\nDoes the feature contribute to a Group or Stage’s overall Direction?\nDoes the feature contribute to increasing a Category’s maturity?\nDoes the feature increase our ability to compete in the market?\nDoes the feature have considerable customer demand?\nDoes the feature represent a significant UX improvement?\nIf the answer to any of these is “yes”, it is recommended that you coordinate with your Director, PMM, and Product Design counterpart to review the content block by the Thursday, 1 week before release. As the PM it is your responsibility to communicate what MRs need a review from the TWs, PMMs, Product Designers, and Directors as well as the MRs relative priority if you have multiple content block MRs that need reviews.\nMerging Content Block MRs\nEngineering Managers are the DRIs for merging these MRs when the feature is merged into the codebase itself. This allows all of the relevant parties (Product Managers, PMMs, Product Designers, Section Leads, Technical Writers) to have enough time to review the content without having to scramble or hold up engineering from releasing a feature.\nTo enable Engineering Managers to merge their feature blocks as soon as an issue has closed, please ensure all scheduled items you want to include in the release post have content blocks MRs created for them and have the\nReady\nlabel applied when content contribution and reviews are completed.\nReviewing, editing and updating merged content blocks\nAfter content block MRs are merged, they can be viewed on the\nPreview page\nand should be updated/edited via MRs to master up until the\nfinal merge deadline of the Thursday, 1 week before release\n. Starting on the Monday of release week, content block MRs should be viewed in the Review app of the release post branch after\nfinal content assembly\n, and updated/edited on the release post branch by coordinating with the Release Post Manager. From the\nrelease date\nforward you should view the content blocks\non the blog\n. It’s important to check this page after the content block MR is merged because this page is LIVE to users and should be error free.\nAdding, editing, or removing merged content blocks during release week\nAfter the content assembly starts on the Monday of\nrelease week\nand before the end of Tuesday of release week, adding any new or removing any merged release post items\nmust be coordinated with the Release Post Manager\n.\nThis is necessary to allow them to assess the impact on the release post and coordinate any necessary adjustments with the release post team (Tech Writer, PM, etc.). Failure to do so might result in your changes not being picked into the release post.\nBefore pinging the Release Post Manager, ask yourself if your content absolutely needs to be part of the current release post. At end-of-day on the Tuesday of release week, no late content blocks will be accepted.\nRequesting a late addition during release week\nPing the Release Post Manager (RPM) in\n#release-post\nto request adding a new late addition for the\nrelease post\n, and wait for the RPM to give confirmation to proceed. New late additions are release post items that were created after content assembly has already run. The Release Post Manager will do their best to accommodate the request, but it is not guaranteed.\nIf the RPM approves the late addition, then PM and RPM will proceed by:\nPM edits the release post item MR and updates the target branch to be on the release post\nrelease-X-Y\nbranch.\nrebases\nthe release post item MR on top of\nrelease-X-Y\nbranch.\nPM moves the RPI yml file and images from\n/data/release_posts/unreleased\nto\n/data/release_posts/x_y/\n.\nPM moves any images from\n/source/images/unreleased\nto\n/source/images/x_y/\nPM Ensure that the\nimage_url\nfield in the release post yml file points to the image file under\n/source/images/x_y/\n.\nPM requests a review of the release post item MR from the Release Post Manager and release post tech advisor. Quick action:\n/assign_reviewer RP-manager\nPM notifies release post team in the\n#X-Y-release-post\nSlack channel that the late addition has been requested with a link to the MR.\nThe MR can be approved and merged by the Release Post Manager.\nIf the feature is primary and you had not previously added it to\nfeatures.yml\n, you will need to create a second MR, branched from\nmaster\nto add the feature to\nfeatures.yml\n. (\nfeatures.yml\nshould be merged to\nmaster\n, not the release post branch).\nProcess for removing merged content blocks\nPing the Release Post Manager in Slack\n#release-post\nto notify them you need to remove an item already merged onto\nthe release X-Y\nbranch.\nEither the Release Post Manager or the PM, with approval from the Release Post Manager, will remove YAML and image files from the\nrelease X-Y\nbranch.\nThe PM will remove the feature from\nfeatures.yml\non master.\nAdding, editing, or removing merged content blocks after the release date\nYou can make changes to the\nrelease post\nafter it’s live to make edits to feature content blocks.\nTo edit a content block:\nFind and edit the relevant\n.yml\nfile in the correct subdirectory. For example, to add or edit the example Widgets feature to the 14.6 release post, create or edit the\ndata/release_posts/14_6/widgets_example.yml\nin an MR against\nmaster\n.\nTo remove the feature block, remove the file in your MR. Or to announce it in the next release post, move the file to the\ndata/release_posts/unreleased\nfolder.\nFor review and approval, assign the current cycle’s\nRelease Post Manager\na Reviewer.\nTo edit a deprecation, follow\nEditing a deprecation announcement entry\n.\nAccountability\nYou are responsible for the content you add to the blog post\n. Therefore,\nmake sure that:\nAll new features in this release are in the release post.\nAll the entries are correct, especially with regard to links to the documentation or feature pages (when available).\nFeature tier availability: all contain the\ncorrect entry\n.\nAll primary features are accompanied by their images.\nAll new and/or primary features are added to\ndata/features.yml\nwith a screenshot accompanying the feature (if the feature is visible in the UI)\n.\nAll images are optimized according to the\nimage guidelines\nand\nsmaller than 150KB.\nKeep in mind the\nfeatures.yml\nis the SSOT for displaying features across\nabout.gitlab.com\n.\nAll features should have a clear value driver.\nAs noted in the\nRelease Post Item template\n:\nMake it clear if a feature is\nnew\n, or is an improvement to an existing feature.\nMake sure your content is reasonably aligned with guidance in\nWriting about features\n.\nEnsure that titles use sentence case with feature and product names in capital case.\nWrite the description of every feature as you do to regular blog posts. Please write according to\nthe\nMarkdown guide\n.\n⚠️ Important\nMake sure to merge\nmaster\ninto the release post branch\nbefore\npushing changes\nto any existing file to avoid merge conflicts. Do not rebase,\ndo\ngit pull origin master\nthen\n:wq\n.\nPMs checklist\nOnce the PMs have included everything they’re accountable for, they should\ncheck their item\nin the release post MR description:\nBy checking your item, you will make it clear to the Release Post Manager that you have done your part in time (during the general contributions stage) and you’re waiting for review. If you don’t check it, it’s implicit that you didn’t finish your part in time, despite that’s the case or not.\nOnce all content is reviewed and complete, add the\nReady\nlabel and assign this issue to the Engineering Manager (EM). The EM is responsible for merging as soon as the implementing issue is deployed to GitLab.com, after which this content will appear on the GitLab.com Release page and can be included in the next release post. All release post items must be merged on or before the Thursday, 1 week before release. If a feature is not ready by the Thursday, 1 week before release deadline, the EM should push the release post item to the next milestone.\nNotes for PMs\nVacations\nIf you are on vacation before/during the release, fill all your items and create placeholders in the release post Yaml file for all the items you cannot add for whatever reason. To complete them, and to follow up with all the content you are responsible for, assign someone to take over for you and notify the Release Post Manager.\nReplies\nPlease respond to comments in the MR thread as soon as possible. We have a non-negotiable due date for release posts.\nDocumentation\nPlease add the\ndocumentation_link\nat the same time you add a content block to the release post. When you leave it to add it later, you will probably forget it, the reviewer will ping you later on during the review stage, and you will have little time to write, get your MR reviewed, approved, merged, and available in\nthe documentation\n.\nPMM Reviewers\nMessaging review\nEach PM is responsible for pinging their PMM counterpart when they need a review on the messaging for a Release Post Item MR or changes to\nfeatures.yml\n.\nLeave comments for the PMs on the items file in the MR. Make sure to comment in the diff on the line that you are referring to so that the PM has the context and comments can be resolved appropriately.\nSee\nwriting about features\nas a guideline for what feature descriptions show have.\nReview the messaging for these features look for these 5 elements:\nproblem/solution\n: Does this describe the user pain points (problem) as well as how the new feature removes the paint points (solves the problem)?\nshort/pithy\n: Is this communicated clearly with the fewest words possible?\ntone clarify\n: Is the language and sentence structure clear and grammatically correct? Is the text in the present tense, and is “you” used instead of “user.”\ntechnical clarity\n: Does the description of the feature make sense for various audiences, including folks who are not deeply familiar with GitLab?\nvalue driver\n: Does the feature help our users Increase Operational Effectiveness, Deliver Better Products Faster, or Reduce Security and Compliance Risk?\nTo understand the feature better look at the issue and MR for the feature, they are linked in the YAML. Sometimes the issue description will include the value prop. Read the comments in the issue and MR for the feature, often users and customers will chime in with why they want a feature and what pain the lack of the feature is causing.\nThe release post and\nfeatures.yml\ncan have the same or very similar content - e.g. same screen shot.\nThe tone of the release post is more about introducing the feature “we’re happy to ship XYZ…”\nThe tone of\nfeatures.yml\nshould be\nevergreen\nto appear on our website in various places.\nPMM Lead\nPMM lead is responsible for creating a release post highlight blurb for consumption by field and PR.\nThe tasks are included in the\nrelease post MR template\nand in the\nmonthly release post intro document\n.\nOn or before the third thursday of the month:\nCreate\nnew Product marketing\nissue with PMM-Release-Post template.\nCreate release highlights - 3-4 themes with description. Use this document to document your highlights\nUpdate the issue with the highlights\nUpdate highspot\nAdd the actual release post blog as a new piece of content in Highspot (Customer Outreach spot) (e.g.,\nrelease post\n)\nAdd this new release post on highspot to the\nGitLab Releases spot overview page\nin the GitLab Release Post section\nCreate a new pitch template for this release in Highspot (Company Pitch Templates spot) (e.g.,\npitch template\n)\nAdd this new pitch template to the\nGitLab Releases spot overview page\nin the Release Pitch Templates section\nFlag to comms to share in #sales\nShare with the PR and Field enablement team and tag release post manager.\nTW Lead\nNote\nTechnical writers review the individual release post items according\nto the\nstage/group they are assigned to\n.\nEach month, one of the technical writers is also responsible for the structural\ncheck of the final release post merge request. This section is about the latter.\nThe TW Lead is responsible for a final review of:\nRelease post top feature\nFor any identified issues, inform the\nTW reviewer\nto resolve as appropriate.\nRelease post primary features\nFor any identified issues, inform the\nTW reviewer\nto resolve as appropriate.\nFrontmatter check\nVerifying the deprecations and removals sections in the release post link to GitLab the corresponding pages in GitLab Docs.\nWhile individual TW reviewers and product managers have ultimate responsibility for the style and language of their release post items, including\ndeprecations, removals, breaking changes\n, and\nUpgrades\n, TW leads still have an overall responsibility to notify the Release Post Manager, the product managers and TW reviewers if style and language don’t seem reasonably consistent (things are obviously out of sync with known guidelines). But it is not the responsibility of the TW leads to\nfix\nstyle and language inconsistencies. However, TW leads\ndo\nhave the responsibility and ownership to make sure that all links in the release post point to relevant content and be fixed, if issues are found.\nConsideration: When communicating with your release post team, use the release post prep channel and organize discussions into threads to make it easier to track conversations. Also, review GitLab’s\neffective slack communication\nguidance.\nStructural check\nA technical writer, once assigned to the release post merge request, will check the syntax and the content structure.\nThe\nStructural check\nchecklist in the main release post merge request description\nwill guide them through the structural check.\nGiven that the technical writing review occurs in release post items'\nmerge requests, the purpose of the structural check is:\nReview the overall post for consistency. For example, if there’s an entry in a previous release post that deprecates an item called\nauth-server\nfor this date, raise questions if there’s also an entry that removes an item referred to as\nauth_server\n.\nMake sure the post renders well.\nThe content as a whole clearly describes the new features and feature improvements.\nCheck all the links work and are in place.\nCheck all content for syntax errors, typos and grammar mistakes, remove extra whitespace.\nVerify that the images look harmonic when scrolling through the page (for example, suppose that most of the images were screenshots taken of a large portion of the screen and one of them is super zoomed. This one should be ideally replaced with another that looks more like the rest of the images).\nThis should happen in the release post item review, but if there’s time, double-check documentation links and product tiers.\nMake sure the current release’s deprecations and removals also show up in the\ndeprecations doc\n.\nPay special attention to the release post Markdown file, which adds the introduction.\nReview the introduction briefly, but do not change the writing style nor the messaging;\nthese are owned by PMMs, so leave it to them to avoid unnecessary back-and-forths.\nMake sure feature descriptions make sense, anchors work fine, all internal links have\nthe relative path.\nNote\nThe introduction or other parts of the release post written may include links to external\nblog posts. These links may be broken until the Wednesday, day before release, but should still be flagged by the TW Lead\nduring the structural check so the Release Post Manager doesn’t miss coordinating\nwith authors of these external blogs to ensure they’re live before the release post blog goes live\non the\nrelease date\n.\nThe Release Post is considered a special blog post instance, so should adhere to the Marketing\neditorial team’s\nstyle guide\n.\nMaking changes\nUntil 8:00 am Pacific Time on the Monday of release week, the TW Lead should be able to make changes\ndirectly to the release post. After that time, anyone who wants to include a\nchange in the upcoming release may need to submit it in a separate MR, with a\ntarget of the\nrelease-X-Y\nbranch. For more information, see\nDevelop on a feature branch\n.\nFrontmatter\nIn its\nfrontmatter\n:\nLook for each entry as shown on the code block below.\nRemove any remaining HTML comments and unused blocks to clean up the file.\nCheck the\ntitle\nlength. The title should be short and deliver an easy-to-understand message Ensure the title fits nicely with the blog post’s title graphic. A general guideline for title length is about 60 to 70 characters.\n---\nrelease_number\n:\ntitle\n:\n\"GitLab X.Y Released with Feature A and Feature B\"\nauthor\n:\n\"Name Surname\"\nauthor_gitlab\n:\ngitlab.com-username\ncategories\n:\nreleases\nimage_title\n:\n'/images/X_Y/X_Y-cover-image.ext'\ndescription\n:\n\"GitLab X.Y Released with XXX, YYY, ZZZ, KKK, and much more!\"\ntwitter_image\n:\n'/images/X_Y/X_Y-cover-image.ext'\n# required - copy URL from image title section above\nlayout\n:\nrelease\nfeatured\n:\nyes\n# header_layout_dark: true #uncomment if the cover image is dark\n# release_number_dark: true #uncomment if you want a dark release number\n# release_number_image: \"/images/X_Y/X_Y-release-number-image.svg\" # uncomment if you want a svg image to replace the release number that normally overlays the background image\n---\nLayout:\nThe last two entries of the post’s frontmatter give the option for a\ndifferent layout. If you want to use a dark cover image, you’ll need\nto uncomment\nheader_layout_dark: true\n.\nIf you want only the release number to be dark, uncomment\nrelease_number_dark: true\n.\nThese two variables work independently; you can assign either of them\nor both of them to the same post.\nVersioned documentation release\nWhen a new GitLab version is released\nevery month\n, the Technical Writer who completed the release post structural check for the previous milestone sets up the release of the published documentation for that version.\nFor instructions, see the GitLab docs\nmonthly release process\n.\nTW Reviewers\nNote\nTW reviewers should not be confused with the\nTW lead\n.\nEach person in the Technical Writing team is responsible for the review\nof each individual release post item and deprecation item that falls under their\nrespective stage/group\n.\nWhen the PM creates a release post item merge request, or\ncreates a deprecation announcement\n, they should assign it to the TW\nof their group for review (required). The process for TW reviews is described in the:\nRelease post item template\nDeprecation\nMR template\nUpdate the deprecations doc\nThe\ndeprecations\ndoc is generated with .yml files in\ngitlab/data/deprecations\n.\nThe html pages are not generated automatically. The TW assigned as the reviewer of the deprecation item must run a Rake task to compile the documents. They can also run a separate task to check that the docs are up to date.\nWhile the author of the deprecations MR is responsible for creating the content, they are not responsible for updating the doc.\nUpdating the docs:\nFrom the command line, navigate to your local clone of the\ngitlab-org/gitlab\nproject, and check out the MR’s branch.\nCompile the deprecation documentation\n.\nCommit the updated doc and push the changes.\nSet the MR to merge when the pipeline succeeds (or merge if the pipeline is already complete).\nDeprecation MRs must be merged by the Thursday, 1 week before release. If merged later, they might miss the code cutoff and won’t be included in the self-managed release’s docs.\nIf an entry needs to be edited,\nthe update process\nis similar.\nIf you run into problems running the Rake task, check\nthe troubleshooting steps\n.\nProduct Design Reviewers\nNote\nProduct Designers\nDRIs\nreview the individual release post items according to the\nstage/group each designer is assigned to\n.\nEach PM is responsible for pinging their Product Design counterpart when they need a review on the content or visuals within a release post.\nProduct Designers should collaborate on release post items and review:\n: Ensure that the messaging encapsulates how the item supports a user’s\nJob to be Done\n.\nMVC messaging\n: Articulate any design vision or future iterations if applicable. This is especially important when considering items that are\nunder construction\n, or contribute toward a Category’s maturity.\nArtifacts\n: Validate that UI elements (screenshots, GIFs) included in the post are up to date and reflect all design changes. Ensure that no mocks are used.\nEngineering Managers\nThe responsibilities of the Engineering Manager are documented in the\nEngineering Handbook\n.\nTechnical Advisors\nEach month, the Release Post Manager may need help with technical hurdles during the release post process. In order to provide the release post, which is a time-sensitive and highly visible asset for customers and users, with adequate technical advisement and support, we are piloting a partnership with the GitLab development team to leverage the\nDev Escalation process\nvia the Slack\n#dev-escalation\nchannel as an extension. This ensures that at all times, if something breaks that the release post team can not resolve themselves, they have access to technical experts for resolution. It is recommended that technical advisors review the documented\ntechnical aspects\nof the release post for reference, and the\nescalation process\n.\nPlease note that unlike other monthly volunteers of the release post, the technical advisor is not expected to follow the release post process at all times. The Release Post Manager will reach out to the technical advisor on call via Slack in the\n#dev-escalation\nchannel and then cross-post to the\n#release-post\nchannel for transparency that issues are being worked on. It is then expected that the technical advisor will respond to the Release Post Manager or release post DRI as soon as possible, including evenings/weekends, as the release post asks are often time sensitive,\nespecially between the Monday of release week and the\nrelease date\nof the month\n. The technical advisor is responsible for determining if further dev escalation should proceed.\nThe good news is that the release post technical hurdles are often reasonably easy to troubleshoot for technical experts, which is why we’re excited about this partnership!\nBelow are the types of problems the Release Post Managers may need help with.\nTriaging various\nautomations\nand\ntechnical aspects\nof the release post\nTriaging pipeline errors and suggest changes or provide a fix to related merge requests\nResolving merge conflicts with the release post\nIdentifying when to engage with other technical teams to resolve upstream problems\nGetting help during the Release Post Assembly\nRelease Post Manager\nShould you exhaust your ability to resolve your blocker quickly mention the Technical Advisor in\n#dev-escalation\nchannel and cross-post in\n#release-post\nchannel to ask for help, and make others aware that there may be a delay in assembly.\nDescribe your blocker in detail, screenshots, videos, etc. can assist in diagnosing the problem. Indicate whether your problem is urgent or not. If you indicate it is urgent, provide a clear date/time by which you need a response or resolution.\nTechnical Advisor\nWhat we have seen with previous challenges during the Release Post Assembly stage is some difficulty is encountered by the Release Post Manager because of a problem with their local development environment (Ruby setup, permissions, gems, etc.) or git conflicts. You should be familiar with git, Ruby, and the command line. There are a few resources that you can use to diagnose and resolve the issue at hand:\nReview the output of the assembly script including git status\nConsider running ./bin/doctor and review the output\nReference the\nlist of previous problems\nFollowing your best judgement with the resolution of the incident, record the diagnosis and the steps taken to resolve so that we can improve the release post process and our preparedness. Deposit this info in a new issue or as part of the current release post retrospective.\nAutomation\nWe have introduced\nscheduled pipeline jobs\nthat you should familiarize yourself with:\nA task will run on the Monday, 3 weeks before relea of the month that creates the monthly release post, MRs, and Issues to kickoff the Release Post (\npipeline configuration\n;\nrake task\n)\nAt\n4 pm UTC (11 am ET / 8 am PT)\n, a task will run that performs content assembly (\nscheduled pipeline\n;\nrake task\n)\nGetting help during the Release Post Deployment\nRelease Post Manager\nShould you exhaust your ability to resolve your blocker quickly mention the Technical Advisor in\n#dev-escalation\nchannel and cross-post in\n#release-post\nchannel to ask for help, and make others aware that there may be a delay in release post deployment.\nDescribe your blocker in detail, screenshots, videos, etc. can assist in diagnosing the problem. Indicate whether your problem is urgent or not. If you indicate it is urgent, provide a clear date/time by which you need a response or resolution.\nTechnical Advisor\nThe Release Post Deployment is a critical and time-sensitive operation. Please respond thoughtfully and quickly.\nFollowing your best judgement with the following:\nFor minor incidents that can be recovered from your intervention alone or in concert with the Release Post Manager, do so while recording your diagnosis and the steps taken to resolve the incident so that we can improve the process and our preparedness. Deposit this info in a new issue or as part of the current release post retrospective.\nFor major incidents that require immediate assistance from an SRE, developer on call, or other team members with increased access rights, create an issue and follow the\ndev escalation procedure\n. Record the diagnosis and the steps taken to resolve so that we can improve the process and our preparedness. Deposit this info in a new issue or as part of the current release post retrospective.\nIncident Response\nRelease post content assembly on the Monday of release week and release post deployment on the\nrelease date\nare time sensitive with multiple dependencies across various departments. GitLab team members often voluntarily go out of their way to assist with blockers found during these two time-sensitive procedures, but it can be confusing as to who is doing what to resolve an active blocking incident. Some procedural detail to our response efforts is shown below.\nResponse and Resolution SLOs\nDue to the time-sensitive nature of both key Release Post actions, assembly and deployment, the initial response time must be very quick, within 15 minutes. Incident resolution should also be as quick, within 60 minutes or less, if possible.\nThe Role of the Technical Advisor\nThe introduction of the technical advisor role is meant to be a coordinating role responding to blockers that occur along the way. They may work alone or in tandem with other volunteers to resolve the blocker as they see fit. They are also responsible for clearing the blocker, assembly of others, delegating response tasks including engaging in dev escalation.\nOwnership, Positive Control, and Intent\nThere should only be one owner of an incident at any given time. There must be clear understanding of who has control of actions to investigate and remedy the incident. Use positive exchange of control, that is pass control to another person who will now be in charge. The extreme example is from aviation where pilots exchange control in a manner like the following where you might hear “your airplane” to pass control followed by “my airplane” from the second pilot to accept control followed by the acknowledgement and release of control from the initiating pilot with “your airplane.” This avoids multiple people working at cross purposes from each other. Pilots operating an airplane is an extreme example, but it shows how to use clear language in your efforts to resolve the incident as to who is doing what. Only one person should be have control at a time. Similarly, the person taking action should declare their intent, “I’m going to merge master into the 13.8 release post branch and resolve any conflicts.”\nTimeline\nRelease Post Manager is blocked. Their initial attempts to get unblocked fails.\nRelease Post Manager joins\n#dev-escalation\n; mentions the Technical Advisor for this release detailing the nature of the blocker and its severity.\nTechnical Advisor acknowledges that they have seen the message and responds.\nTechnical Advisor creates a dedicated public Slack channel for communication around the incident like\nrelease-post-13.8-deploy-failure\n. That channel is then shared with\n#release-post\nfor others to follow along.\nBegin a Zoom call. Post the invitation to the Zoom room in the newly created Slack channel.\nTechnical Advisor assumes control from the Release Post Manager.\nInvestigation begins. Be as visible as possible, share your screen. Consider recording the Zoom session.\nAction taken.\nBlocker is resolved.\nClose Zoom.\nCollect screenshots, recordings, terminal history, comments in Slack, or other evidence on the issue.\nOpen a new issue to document the incident, deposit history, and add suggestions for corrective action or prevention. Link issue to the current release post retrospective.\nSee also:\nGoogle SRE Ch. 14\nManaging ongoing technical support tasks\nAnyone can contribute to technical issues that support the Release Post Process with the burden being mostly on the current volunteer tech advisor. The following outlines how to manage active and upcoming issues.\nTracking\nUse the\n~Release Post::Tech Advisor\nlabels for issues that require changes to the tools that facilitate the delivery of a release post. Create issues for lower priority challenges that arise during the milestone or as an artifact of decisions made during a retrospective. Creating an issue for immediate incident response isn’t required since the delivery of the release post requires quick resolution and synchronous communication.\nThis board\norganizes these labeled issues into a familiar software development workflow. When working on an issue, assign yourself and strive to keep the issue up-to-date with the proper workflow label and weekly async updates. Technical Advisors are welcome to make recommendations and apply milestones to the issues.\nHandoff\nIt’s unlikely that one technical advisor will serve in back-to-back milestones. Therefore, clearly communicating with the incoming technical advisor about the state of issues as part of release post retrospective and kickoff is a good idea. To do so:\ncreate a transition issue\nrecommend actions, prioritization, and milestones changes for any issues you are actively working\nunassign them from yourself and change the workflow label if you don’t plan on working on so it’s clear they need to be picked up\nafter your final rotation on the release post, reach out to the next tech advisor for a coffee chat to provide them with helpful information about any issues or bugs that are a priority for their upcoming cycle\nShould you prefer to continue to contribute to an issue under active development after your volunteer rotation, that’s great. In that situation, make it clear through assignments and issue updates that you will be the DRI.\nMonthly release blog post sections\nNotable Contributor\nFeatures\nTop feature\nPrimary features\nSecondary features (#secondary-features)\nIllustrations\n(screenshots, GIFs, or videos)\naccompanying their respective features\nUI improvements, performance improvements and bug fixes\nOmnibus improvements\n(added as a secondary feature)\nImportant notes on upgrading\n(optional)\nDeprecations and removals\nNotable Contributor\nThe Contributor Success team owns the process for nominating, selecting and adding the GitLab Notable Contributor (formerly MVP) for the release post. See the Contributor Success\nGitLab Notable Contributor Selection Process\n.\nThe Release Post Manager no longer has any Notable Contributor related tasks.\nFeatures\nThe most relevant features of the release are included in the post by\nproduct managers\n. Classify the feature according to its relevance and to where you want to place it in the blog post:\nTop feature\nThe top feature of the release is mentioned right after the Notable Contributor section, prior to other primary features. An image or video and documentation links are required. The\nTW lead\nwill pay close attention to the content of this item, as it is the “headline” feature for the release and it’s especially important to get it right.\nThe Release Post Manager will select a\ntop\nfeature. The following can be used as a guideline on which feature to select:\ntop\nfeature should:\nHave great user impact.\nAlign to the current FY product investment themes.\nCover all deployment types (.com, SM, and Dedicated).\ntop\nfeature can be:\nOnly for paid tiers (premium or ultimate only).\nBeta, but not\nexperimental\n.\nThe Release Post Manager will select a\ntop\nfeature and ask for feedback from the assigned VP of Product in #release-post together with reviewing the\nprimary\nfeatures. The Release Post Manager should incorparating feedback on any\ntop\nor\nprimary\nfeatures.\nTo specify the top feature, change\nprimary\nto\ntop\nin the selected feature’s release post item\n.yml\nfile:\nfeatures\n:\ntop\n:\nPrimary features\nFeatures with higher impact, displayed in rows after the top feature, with an image next to its text. An image accompanying the description is required. A\nvideo\ncan also be added to replace the image.\nAll release post\nprimary features\nshould be reviewed by the\nTW reviewer\n.\nTo identify the primary features, look for\nprimary\ndirectly beneath\nfeatures\nin the RP\n.yml\nfile:\nfeatures\n:\nprimary\n:\nSecondary features\nOther relevant improvements in GitLab that follow after top and primary features. Images or videos aren’t required, but are recommended. All release post Secondary features should be reviewed by the\nTW reviewer\n.\nIf the secondary feature is promoted to a primary feature, the PM or EM will be asked to supply an image on\nshort notice\n.\nTo identify the secondary features, look for\nsecondary\ndirectly beneath\nfeatures\nin the RP\n.yml\nfile:\nfeatures\n:\nsecondary\n:\nContent blocks\nNote:\n“Feature blocks” are now known as content blocks, as there are many that are not just features. For example, we include upgrade warnings, Omnibus installer improvements, and performance enhancements.\nUse content blocks to add features or other content to the YAML data file. The layout will be applied automatically by Middleman’s\ntemplating system\n.\nContent blocks in the YAML data file contain the following entries, as exemplified below:\nfeatures\n:\nprimary\n:\n-\nname\n:\n\"Do great things with this feature\"\navailable_in\n:\n[\ncore, premium, ultimate]\ndocumentation_link\n:\n'https://docs.gitlab.com/ee/ci/pipelines/downstream_pipelines.html#multi-project-pipelines#multi-project-pipeline-visualization-premium'\nimage_url\n:\n'/images/topics/multi-project_pipelines.png'\nreporter\n:\nbikebilly\nstage\n:\nsecure\ncategories\n:\n-\n\"Application Security Testing\"\n-\nissue_url\n:\n'https://gitlab.com/gitlab-org/gitlab/issues/1234'\ndescription\n:\nUse present tense, and speak about \"you\" instead of \"the user.\"\nDescribe how the new functionality is beneficial. Use phrases that start with, \"In previous versions of GitLab, you couldn't... Now you can...\"\n[Add another link](#link) if needed.\nDescription\nContent of the\ndescription\nshould adhere to the Marketing editorial team’s\nstyle guide\n.\nDo not include UI navigation instructions in the feature’s description. These instructions should be\ncontained in the relevant documentation.\nFeature priority\nThe second line of the content block should indicate whether the feature is a top, primary, or secondary feature. For primary features, use the\nprimary\nkey as shown in the\nsample content block above\n. For secondary features, replace the\nprimary\nkey with the word\nsecondary\nand for the top feature replace\nprimary\nwith\ntop\n.\nFeature name\nname\n: feature name, capitalized\nUse a short and strong name for all feature names.\nFeature Availability\nUse the following pattern to apply the correct badge to the feature (Free, Premium, Ultimate) and to specify any add-ons (Duo Pro, Duo Enterprise).\nSubscription tier\nFor the subscription tier where the feature is available, use\navailable_in\nwith:\nFor GitLab Free,\n[core, premium, ultimate]\nFor GitLab Premium,\n[premium, ultimate]\nFor GitLab Ultimate,\n[ultimate]\nImportant note\n: The GitLab Free tier is listed as\ncore\nin the data file. This is intentional and the page templates will apply the proper tier name on the frontend.\nOffering (GitLab.com or self-managed)\nFor features available on both self-managed and GitLab.com:\nUse\ngitlab_com: true\n, or do not include\ngitlab_com\nin the yaml file.\nFor features available on self-managed only:\nUse\ngitlab_com: false\n. For example:\navailable_in\n:\n[\npremium, ultimate]\ngitlab_com\n:\nfalse\nThis setting greys out the orange badges on the GitLab SaaS row.\nFor features available on GitLab.com only, use\navailable_in:\nwith:\nFor GitLab.com Free,\n[free, silver, gold]\nFor GitLab.com Silver,\n[silver, gold]\nFor GitLab.com Gold,\n[gold]\nYou can also mix the GitLab.com badges with the self-managed badges. However, for this to work, the\ngitlab_com\nvariable must be set to\nfalse\n:\navailable_in\n:\nFor availability in all tiers on GitLab.com and only Premium and Ultimate tiers on self-managed, use\n[free, silver, gold, premium, ultimate]\nand set\ngitlab_com: false\nFor availability in the Silver and Gold tiers on GitLab.com and all tiers on self-managed, use\n[core, premium, ultimate, silver, gold]\nand set\ngitlab_com: false\nFor availability in the Gold tier on GitLab.com and only Premium and Ultimate tiers on self-managed, use\n[premium, ultimate, gold]\nand set\ngitlab_com: false\nAdd-ons\nTo specify a subscription add-on, enter text in the\nadd_ons: [ ]\nfield.\nEach entry adds a badge. For Duo Pro and Duo Enterprise, specify both. For example:\nadd_ons\n:\n[\n\"Duo Pro\"\n,\n\"Duo Enterprise\"\n]\nIf only Duo Pro applies, use\nadd_ons: [\"Duo Pro\"]\n.\nFeatures behind flags\nFrom time to time a feature may be developed behind a feature flag and made\navailable slowly\nto larger audiences. If this is the case, do not include the item in the release post unless you are deliberately seeking beta testers. This may result in a feature issue being closed in a milestone earlier than it is announced.\nIf you are deliberately seeking beta tests, include the release post as well as instructions on how to enable the feature and provide feedback.\nDocumentation\nProvide a link to the\nupdated\ndocumentation for the feature. It is a required field.\nIt can be, in this priority order:\nfeature documentation\nlink, when available\nfeature-related documentation\nlink, when a dedicated doc is not available\nImportant\nAlways link to the EE documentation, even if the feature is available in CE.\nNote:\ndocumentation_text\nwas deprecated by\n!13283\nfor GitLab 11.2.\nImportant\nEvery feature mentioned on the release post must link to an\nup-to-date document shipped in time, before the feature freeze.\n“Docs or it didn’t happen!”\nIllustration (images, videos)\nimage_url\n: link to the image which illustrates that feature.\nRequired for top and primary features, optional for secondary features.\nimage_noshadow: true\n: if an image (\nimage_url\n) already has shadow\nthe entry\nimage_noshadow\nwill remove the shadow applied with CSS by default. Optional.\nvideo\n: when present, overrides the image and displays the linked video instead. See the\nVideos\nsection for more information.\nCheck the section\nAdding Content\n>\nIllustrations\nfor more information.\nFeature reporter\nreporter\n: GitLab handle of the user adding the content block to\nthe release post (not the feature author).\nThis should be the PM responsible for the feature, so in the review\nphase anyone knows who they have to ping in order to get clarifications.\nIt is a required field.\nStage\nstage\n: the\nstage\nthe feature belongs to (lowercase):\nmanage\nplan\ncreate\nverify\npackage\nrelease\nconfigure\nmonitor\nsecure\nsoftware_supply_chain_security\nsystems\nThe stages display as an icon next to the product tiers’ badges linking\nto the stage webpage using a regex:\nhttps://about.gitlab.com/stages-devops-lifecycle/<stage>/\n. We can\nalso override it with a\ncustom stage URL\n.\nAlthough\nstage\nis a required field, if a feature doesn’t\nbelong to any of the stages at all, you can delete the\nstage\nline and it won’t output anything.\nBesides displaying the icon, with\nstage\nset, PMs can easily\nfind anything that is related to their area, even if reported by\nother users.\nNote\nteam\nwas\ndeprecated\nin December 2018 for GitLab 11.6 in favor of\nstage\n, with a follow-up iteration\nintroducing their\nrespective icons\n.\nCustom stage URL\nFor stages outside of the DevOps lifecycle, such as\nGrowth, which don’t have the same path as the other stages\n(\n/stages-devops-lifecycle/<stage>\n), it is necessary to add\nthe\nstage_url\nto the content block to override the default path:\n# Growth\nstage\n:\ngrowth\nstage_url\n:\n'/handbook/product/growth/'\nCategories\ncategory\n(array): Any category(ies) the feature belongs to. These are usually attached\nto the feature’s issue as labels. A list of categories can be found in\n/data/categories.yml\n.\nMake sure to add the category\nname\nexactly as typed on the data file.\nRelated issue, epic, merge request, or webpage\nissue_url\n: link to the issue(s) on GitLab.com where the feature is discussed\nand developed. Using this link the reviewer can check the status of the specific\nfeature for consistency and additional references. Avoid linking to a confidential\nissue so the wider community can get context about the change.\nIt is a required field, but can be replaced with\nmr_url\n,\nissueboard_url\n, or\nepic_url\n.\nAlways wrap links in single quotes (\n'https://example.com'\n). Multiple links are allowed.\nissueboard_url\n: link to the issue board related to the feature. Not required, but available.\nmr_url\n: link to the MR that introduced the feature. Not required, but available.\nepic_url\n: link to the epic related to the feature. Not required, but available.\nwebpage_url\n: link to the marketing webpage for a given feature. Not required, but available.\nFeature description\n: add the feature’s description in this entry.\nMake sure your cursor is in the line below the pipeline symbol\nintended once.\nAll\ndescription\nfields fully support\nMarkdown\n, the only thing you need to be worried about is respecting the indentation.\nCover image license\nIf a cover image from a 3rd party is used, according to our\nBlog handbook\n, it’s necessary to provide the source of the cover image. Fill in the entry below to display this info at the very end of the\n...release.html.md\nblog post:\ncover_img\n:\nimage_url\n:\n'#link_to_original_image'\nlicence\n:\n# which licence the image is available with\nlicence_url\n:\n'#link_to_licence'\nIf the image is\ngenerated by GitLab\n, copyright info is not required and can be removed from the\n.html.md\nfile after setting\nrebrand_cover_img\nto\ntrue\n.\nImportant notes on upgrading\nTo be added by the Distribution Product Manager.\nNote\nThe “upgrade barometer” section was\ndeprecated\non GitLab 11.8 and replaced with a section\ncalled “Important notes on upgrading to GitLab X.Y”.\nUpgrade warnings should be added to the release post\nonly to describe important upgrade notes\n, such as:\nMigrations, post migrations, background migrations\nDowntime\nSpecial cases\nIf there’s no relevant info to a given release, do not add this section\nto the post.\nUI improvements, performance improvements, and bug fixes\nThe release post will link directly to closed issues or merge requests for the relevant milestone filtered by the following labels:\nBug fixes:\ntype::bug\nworkflow::complete\nworkflow::verification\nworkflow::production\nPerformance improvements:\nbug::performance\nworkflow::complete\nworkflow::verification\nworkflow::production\nUI improvements:\nUI polish\nBeautifying our UI\nUX Paper Cuts\nworkflow::verification\nand\nworkflow::production\nare being included while we adopt the\naddition of the\nworkflow::complete\nlabel\n.\nworkflow::complete\nis the desired label to indicate an issue is considered by users to be delivered.\nOmnibus improvements\nTo be added by the Distribution Product Manager.\nThis section should contain any relevant updates for packaged software, new features, and new commands relating to the administration of self-managed GitLab instances deployed using the Omnibus package e.g. (\ngitlab-backup\n).\nExtras\nTo be added by Product Managers and merged by Engineering Managers.\nIf you have an announcement that doesn’t quite fit the other content types, you can use the\nextras\ncontent block. If you think your announcement does fit this type, ping the Release Post Manager and\n@justin\nin\n#release-post\nfor guidance.\nAn example is provided in the\n/data/release_posts/unreleased/samples/extras.yml\nfile.\n---\nextras\n:\n-\ntitle\n:\n\"Example title\"\ndescription\n:\n# supports markdown\nDescription\nMultiple blocks:\nextras\n:\n-\ntitle\n:\n\"Example title one\"\ndescription\n:\n# supports markdown\nDescription one\n-\ntitle\n:\n\"Example title two\"\ndescription\n:\n# supports markdown\nDescription two\nApply the following labels to the MR:\nrelease post item\nrelease post\nrelease post item::extras\nFor review, select the\ntechnical writer\nassigned to the stage.\nWhen the MR is approved, add the\nReady\nlabel before merging.\nDeprecations, removals, and breaking changes\nDeprecation, removal, and breaking change announcements appear\nin GitLab Docs\nand in the release post of the announcement’s corresponding milestone.\nBefore making an announcement, review the\nbreaking changes, deprecations and removals guidance\nto ensure you:\nAre minimizing disruption for our customers.\nAre providing the required advance notice for workflow changes.\nHave\ndetermined if the change is a breaking change\n.\nMilestone due dates\nThursday, 3 weeks before release: Announcement MR has been created\nThursday, 1 week before release: MR has been assigned to a technical writer\nThursday, 1 week before release: MR has been merged\nWalkthrough video\nThis video will walk you through the process of making an announcement:\nDeprecations and other planned breaking change announcements\nTo be added by Product Managers or Engineering Managers and merged by Technical Writers at least 3 milestones ahead of the planned removal date.\nFor example, if the intended removal milestone is\n17.0\n, given the following release schedule:\n16.9, 16.10, 16.11, 17.0\n, then\n16.9\nis the third milestone preceding intended removal, and the last milestone for deprecation announcements.\nCreate a separate MR for each announcement.\nDo not edit the\nfeatures.yml\nfile until the feature has been removed from the product, or the breaking change has been implemented.\nIf you want to bundle multiple announcements in one MR, for example if it’s a group of dependent deprecations that will happen on the same date as “all or none,” reach out and first discuss this with the Release Post Manager.\nCreating the announcement\nCreate a new branch in the\ngitlab-org/gitlab\nproject.\nCopy the\ntemplate file\nand save it in the\ndata/deprecations\nfolder.\nName the file\nXX-YY-feature-name.yml\n, where\nis the milestone of the initial announcement. For example,\n14-7-pseudonymizer-deprecation.yml\n.\nCreate a merge request using the\nDeprecations\nMR template for the change description.\nThe title must clearly explain the deprecation or planned change. For example:\n“The\nconfidential\nfield for a\nNote\nis deprecated.”\n“The maximum number of characters in a job name will be limited to 250.”\n“Access tokens with no expiration date will be changed to have an expiration of one year.”\n“The\nomniauth_crowd\ngem is deprecated.”\nThe description must:\nBe clear and concise.\nGive a brief explanation of the details or reasons for the change.\nThe description must also explain what the user must do as a result of the change. In other words, the entry\nmust\nbe\nactionable\nby users or admins. For example:\n“Use the\ninternal\nkeyword instead of\nconfidential\n.”\n“Reduce the number of characters in all job names to be 250 characters or less.”\n“Give an expiration date to any access tokens that have no expiration date.”\n“Stop using the\nomniauth_crowd\ngem. It will be removed and will not be replaced.”\nAvoid announcements like “Feature A is deprecated and will be removed. Wait until the replacement feature is released, and switch to it at that time.”\nIf the entry is not actionable, delay the deprecation or change announcement until there is an action available for users to address the change.\nAssign reviewers as recommended in the template.\nSet the\nbreaking_change\nvalue to\ntrue\nand add the\n~\"breaking change\"\nlabel to the MR. If the deprecation or planned change will not cause a breaking change (rare, but possible), use\nfalse\nand do not add the label.\nAssign the MR to the technical writer\nassigned to the stage\n.\nReviewing and merging the announcement\nThe TW Reviewer reviews the content, adds a commit that\nupdates the deprecations doc\n, and merges the MR by the Thursday, 1 week before release. After merging, the announcement will be visible on the\ndeprecations documentation page\nwithin an hour.\nIf the MR is at risk of missing the cut off date, open a duplicate MR and set the target branch to\nX-Y-stable-ee\nwhere\naligns with the version released\n. If you have trouble, ask for help in\n#mr-buddies\nor refer to the\nfull process for backporting an MR\n.\nAnnouncing an End of Support period\nThe\ndeprecation template\nprovides an option to end support for a feature prior to its removal. This option should only be used in special circumstances and is not recommended for general use. Most features should be deprecated and then removed.\nAn End of Support milestone must be at least 3 milestones\nafter\nthe deprecation announcement. For example, if the deprecation announcement is made in\n15.1\n, the End of Support milestone must be in\n15.4\nat the earliest. There is no requirement for the gap between the End of Support milestone and the Removal milestone.\nIf an End of Support milestone is announced, it will be displayed under the title of the deprecation announcement on the\nDeprecations page\n. End of Support milestones are not currently displayed in the release post.\nWhen to define an End of Support period\nIf there is a long period of time between the deprecation and the planned removal.\nIf supporting the feature during an extended deprecation period would affect engineering velocity (bloat, dependency management, etc.).\nCommunicating End of Support\nIf you decide to declare an End of Support period:\nCheck for any\nSupport Stable Counterpart\n(also listed on the\nproduct categories page\n) for your development group and tag them in the MR that adds a value to the\nend_of_support_milestone\n.\nIf your group does not have a Support Stable Counterpart, look for a stage or section Support Counterpart. If none, please post in the\n#support_leadership\nSlack channel with a link to the readiness issue (next line).\nPlease also open a Support Readiness issue\nfollowing the Support communications guidance\n.\nEditing an announcement entry\nThis process is very similar to creating an announcement entry, with the difference being that the YAML file already exists.\nTo edit an existing entry:\nCreate a new branch in the\ngitlab-org/gitlab\nproject.\nFind and edit the\n.yml\nfile in the\ndata/deprecations\ndirectory.\nCreate a merge request for the change, and use the\nDeprecations\nMR template for your change.\nAssign reviewers as recommended in the template.\nAssign the MR to the technical writer\nassigned to the stage\n. (By the Thursday, 1 week before release if revising an entry for the upcoming release)\nThe TW Reviewer reviews the content, adds a commit that\nupdates the docs\n, and merges the MR. (By the Thursday, 1 week before release)\nUpgrades\nTo be added by Product Managers or Engineering Managers and merged by Engineering Managers.\nDescribe any considerations administrators should have when upgrading to this version. These could be warnings about potential data loss, recommendations for maintenance beforehand, and other similar concerns.\nConsiderations for future upgrades should be noted in the\ndeprecations\nsections.\nOne notable example was in %12.10,\nwe required administrators to migrate from Postgres 10 to Postgres 11\n.\nUpgrade items go in the same directory as regular release post items. See the\nupgrade template\nto create an upgrade notice. Create one .yml file in the\n/data/release_posts/unreleased/\nfolder, using the following content block for each notice:\nupgrades\n:\n-\nreporter\n:\nbikebilly\n# item author username\ndescription\n:\n# example (supports markdown)\nLorem ipsum dolor sit amet, consectetur adipisicing elit.\nVeritatis, quisquam.\nApply the following labels to the MR:\nrelease post\nrelease post item\nrelease post item::upgrades\nFor review, select the\ntechnical writer\nassigned to the stage.\nWhen the MR is approved, add the\nReady\nlabel before merging.\nMajor releases\nMajor releases happen once a year and start a new versioning cycle: 14.0 - 14.10 –> 15.0 and so on.  Contribution to and management of content for major releases follows the same schedule as\nmonthly releases\n. But for major releases, the Release Post Manager can expect some extra coordination and communication from the Social, PR, and Marketing teams, due to extra activities and needs for a major release. Additionally, during a major release, the Release Post Manager may need to support PM volunteers managing communication of removals that are breaking changes.\nCommunicating breaking changes\nProduct Operations will lead the communication of breaking changes for major releases as part of the release post. It is important the breaking changes be flagged for SaaS users prior to the rollout of the updates in the major version, so they are prepared and their workflow is not unexpectedly disrupted. Beginning as early as 3 milestones ahead of the major release, Product operations will start communictions/coordination for announcements and a\nbreaking changes blog\n. Starting as early as 2 milestones ahead of the major release, Product Operations we will use the\nbroadcast message feature\nto communicate upcoming breaking changes with SaaS users.\nProduct Operations initiates breaking changes communications when they’re assigned an\nautomated GitLab issue\n, with a task list and timeline. These communications rampup three minor releases before the major release. For example: if the major 15.0 release is planned for May 22, the communications rampup with the automated issue being generated  during release 14.8.\nAdding content\nFor entries that support Markdown, use regular\nMarkdown Kramdown\n, as we use for all blog posts and webpages on about.GitLab.com.\nIllustrations\nImages\nEach image should be compressed with\nImageOptim\n,\nTinyPNG\n, or similar tool. You can also try\nautomation tools like Hazel or Automator\nEach image should not surpass 150KB (300KB for cover\nimage), GIFs included\npngbot\nwill compress PNG images added in\nmerge request by converting each PNG to PNG 8 (8 bit, 256 colors) using\npngquant\nbefore losslessly compressing with\nzopflipng\n.\nApplication screenshots\n:\nMake sure that the application screenshot captures the feature to make it\nimmediately recognizable.\nInclude\nonly\nthe necessary UI context to allow the reader to identify where this\nfeature is available. Minimize empty space in a screenshot. You may need to make\nyour browser window smaller before taking the screenshot, to bring UI elements\ncloser together.\nCrop screenshots so that they are wide, not square, so that when they fill\nthe column width and do not take up large amounts of vertical space.\nAvoid resizing images. Ideally include the screenshot at native High DPI\n(Retina Display) resolution so that it is sharp when viewed on these displays\nReduce the number of colors in your screenshot using a quantizer like\nImageAlpha\n,\npngquant\n, or\nTinyPNG\n. Try reducing the number of colors to\nfewer than 256 colors (default) to increase savings. Small savings add up\nover many images.\nFinally compress your image using a lossless compression tool like\nImageOptim\n, or\nzopflipng\nto reduce the file size even\nfurther, saving an additional 5-20%.\nIn most instances it should be possible to reduce a PNG screenshot well\nbelow 100KB. Small savings on each image accumulate quickly and reduce the\npage load time significantly.\nScreenshots throughout the post should be harmonic and consistent in terms\nof their size and quality.\nAnimated GIFs\n:\nIf a GIF isn’t necessary, replace it with a static image (.png, .jpg)\nIf an animation is necessary but the GIF > 300KB, use a video instead\nCover image\n:\nCover images for 16.x releases have been created by the marketing team and can be found\nhere\nFor cover images after 16.x,\nraise a similar request\n.\nThis image should be eye-catching, inspiring and avoid images of people. The image should be landscape orientation, roughly 1920 x 1080, and no larger than 300 KB.\nTo test the image and see how it fits (without waiting for a build or running the handbook locally):\nNavigate to a previous release post\nUsing the web inspector find the element\n<div class=\"cover\" style=\"background-image: url();\">\nInside\nurl()\n, replace the string with the URL of the image (the actual URL of the image, you may need to right-click the image and select “copy image address”)\nHit the\nEnter\nkey and you should see the image render inside of your web browser\nImage shadow\n:\nwhen you add images though the text,\nmake sure all images have the class shadow applied:\n![image alt text](#img-url){:.shadow}\nIf the original image already has shadow applied, don’t use\n{:.shadow}\n.\nIf you’re inserting the image in the YAML file via\nimage_url\nentry, add the\nimage_noshadow: true\nentry\nright after\nimage_url\n.\nVideos\nYou can add videos to release post content blocks in two ways:\nBy using the\nvideo:\nentry in the content block\nBy including the video in the\ndescription:\nof the content block\nIn either case, the video must first be uploaded to\nGitLab’s Unfiltered YouTube channel\n.\nUploading videos to GitLab Unfiltered YouTube channel\nWhen adding videos to content blocks, it is important to ensure that the correct video URL is used and that the video’s visibility settings are set to “Public”. Follow the steps below to properly prepare a video for inclusion in a content block.\nUpload the video to\nGitLab’s Unfiltered YouTube channel\nMake sure that the visibility settings are set to “Public”.\nCopy the video URL and add /embed/ to it.\nReplace\nyoutube.com\nwith\nyoutube-nocookie.com\n. This is the URL you will use in the content block.\nFor example:\nhttps://www.youtube.com/watch?v=dQw4w9WgXcQ\nbecomes\nhttps://www.youtube-nocookie.com/embed/dQw4w9WgXcQ\nReview the auto-generated captions for your video, and clean them up for accuracy. Machine-generated captions often mangle technical terms.\nAdding videos to content blocks\nIn the content block, use the entry\nvideo:\nfollowed by the video’s URL\nvideo: https://www.youtube-nocookie.com/embed/dQw4w9WgXcQ\nIf both a video and an image are present, the video will override the image and only the video will be displayed\nAdding videos to descriptions\nWhen adding videos to a content block description, it is important to use the correct markup to ensure that the video is displayed correctly.\nTo add a video to a description, wrap the video in a\nelement and add the class\nvideo_container\n. This assures that the video is displayed responsively. For example:\n-\nname\n:\n\"Awesome Feature\"\n...\ndescription\n:\nLorem ipsum dolor sit amet, consectetur adipisicing elit. Quae, provident.\n<!-- Leave a blank line above and below the code below. Do not change the code block in any ways, except for the video URL. Leave the indentation as-is and do not remove the space prior to </iframe>. -->\n<figure class=\"video_container\">\n<iframe src=\"https://www.youtube-nocookie.com/embed/dQw4w9WgXcQ\" frameborder=\"0\" allowfullscreen=\"true\"> </iframe>\n</figure>\nLorem ipsum dolor sit amet, consectetur adipisicing elit. Quae, provident.\nTechnical aspects\nThe release post is created from many small data files, that are rendered into the final form using templates and helpers.\nThe content files need to be created every release with the content unique to that release, as described by the section\ngetting started\n.\nGetting started\nThe template and helper files are used to render the blog post from the many content files, and do not need to be changed in most releases.\nTemplates:\nLayout (Haml) file\n:\ncreates a layout for the final HTML file, and requires the include file below.\nInclude (Haml) file\n:\nbuilds the content of the post applying custom styles. Its markup includes semantic SEO improvements.\nHelpers:\nHelper (Ruby) file\n: when the release post is being rendered, the helper combines all the release post items into a variable that is used by the include (Haml) file. The output of the helper is consistent with single data file process used until GitLab 12.8.\nContent:\nData (YAML) files\n: each contain the content for one feature, improvement, or deprecation. Data files are added to the\nunreleased\nor\ndata/deprecations\ndirectories, and then moved to a\nrelease\ndirectory. The purpose of the helper (Ruby) is to combine these files when rendering the release post.\nBlog post (Markdown) file\n: the blog post file holds the introduction of the blog post and frontmatter (\ntemplate\n,\nexample\n).\nTo learn more how the template system works, read through an overview on\nModern Static Site Generators\n.\nTo run the project locally:\nIn the terminal, go to the\nwww-gitlab-com\nproject. Depending where you cloned it:\ncd\n/path/to/www-gitlab-com\nInstall dependencies:\nbundle install\nyarn\nRun Middleman\n.\nSee the release post locally, using\nhttps://127.0.0.1:4567/\ninstead of\nhttps://about.gitlab.com/\n. For example,\nhttps://127.0.0.1:4567/releases/2021/09/22/gitlab-14-3-released/\n.\nFeature order\nImportant note: Feature order should not be changed without approval from the Release Post Manager.\nPrimary feature content blocks are sorted alphabetically by file name so if necessary, the ordering can be affected by adding a 2-digit numerical prefix to the file name of each individual content block. For example,\n01_filename.yml\n,\n02_another_file.yml\n, etc.\nSecondary features are first grouped by stage and within each stage sorted alphabetically by title. Features with no specified stage are grouped last. In release 13.10 and prior, bug fixes, performance improvements, and usability sections were also part of this automated sort order. Starting with release 13.11, bugs, performance improvement, and usability sections were changed from secondary features to tertiary features, so they now will automatically come after the secondary features and prior to the Deprecations Removals and Upgrades sections.\nSometimes, the height of the secondary features content will be much longer in the left or right column, resulting in white space. In that case, you can force a block of content from the left to the right or vice versa by adding a\nforce_left: true\nor\nforce_right: true\nto an entry’s yml file. (\nSee this MR as an example.\n)\nRelease post branch creation Rake task\nThe release post branch and most of the related directories, files, issues, and MRs are automatically created when\nrelease:start\nRake task\nautomatically runs on the Monday, 3 weeks before release.\nIf the script fails to run or there are pipeline issues, you can run\nbundle exec rake release:start\nyourself to make the following things happen:\nYou are asked for the GitLab version (for example, 13.10), and the release\npost date in ISO format (for example 2021-03-22). The script then reads those\ntwo values and uses them in the templates that are mentioned in the next steps.\nIf one of them is missing, the script stops and exits.\nThe branch name is set to\nrelease-X-Y\n, which is based on the version you\nprovided above.\nThe script checks if the release branch already exists. If it does, it\nstops and exits. You’ll need to delete your local branch (\ngit branch -D release-X-Y\n)\nif you want to re-run the script.\nGit stashes your current changes, if any, checks out\nmaster\n, and pulls from\norigin\n(this should be the default remote pointing to the\ngitlab-com/www-gitlab-com\nrepo,\nyou can check with\ngit remote -v\n).\nThe script then creates the new release branch.\nThe\nintro\nis created by using the template under\ndoc/templates/blog/monthly_release_blog_template.html.md\n. It replaces the\nstub X.Y values with the version you provided in the first step and adds the author name and handle.\nThe data directory for the release is created under\ndata/release_posts/X_Y/\n.\nIf it exists, the script stops and exits. You’ll need to delete this directory\nif you want to re-run the script.\nThe\nNotable Contributor (MVP) template\nis used to create the Notable Contributor (MVP) file (\ndata/release_posts/X_Y/mvp.yml\n).\nThe retro issue is generated and assigned using the\nRelease-Post-Retrospective template\nThe script performs a find and replace to update the following values in all of the MRs and Issues above using content from\ndata/release_post_managers.yml\n:\n@release_post_manager\n:\nmanager\n@tw_lead\n:\nstructural_check\n@tech_advisor\n:\ntechnical_advisor\n@pmm_lead\n:\nmessaging\nThe script performs a find and replace to update occurrences of\n,\nwith the appropriate values based on the current date and milestone.\nRelease post item generator\nThe\nrelease post item generator\nautomates the creation of release post items using issues and epics. Issues and epics are the source of truth for what problems are being solved and how, and should have a clear description, and be well labeled. The script uses this information to pre-fill release post item MRs:\nIssue/Epic element\nRelease Post Item Attribute (yml) or MR element\nIssue Title\ntitle:\nLabel\ndevops::\nstage:\nLabel\ngroup::\nassigns group product manager as reporter, and tags\nrelevant team members in the MR\nlabel\ncategory:\ncategories:\nLabel\nrelease post item::\n(\nprimary\n/\nsecondary\n)\ncontent block type\nprimary:\nor\nsecondary:\nLabel tier (e.g.\nGitLab Core\nGitLab Premium\nGitLab Ultimate\n)\navailable_in:\nIssue web url (i.e.\n/gitlab-org/gitlab/-/issues/####\n)\nissue_url:\nIssue description under\n### Release notes\ndescription:\nwill contain all text except for the\ndocumentation_link\nand\nimage_url\ndocumentation_link:\nis the first URL in the\n### Release notes\nsection containing\nhttps://docs.gitlab.com*\nimage_url:\nis the first image added to the\n### Release notes\nsection. (e.g.\nImage: ![name](/path/)\n)\nImportant note:\nGitLab Free tier is referenced as\ncore\nin the data file. This is intentional and the page templates will apply the proper tier name on the frontend.\nTo ensure the generator script runs correctly follow the process below:\nMake sure the issue is open.\nMake sure the issue is not confidential. If you need to link to a confidential issue you will need to manually create the Release Post Item Merge Request as the\nrelease post item generator\ndoes not currently create MRs from confidential issues.\nUpdate your issue or epic with content in\n### Release notes\n(including a docs link and image, although those can always be added/updated in the MR later) specifically having it contain both a\nDescription:\nthen a\nDocumentation:\n.\nMake sure there is only plain text in the content beneath\n### Release notes\n. If there is any additional formatting, the script will fail.\nMake sure\ndevops::\n,\ngroup::\n,\ncategory:\nand tier (e.g.\nGitLab Core\n) labels are applied\nApply one of the\nrelease post item::\nscoped labels. This will make the generator script pick up your issue next time it runs (once per hour)\nOnce the script runs a draft MR in the\n/gitlab-com/www-gitlab-com\nproject will be opened and assigned to the group PM. You can continue editing and reviewing that MR from there.\nIf you’d like to check to see when the last pipeline ran (and if it picked up your issue), you can inspect the scheduled pipeline\nhere\n.\nYou can also watch\nthis overview video\ndemonstrating how to use the\nrelease post item generator\n.\n*Note: If you find problems with the\nrelease post item generator\n, questions should be posted in Slack #release-post or add feedback to the release post retrospective issue, tagging the release post\ntechnical advisor\n.\nThe generator script can also be run on your computer.\nClone the\nwww-gitlab-com\nproject, and install dependencies using\nbundle install\nRun the script, providing your GitLab private access token, and the issue URL:\n=\n<token> bin/release-post-item --no-local <issue_url>\nRefer to\nbin/release-post-item --help\nfor complete documentation.\nRelease post item linting\nThe\nrelease post item linter\nvalidates all items being merged to the\ndata/release_posts/unreleased\ndirectory meet minimal\nstandards. Specifically, it checks:\nYAML can be parsed\nConformity to\nschema\nEach file contains exactly one item (e.g. feature or deprecation)\nContent blocks have valid fields\nDeprecations have valid fields\nThe\nstage\nfiled maps to a valid stage key in\ndata/stages.yml\nThe\ncategories\nlist only contains valid category names from\ndata/categories.yml\nIt does not check if:\ntop\nand\nprimary\nitems have an image or video\nissue_url\nis supplied, since there are other alternatives\nThe schema is implemented using\nRx\n.\nDeprecation rake task troubleshooting\nIf you have trouble running the rake task, you can check the following troubleshooting steps:\nVerify that your Ruby version matches the\ngitlab-org/gitlab\nproject’s Ruby version\n. You can check with\nruby -v\n. See more about\nsetting up a Ruby environment\n(MacOS only). You can also validate your setup by running\n./bin/doctor\nfrom the terminal.\nUpdate your gems by running\nbundle install\n.\nYour bundler version could be out of date, so you can try running\ngem install bundler:2.1.4\n.\nResolve merge conflicts in deprecations.md\nIf you rebase the branch of a deprecations or removals MR, there might be multiple merge conflicts in the\ndeprecations.md\nfile. Do not resolve individual\nmerge conflicts from your IDE. Instead, use the removals rake task to update the file and resolve the merge conflicts.\nTo resolve merge conflicts:\nIn the branch you checked out in the\ngitlab-org/gitlab\nproject, run the deprecations Rake task:\n# For deprecations\nbin/rake gitlab:docs:compile_deprecations\nStage your changes:\ngit add .\nContinue the rebase:\ngit rebase --continue\nIf you get merge conflicts after you continue the rebase, it’s possible that\ndeprecations.md\nis still out of date with\nthe latest changes in the\nyml\n. If this occurs, complete the steps again until you clear the merge conflict.\nRelease post merge request template\nThe\nrelease post MR template\nis our checklist for every release. Let’s keep it up-to-date! :)\nAdding deprecations and removals index to\nwww-gitlab-com\nIn order to display a list of deprecations and removals in the Release Post, an index must be generated from the\ngitlab\nproject and added to\ndata/release_posts/xx_y\nin the\nwww-gitlab-com\nproject.\nOpen a terminal in the\ngitlab\nproject\nRun\nbin/rake gitlab:docs:write_deprecations\nEnter the relevant milestone when prompted\nManually copy and paste the generated files into the corresponding\n/data/release_posts/xx_y\nin the\nwww-gitlab-com\nproject\nAdd\ndeprecations:\nto the first line of the deprecations index\nChange all instances of\nname:\nto\nfeature_name:\nin both files\nPatch and Security release posts\nThe Delivery team is responsible for creating release posts for\npatch\nand\nsecurity releases\n.\nRelease posts should live in\nsites/uncategorized/source/releases/posts\n. For patch and security releases,\nplease make sure to specify them in the title, add the correct\ncategory\n:\nPatch releases:\ntitle: \"GitLab Patch Release: x.y.z and x.y.z\"\ncategories: releases\nSecurity releases:\ntitle: \"GitLab Security Release: x.y.z and x.y.z\"\ncategories: releases\nCreating an MR for What’s New entries\nVideo walkthrough of the process\n“What’s new” can be seen by clicking on the\n?\nicon in the navigation menu of GitLab and choosing “What’s new.”\nThe What’s New MR will be initiated by the Release Post Manager on the Tuesday of release week, finalized on the Wednesday of release week, and typically get merged by a\nmaintainer\n2 to 4 hours AFTER the release post is live on the\nrelease date\n. The exact timing of the merge depends on the availability of a\nmaintainer\nto merge it**\nOn the Tuesday of release week, the Release Post Manager creates the What’s New MR.\nThe RPM will pull all of the final/approved primary items in the release post to feature in  “What’s New”\nThe selected items can but do not have to align with the primary features of the release post. If the RPM feels comfortable making a unique selection, they may do so.\nIt is recommended to strive for a balance of features available to both free and paid users. If we only include Ultimate features, non-Ultimate users may stop engaging.\nThe Release Post Manager will create a new MR in the\ngitlab.com/gitlab-org/gitlab\nproject\nUse this\ntemplate\nto create a new file in the\ngitlab/data/whats_new\ndirectory.\nTitle the file as\nYYYYMMDD0001_XX_YY.yml\n- for example, the 13.4 entry is titled\n202009300001_13_04.yml\n.\nUsing the content that is in the release post items, duplicate the content for What’s New.\nSometimes it is necessary to trim down the description. Keep in mind that these should be short, and generally a single paragraph.\nSaaS-only features need to use\n[free, premium, ultimate]\nin the What’s New MR instead of\n[free, silver, gold]\nor\ncore\nas is used in the release post items. We will streamline this discrepancy in the future, but for now, the RPM should update the values as necessary when creating the What’s New MR.\nStage names are case-sensitive, so be sure that the stages are capitalized in order for the pipeline to pass.\nImages are not required, but encouraged when possible.\nFor videos, you will need to provide an image. For YouTube videos, you can use the image URL, which can be found by inserting the youtube unique ID into this format:\nhttps://img.youtube.com/vi/[insert-youtube-video-id-here]/hqdefault.jpg\n. For cases where a video thumbnail doesn’t look great, consider using a generic image from\nthe\nsource/images/growth\ndirectory\n.\nImages will end up at a URL like\nhttps://about.gitlab.com/images/X_Y/XXXXXXX.XXX\nMake sure you provide a full URL for the YAML entry. Ex:\nhttps://about.gitlab.com/images/13_7/reviewers_sidebar.png\n.\nIf an image is not available, you can use a generic image (ex:\nhttps://about.gitlab.com/images/ci/gitlab-ci-cd-logo_2x.png\n) or omit the image_url.\nBefore committing the MR,\ncheck the YAML with a validator\n.\nAdd the ~“documentation” label.\nApply the affiliated release\nmilestone\n(it’s ok if it says “expired”) and labels\nwhats new\nand\nrelease post\n.\nOn the Tuesday of release week, when the MR is ready for review, assign\n@[name of PLT member who is reviewing this month]\nas reviewer and\n@mention\nthem in the MR to complete their review by the Wednesday of release week. The name of the PLT member who is reviewing this month can be found on the\nrelease post scheduling page\nAfter the release post is live and you have verified the images load locally in GDK by pulling down the What’s New branch, have the MR reviewed following our standard\ncode review process\nand have it merged by a\nmaintainer\n. It is recommended to communicate directly to the maintainer that the MR is time sensitive to avoid unnecessary delays.\nOpen a duplicate MR and set the target branch to\nX-Y-stable-ee\nwhere\naligns with the version released\n. Assign it to the same maintainer that merged the previous MR. This second MR ensures that any additional releases to version\ninclude this “What’s New” update. If you have trouble, ask for help in\n#mr-buddies\nor refer to the\nfull process for backporting an MR\n.\nIMPORTANT: The MR should not be merged until after the release post is live on the\nrelease date\nor the images will not display.\nAfter the release post is live, but before merging, the branch should be checked out and the content checked in GDK to make sure that all images are displaying, links are accurate, and that the What’s New items are part of the final release post. Only once those are confirmed should the MR be merged. Typically this means the What’s New content will be live on the day or two after the\nrelease date\n, depending on maintainer reviews.\nRelated\nPages\nGitLab the product\nGeneral guidance on deprecations, remvoals and breaking changes\nRelease Post volunteer schedule\nSecurity and monthly releases\nFeatures per release\nGitLab CE and GitLab EE changelog\nRelease managers\nTemplates\nMonthly release post MR template\nRelease post item MR template\nDeprecation issue template\nDeprecation MR template\nRelease Post retrospective issue template\nYML content block samples\nPatch release template\nSecurity release template\nManual Release Post Kickoff\nGuidelines to for manually kicking off the Release Post\nRelease Post Scheduling\nA list of managers and other assignees for scheduled GitLab release posts.\nLast modified July 15, 2025:\nRemoves instruction to link to EE version of docs (\neb338fcf\n)\nView page source\n-\nplease\ncontribute\n.", "num_words": 17474}
{"doc_id": "52d0796688b3b6c6", "url": "https://handbook.gitlab.com/handbook/marketing/corporate-communications", "title": "Corporate Communications Handbook | The GitLab Handbook", "text": "The Handbook\nMarketing\nCorporate Communications Handbook\nMission Statement, What We do, Team Norms, Contact Info and Resources for Corporate Communications at GitLab\nWelcome to the Corporate Communications Handbook\nMission Statement\nWe serve as strategic advisors to GitLab executives and cross-functional teams on issues that impact team members, customers, partners, and other business-critical parties.\nWe exist to positively influence the perception of GitLab by reaching economic buyers, technical champions, community contributors, advocates, investors, and industry analysts. We do this by developing and implementing strategic external communications plans that protect the brand, and generate awareness and preference for GitLab.\nThis page is the single source of truth for corporate communications objectives/goals, contact information, messaging, PR/social media guidelines, approval processes, strategy and more.\nWhat We Do\nThe GitLab Corporate Communications team is responsible for the following activities and communications channels:\nMedia relations (print/broadcast/podcasts)\nMedia sponsorships\nContributed article placement\nExecutive visibility\nAwards\nIncident Communications\n(separate handbook page)\nTeam Norms\nCelebrate individual wins, along with team wins\nSupport each other professionally and personally\nHold each other to a high standard\nWe have short toes and welcome collaboration, feedback, and feedforward\nWe strive for excellence\nContacting GitLab’s Corporate Communications team\nPlease use the\n#external-comms\nSlack channel.\nSpeaking on behalf of GitLab\nSpeaking on behalf of GitLab via a public channel such as a media interview (in-person or via phone), on a podcast, in a public issue on GitLab.com, on a forum, at a conference/event (live or virtual), in a blog or an external platform requires prior approval by the Comms team and must follow GitLab’s SAFE framework. To make a request, please use the\n#external-comms\nSlack channel.\nSpokesperson Criteria\nBeing a designated company spokesperson is a responsibility that should be taken with the utmost seriousness.\nSpokesperson Criteria:\nSubject matter expert\nBusiness requirement for your expertise\nApproved by Comms as a spokesperson\nTrained by GitLab media trainer\nManager approval\nGood company standing\nIf you are new to being a spokesperson for GitLab, the Corporate Communications team may ask you for video examples of past speaking engagements (events, webinars, tutorials, etc.) for assessment.\nMedia mentions, incoming media requests and interviews (including podcasts)\nTeam members may be approached by reporters, podcasts hosts, etc. to comment on the company and/or conduct interviews. If you are asked to be quoted or to provide commentary on any matter as a spokesperson of GitLab, please provide detail of the opportunity to the Corporate Communications team in the\n#external-comms\nSlack channel before engaging.\nWhile team members may have established relationships with reporters, podcast hosts, etc., engagement on any matter related to GitLab should go through the Corporate Communications team. You can reach the team in the\n#external-comms\nSlack channel before engaging.\nSpeaking Opportunities (conferences, meetups, webinars and other events)\nDeveloper Relations Speakers Bureau\nThe Developer Relations Speakers Bureau includes GitLab team members who participate in community/user meetups and deliver technical talks. Participation in the Developer Relations Speakers Bureau is distinct from media and analyst relations overseen by the Corporate Communications team.\nInvited to Speak\nIf you are asked to speak on behalf of GitLab at an event, on a webinar or at a Meetup, please contact the Corporate Communications and Developer Relations teams to ensure that the opportunity aligns with GitLab objectives and key narratives.\nInquiries should be initiated in the\n#external-comms\nSlack channel before you accept the speaking invitation.\nPlease allow 5 business days for evaluation. Opening an issue under Corporate Marketing to further collaborate on the opportunity may be requested.\nSubmitting to Speak\nIf you are planning to submit an event CFP or request to participate as a speaker for a webinar or Meetup, please ensure the opportunity aligns with GitLab objectives and key narratives. If you are unsure, please reach out to the Corporate Communications and Developer Relations teams. If accepted to speak, please notify the Corporate Communications and Developer Relations teams via the\n#cfp\nSlack channel w/link to the accompanying issue and ensure the teams have 7-10 business days to review your final presentations.\nPursuing Speaking Opportunities Separate from GitLab\nWe know GitLab team members are multi-faceted, and there may be opportunities to speak publicly that don’t overlap with your role at GitLab. In these cases, it is okay to do that, assuming the opportunity will not be in conflict with\nGitLab’s Code of Business Conduct & Ethics\n.\nIn these instances, it’s necessary to keep your role at GitLab and affiliation with the company separate from the presentation. Additionally, you should not use GitLab branding, resources, or time allocated to your work at GitLab to prepare or deliver your presentation. Please add\nthese views are my own\nto your comments, presentation, or social media.\nIf you’re considering a speaking opportunity, which includes participating in podcasts or developing your podcast, that could be perceived as being associated with GitLab even if it is not; please share the opportunity with your manager and #external-comms for review before accepting it to avoid any potential conflicts.\nEvent Booth Staffing\nIf you are staffing the GitLab booth at an in-person or virtual event, you are representing GitLab. Please follow the company’s SAFE framework when engaging with booth visitors and event attendees.\nEvent Support Requests\nThe PR team supports corporate-sponsored industry shows such as RSA, Black Hat, KubeCon NA, Google Cloud Next, and AWS re:Invent, where we make announcements and/or an e-group member attends.\nOur media strategy focuses on technology publications, business media, and vertical media only if we have a brand-name customer who will speak to the press or a product announcement tied to a vertical.\nThe full criteria for PR support at events includes:\nSpokesperson Availability:\nAn e-group member or designated delegate is confirmed to be onsite and available for interviews.\nGeographic Alignment:\nThe event is held in a country or region the corporate communications team currently supports (US, UK, Germany, France, Japan, Australia).\nMedia Presence:\nAt least three journalists from GitLab Top Media will be present at the event.\nNews Hook:\nThe event aligns with a compelling news hook related to a product announcement, significant partnership, or major industry trend for media or analysts in attendance.\nAdditional considerations include:\nCustomer Availability:\nAt least one customer approved to speak with the media on behalf of their brand about their GitLab experience is confirmed to attend. Customer contact information must be provided to the PR team 6 weeks in advance.\nAnalyst Alignment:\nAt least three analysts covering GitLab’s primary markets will be present at external events.\nVertical Industry Support Requests\nGitLab Corporate Communications takes a strategic approach to vertical industry support in alignment with the broader company strategy. Currently, our focus includes the public sector - a well-established area of our business. Specific support for finserv and telco or other verticals will be considered when there are referenceable customers who are willing to speak with the media and the PR team has allocated the appropriate resources. This ensures that our efforts are aligned with key business objectives.\nResearch-oriented requests\nAnalysts\nFor analyst research-oriented requests, please consult the Analyst Relations handbook section and direct questions to the\n#analyst-relations\nSlack channel.\nMedia\nAll media inquiries and requests must go through the corporate communications team via the\n#external-comms\nSlack channel.\nHonorariums\nIf you are approached by external parties seeking to provide payment for a GitLab team member’s time, please contact the corporate communications team via the\n#external-comms\nSlack channel to discuss the opportunity and approval process.\nSocial Media\nPlease consult the Social Media team (\n@social\non Slack)  for guidelines on representing GitLab on your personal social media platforms. If you are contacted on a social media platform and asked to share/retweet or provide commentary as a spokesperson of GitLab, please reach out to the social media team to provide details about the opportunity in the\n#social_media_action\nSlack channel.\nWriting about GitLab on your personal blog or for external platforms\nIt is necessary to keep your role at GitLab and your affiliation with the company separate from your personal blog or other external platforms. Additionally, you should not use GitLab branding, resources, or time allocated to your work at GitLab to prepare materials for personal projects. If you would like someone to check the draft of your personal work that could be perceived as being associated with GitLab even if it is not, please share it with your manager and the Corporate Communications team who will be happy to review it for potential conflicts before it is published. Please post it in the\n#external-comms\nSlack channel with a short summary and allow 5 business days for review.\nPublic GitLab Issues\nPosting in and discussions occurring within a public GitLab issue should follow the same guidelines as if you were posting about GitLab on social media, engaging with community members in a forum or conducting an interview with a media outlet. You are externally representing and communicating on behalf of GitLab.\nWhen representing and/or communicating externally on behalf of GitLab, please follow the SAFE framework. Being mindful of how you say things within open issues will help keep the company SAFE. We all represent the company.\nSharing Media Coverage\nSome media outlets (including\nthese ~14,000 newspapers and magazines\n) require GitLab to hold a license to share (and do the various other things noted below with) extracts, quotes or headlines of print and online articles - both internally (eg. via slack, email or in confidential GitLab issues) and externally (eg. on GitLab’s social media channels). The sharing of bare hyperlinks to articles (without extracts, quotes or headlines) does not require a license.\nA license may be required to do any of the following with extracts, quotes or headlines of print and online articles:\nPhotocopying, faxing, scanning, emailing or copying;\nSaving on an internal or external intranet or shared drive;\nPrinting, photocopying, emailing or distributing material received from a media monitoring organisation or PR agency;\nPosting material on internal or external websites or social media accounts.\nIf you are interested in doing any of the above with a media article (or an extract, quote or headline) internally or externally beyond just sharing the bare hyperlink, please reach out to the Corporate Communications team via the\n#external-comms\nslack channel before proceeding to confirm if a license is required.\nRequests for External Announcements\nPlease reach out via\n#external-comms\nin Slack if you have a request.\nPartner Requests for External Communications Support\nAny use of GitLab’s name, brand, or logo requires prior email approval by GitLab according to the process outlined below.\nPartner-led Blog Posts:\nGitLab is proud of its collaborative partner program, and we encourage partners to showcase their solutions, capabilities, and customer success stories through partner-led blogs. Please send all blog posts, including GitLab, to the GitLab Corporate Communications team at\npress@gitlab.com\nor #external-comms in Slack for review and approval.\nPress Release Criteria and Approval Process:\nPartners seeking to issue a press release that includes mention of their partnership with GitLab must meet the criteria outlined below and in the GitLab Partner Portal.\nPartner public relations participation criteria:\nA signed contract as a Select partner\nMinimum 10 joint customers and/or a strategic business plan\nNew partners: please reach out to your account representative for guidance.\nNote that GitLab requires up to 6 weeks of lead time to support external communications requests.\nPlease email your account representative for guidance on the approvals required and copy the GitLab Corporate Communications team at\npress@gitlab.com\n.\nGitLab account representatives: Any requests for public relations support requires approval from your executive sponsor, Nick Cayou. Please reach out via\n#external-comms\nin Slack if you have questions about this.\nGitLab Vendor Reference Requests\nIf you receive a vendor request for GitLab to act as a reference (case study, blog post, GitLab logo on their website, press release, etc.) for the product, service, and/or technology that your GitLab team is using, please refer to the\nprocess\noutlined on the Brand Strategy team’s handbook. For partner-led blogs or press releases, please refer to the\nPartner Requests for External Communications Support\nsection of the handbook. Note that due to the volume of requests, GitLab rarely writes joint press releases.\nCorporate Communications Resources and Trainings\nThis page is being updated.\nSocial Media Trainings Social Media 101 Training + Certification Please …\nGitLab Incident Communications Plan\nEscalations, Processes, and How to Manage Incidents\nGitLab Speakers Resources\nEvent Requirements If you have been invited to speak on behalf of GitLab, please reach out to …\nLast modified March 6, 2025:\nCorp Comms Handbook: Add details to sharing media coverage (\n56c38171\n)\nView page source\n-\nplease\ncontribute\n.", "num_words": 2086}
{"doc_id": "c544dc3d9fdfc454", "url": "https://handbook.gitlab.com", "title": "The GitLab Handbook", "text": "Company\nAbout GitLab\nValues\nMission\nVision\nCommunication\nCulture\nTeamOps\nCEO Readme\nOffice of the CEO\nE-Group Weekly\nEnvironmental, Social, and Governance\nHandbook\nAbout the Handbook\nHandbook Changelog\nHandbook Escalation\nHandbook Usage\nContribution Guide\nEditing the handbook\nHandbook Style Guide\nHandbook maintenance\nPeople Group\nAnti-Harassment Policy\nGlobal Volunteer Month\nHiring\nInclusion & Diversity\nLabor and Employment Notices\nLeadership\nLearning & Development\nOnboarding\nOffboarding\nSpending Company Money\nTalent Assessment\nTeam Member Relations Philosophy\nTotal Rewards\nTools and Tips\nEngineering\nCustomer Support Department\nDevelopment Department\nInfrastructure Department\nDeveloper Experience\nEngineering Productivity\nSecurity Practices\nOpen Source\nSecurity\nSecurity Standards\nProduct Security\nSecurity Operations\nThreat Management\nSecurity Assurance\nMarketing\nTeam Member Social Media Policy\nBlog\nBrand and Product Marketing\nEnterprise Data\nIntegrated Marketing\nSales Development\nMarketing Operations and Analytics\nGrowth\nDeveloper Relations\nCorporate Communications\nSales\nAlliances\nCommercial\nCustomer Success\nCustomer Success Management\nReseller Channels\nField Operations\nReporting\nSolutions Architecture\nFinance\nAccounts Payable\nAccounts Receivable\nBusiness Technology\nExpenses\nFinancial Planning & Analysis\nPayroll\nProcurement\nTax\nBoard meetings\nInternal Audit\nEquity Compensation\nProduct\nRelease posts\nAbout the GitLab Product\nBeing a Product Manager at GitLab\nProduct Principles\nProduct Processes\nProduct sections, stages, groups, and categories\nProduct Development Flow\nProduct Development Timeline\nData for Product Managers\nProduct Pricing Model\nCorporate Development / Acquisitions\nUX Department\nLegal and Corporate Affairs\nCommercial\nCorporate\nCorporate Development\nEmployment\nEnvironment, Social, and Governance (ESG)\nOperations\nPrivacy\nProduct\nRisk Management and Dispute Resolution\nTrade Compliance\nTake GitLab for a spin\nSee what your team could do with The DevSecOps Platform.\nGet free trial\nHave a question? We're here to help.\nTalk to an Expert", "num_words": 260}
{"doc_id": "cddfc025ff75cd93", "url": "https://handbook.gitlab.com/handbook/board-meetings", "title": "Board of Directors and Corporate Governance | The GitLab Handbook", "text": "The Handbook\nBoard of Directors and Corporate Governance\nThis page is intended to capture GitLab Board practices, but we evolve these over time and the page may not capture all changes. The source of truth for Board details is GitLab’s\nInvestor Relations site\n.\nBoard and Committee Composition\nBoard of Directors\nCurrent members of the Board of Directors\nBoard of Directors Job Description\nAudit Committee\nAudit Committee Charter\nMeeting Process\nThe Staff EBA to the CFO is the DRI of scheduling the quarterly Audit Committee meeting in conjunction with the Chairperson, Management DRI and their Sr. EBA\nTiming: 2-3 weeks prior to the formal Board of Directors Meeting\nDuration: 110min (Q1-Q3) 140min (Q4)\nAgenda document to include links to all material being reviewed during the meeting\nAll Audit Committee materials being reviewed during the meeting will be uploaded into Boardvantage 5 business days prior to the Committee meeting by the Corporate Paralegal. Committee members will be notified of such by the Management DRI.\nAudit Committee meetings are attended by:\nThe Chairperson of the Audit Committee, Audit Committee Members, CLO, CFO and Finance Leadership are all required attendees\nOther Team Members may be invited if needed or requested, depending on subject matter\nExternal Auditors and Outside Counsel\nAll Board Members including the CEO are invited to all Committee meetings as optional attendees\nCompensation and Leadership Development Committee\nCompensation and Leadership Development Committee Charter\nMeeting Process\nThe Legal and People Group EBAs are the DRIs of scheduling the quarterly Compensation and Leadership Development Committee meeting in conjunction with the Chairperson, Management DRI and their Sr. EBA\nTiming: 2-3 weeks prior to the formal Board of Directors Meeting and aligned with Audit Committee\nDuration: 80min\nAgenda document to include links to all material being reviewed during the meeting\nAll Compensation and Leadership Development Committee materials being reviewed during the meeting will be uploaded into Boardvantage 5 business days prior to the Committee meeting by the Corporate Paralegal. Committee members will be notified of such by the Management DRI.\nCompensation and Leadership Development Committee meetings are attended by:\nThe Chairperson of the Compensation and Leadership Development Committee, Compensation and Leadership Development Committee Members, CPO, CFO and CLO are all required attendees\nCertain members of the People Group or other Team Members may be invited if needed or requested, depending on subject matter\nOutside Compensation Consultant and Outside Counsel\nAll Board Members including the CEO are invited to all Committee meetings as optional attendees\nNominating and Corporate Governance Committee\nNominating and Corporate Governance Committee Charter\nMeeting Process\nThe Staff EBA to the CEO is the DRI of scheduling the quarterly Nominating & Corporate Governance Committee meeting in conjunction with the Chairperson, Management DRI and their Sr. EBA\nTiming: Twice yearly in March and September. Ideally 3-5 days in advance of the formal Board of Directors meeting\nDuration: 50min\nAgenda document to include links to all material being reviewed during the meeting\nAll Nominating & Corporate Governance Committee materials being reviewed during the meeting will be uploaded into Boardvantage 5 business days prior to the Committee meeting by the Corporate Paralegal. Committee members will be notified of such by the Management DRI.\nNominating and Corporate Governance Committee meetings are attended by:\nThe Chairperson of the Nominating and Corporate Governance Committee, Nominating and Corporate Governance Committee Members and CLO are all required attendees\nDirector of Legal, Corporate or Team Members may be invited if needed or requested, depending on subject matter\nOutside Counsel\nAll Board Members are invited to all Committee meetings as optional attendees\nMergers and Acquisitions Committee\nChairperson:\nMembers:\nMerline Saintil, Godfrey Sullivan and Sundeep Bedi\nManagement DRI:\nChief Product Officer\nMergers and Acquisitions Committee Charter\nMeeting Process\nThe Staff EBA to the CEO is the DRI of scheduling the Mergers and Acquisitions Committee meeting in conjunction with the Chairperson, Management DRI and their Sr. EBA\nTiming: As needed\nDuration: 50min\nAgenda document to include links to all material being reviewed during the meeting\nAll Mergers and Acquisitions Committee materials being reviewed during the meeting will be uploaded into Boardvantage 5 business days prior to the Committee meeting by the Corporate Paralegal. Committee members will be notified of such by the Management DRI.\nMergers and Acquisitions Committee meetings are attended by:\nThe Chairperson of the Mergers and Acquisitions Committee, Mergers and Acquisitions Committee, CPO, CFO and CLO are all required attendees\nTeam Members may be invited if needed or requested, depending on subject matter\nOutside Counsel\nAll Board Members are invited to all Committee meetings as optional attendees\nRevenue non-committee\nInternal Management Members:\nChief Financial Officer (DRI), Chief Executive Officer, Chief Revenue Officer (model, guidance, plan, target)\nLocation\nBoard meetings can happen remotely or in-person. We establish the meeting calendar in advance of the coming fiscal year. During this time, we agree on meeting locations.\nBoard Meeting Schedule\nBoard of Directors meetings are held quarterly.\nMeetings are scheduled on/around the Thursday 6 weeks after the end of the quarter, assuming availability of the Directors.\nThe Staff EBA to the CEO shall ensure that there are separate calendar invites for all attendees within each session, all including exact session start and end times, the appropriate Zoom link, and links to the agenda document. Any supplemental materials are required to be linked in the agenda document for each session. This is the outline of a past agenda, but we adapt agenda based on what is important to discuss:\nSession 1: Closed Session (Part 1)\nDuration: 15 minutes\nAttendees: GitLab Board of Directors\nSession 2: Administration Session\nDuration: 30 minutes\nAttendees: GitLab Board of Directors, GitLab CFO, CPO and CLO, outside legal firm, Board observers\nSession 3: Board of Directors Meeting - General Session\nDuration: 75 minutes\nAttendees: GitLab Board of Directors, E-Group, CoS to the CEO, Staff EBA, outside legal firm representatives, Board observers\nSession 4: Closed Session (Part 3) (optional, if needed)\nDuration: 20 minutes\nAttendees: GitLab Board of Directors\nSession 5: Board Only (without GitLab CEO)\nDuration: 20 minutes\nAttendees: GitLab Board of Directors (without the GitLab CEO)\nBoard Meeting Process\nTimeline\nThe Staff EBA to the CEO is the DRI for scheduling the Board meetings\nThe CFO is the DRI for assembling the deck. Four weeks in advance of the Board meeting, the CFO sends the templates for the materials to be created to the E-Group and EBA team.\n7 weeks before the Board meeting, the Lead Independent Director will reach out to the Board via email to discuss agenda topics.\n6 weeks before the Board meeting, the Lead Independent Director, CEO, and CFO will have a meeting to discuss and finalize the agenda. Once finalized, the CFO will share the agenda with E-Group.\nThe CFO sends a reminder to the E-Group 3 weeks in advance of the meeting.\nThe E-Group has the complete presentation materials ready 10 business days prior to the meeting. All materials are submitted to the CLO and CFO for review within 48 hours of receipt.\nOnce approved by the CLO and the CFO, the CFO authorizes the Corporate Paralegal to upload the materials into Nasdaq Boardvantage (NBV) and attach them to the corresponding NBV Meeting. All presentations and content should be finalized at this time with no further changes. The Corporate Paralegal is responsible for ensuring parity between the NBV Meeting and calendar invite. The Staff EBA to the CFO is responsible for the sharing settings on all materials. Materials should be shared with the E-Group, the Board (not via the @board alias), Board Observers, and the outside legal firm. Any exceptions must be confirmed by the CLO and relayed to the Corporate Paralegal before shipping. The deadline for the document upload is 2p PT 7 days before the Board meeting.\nThe Staff EBA to the CFO is responsible for linking all materials in the agendas for each session of the board meeting. Materials should always be linked in the agenda and shared with the appropriate attendees.\n7 days before the meeting, the CFO emails the Board notifying them that the materials are ready for review in NBV and includes any highlights or asks within the email.\nThe CFO is the DRI for the Administrative deck and will share this with the CLO, the Corporate Paralegal, the Staff EBA to CFO, and the Staff EBA to the CEO at least 1 week before the Board meeting. The Corporate Paralegal will upload the materials into NBV and then the CFO will notify the Board of their availability for review in NBV 4 business days prior to the Board meeting.\nThe day before the Board meeting, the Staff EBA to the CFO ensures that the Introduction section of the agenda is up to date with the latest attendees and ensures that the agenda document is up to date. Questions from the Board are verbalized during the meeting.\nThe CFO is responsible for ensuring that the Board meeting runs according to the time allotted.\nThe CLO is responsible for maintaining the Minutes of the meeting and submitting for Board approval.\nThe CLO ensures that PDF versions of the materials including presentations, exhibits, approved Minutes, and Administrative materials are securely stored in NBV and on Google Drive labeled with the date of the meeting.\nThe Staff EBA to the CFO updates the Next Meeting’s Timeline section of this page.\nThe E-Group debriefs in the first E-Group Meeting after the Board Meeting.\nNext Meeting’s Timeline\nThis section is updated after every Board Meeting by the Staff EBA to the CFO for the next Board Meeting.\nMeeting is scheduled for 2025-06-27.\n2025-05-05 - The Lead Independent Director will reach out to the Board to discuss agenda items.\n2025-05-12 - The Lead Independent Director, CEO, and CFO finalize the agenda. [At least 6 weeks before BoD Meeting] *TBD pending Godfrey’s availability\n2025-06-04 - The CFO adds another reminder to the E-Group. [A week before pencils down]\n2025-06-11 - The E-Group has completed all materials by 12pm Pacific time for review by the CLO and CFO. [A week before BoD Meeting materials distribution]\n2025-06-18 - Once approved by the CLO, CFO and CEO, the CFO authorizes the Corporate Paralegal to upload the materials into NBV and attach them to the corresponding NBV Meeting. The CFO then notifies the Board via email that materials are ready for review in NBV 7 days before the meeting. The Staff EBA to the CFO is responsible for sharing settings on all materials linked in the Google doc BOD Agenda. Materials should be shared with the E-Group, the board members, and the outside legal firm. Any exceptions must be confirmed by the CLO and relayed to the Corporate Paralegal before shipping.\n2025-06-18 - The Staff EBA to the CFO is responsible for linking all materials in the Google document agendas for each session of the board meeting. Materials should always be linked in the agenda and shared with the appropriate attendees.\n2025-06-18 - The Staff EBA to the CFO ensures that the Introduction and Materials section of the agenda is up to date with the latest attendees.\n2025-06-27 - Board of Directors Meeting; CFO ensures the meeting runs according to the time allotted.\n2025-06-30 - The CLO ensures that PDF versions of the materials including presentations, exhibits, approved Minutes, and Administrative materials are securely stored in NBV and on Google Drive labeled with the date of the meeting.\n2025-06-30 - The Staff EBA to the CFO updates this section of the Handbook page with the timeline for the next Board meeting in April 2025.\n2025-07-01 - The E-Group debriefs in the first E-Group Meeting after the Board Meeting.\nBoard Materials\nGitLab uses Nasdaq’s Boardvantage (NBV) portal for the electronic dissemination and storage of materials relating to GitLab’s Board Meetings.\nFor a more detailed overview of navigating the NBV portal, please click here to view the\nInternal Reference Guide\n.\nAgenda Details\nKey Board material is presented during Board Meeting sessions. This includes:\nE-Group and CEO memos\nEach E-Group member has a memo with up to four pages with four additional exhibits.\nEach discussion topic has a memo with unlimited exhibits.\nFinance has unlimited exhibits in the memo.\nAnnual Operating Plan can be a memo or slide deck.\nThe Administration Session for Board Committee readouts by the Committee Chairperson updating the Board as to the Committee’s activities and highlighting the items requiring Board approval, if any.\nQuestions can be asked throughout the meeting. 30 minutes are reserved at the end of the General Session for Q&A / Discussion.\nAt the conclusion of the General Session the E-Group, Observers, CoS to the CEO, Staff EBA, CEO Shadows depart the zoom meeting and the full Board shall meet for a Closed Session.\nBoard Dinner\nWe usually have a Board Dinner on the evening before a Board Meeting. The EBA to the CEO is responsible for coordinating this dinner. Board Members, Local E-Group members, and the CoS to the CEO are all optional attendees. Bios for attendees of the Board Dinner should be sent by the EBA to the CEO 3 business days in advance of the Board Dinner.\nEach quarter, E-Group can choose to invite an additional team member as a Key Talent Guest. If this is desired in a specific quarter, at least a month before the dinner, the CoS to the CEO will gather nominations and ensure that E-Group has identified an invitee. Criteria for consideration includes:\nKey Talent\nHigh performance\nClear results\nFunction (should have representation across functions throughout the year)\nDiversity (participation from members in\nGitLab Team Member Resource Groups\n)\nOnce the Key Talent Guest has been identified, it is the relevant E-Group team member’s responsibility to ensure that managers of this person are aware of the invite. The EBA to the CEO will then confirm that the guest is able to join. If not, the invite will go to the runner up. Once a Key Talent Guest is confirmed, the EBA to the CEO should enter their name in the\nKey Talent Board Dinner Guests\n.\nGitLab will cover this person’s travel expenses. A person’s location will not be considered in the selection criteria though the person’s travel must be allowed under GitLab’s\ntravel policies and guidelines\n.\nAs part of joining the dinner, the Key Talent Guest should come prepared to discuss:\nTheir background (both at GitLab and before joining)\nWhat they have accomplished thus far at GitLab\nWhat their plans are both now and in the future and what they see as a future for themselves at GitLab\nThough no formal presentation is required, the Key Talent Guest should advise on how they want to discuss these topics with the Board and E-Group and coordinate with the EBA to the CEO. The EBA to the CEO will ensure that the Key Talent Guest has dedicated time at the dinner.\nKey Talent Board Dinner Guests\nPast and future Key Talent Dinner Guests are listed below.\nDate\nKey Talent Guest\n2021-09-29\nDavid DeSanto\n2021-12-13\nSherrod Patching\n2022-03-21\nChristine Lee\n2022-12-12\nSherida McMullan\nQuarterly AMA with the Board\nBoard Selection Process\nRoles and Responsibilities\nNominating and Corporate Governance Committee\n- Collaborate on Board evolution. Provide recommendations for potential new GitLab BoD members; meet and vet potential new board members; provide feedback on candidates.\nCEO and Selected Members of E-Group also meet and vet potential new Board members; provide feedback on candidates.\n- Nominating and Corporate Governance Committee DRI.\nCEO’s Staff Executive Business Administrator\n- DRI for Board and Committee scheduling.\nExecutive Recruiter\n- Responsible for drafting communication to potential Board members as well as drafting email communication with Nominating and Corporate Governance Committee when questions arise.\nBoard Onboarding Process\nGitLab New Director Checklist\nBoard member onboarding from an internal processes checklist perspective:\nTo be completed\nprior to\nonboarding:\nResume for our files (can be a printout of LinkedIn)\nOutside counsel to run background check\nD&O questionnaire\nExecuted offer letter\nIndemnification agreement\nIf applicable, UWC to increase Board size\nInform External Communications and Investor Relations\nExternal Comms DRI\nPress release\nInform E-Group\nInform Team Members via Slack announcement\nGitLab New Director Onboarding Checklist\nBoard member onboarding from a GitLab orientation perspective:\nNew Director will be provided with:\nLinks to relevant Handbook pages, including:\nCommittee Membership\nCommittee Charters\nCode of Conduct\nRelated Party Transactions Policy\nBylaws\nCertificate of Incorporation\nAccess to the Legal Board Drive\nOrg chart\nSummary of Director and Officer Liability Insurance\nExecuted Indemnification Agreement\nStaff EBA to the CEO Responsibilities\nUpdate Board distribution list with Board Member and support staff\nSend calendar invites to Board member and support staff for:\nBoard meetings as well as a Board calendar covering meetings for next fiscal year\nBoard dinners\nBoard Committee Meetings (as needed)\nCommit\nContribute\nSales Kickoff\nPresident’s Club\nUpdate Board Member contact information list and circulate to Board and support staff\nSchedule AMA with New Board member\nSchedule\nFunctional Reviews\nwithin the first month:\nCorporate Strategy (CEO) - 50 mins\nMaterials for meeting: Most recent Board of Directors meeting presentation, Key Review slides, current quarter OKRs. Please do not generate new content. The Staff EBA to the CEO sends material to the new Director at least 72 hours in advance. The meeting is centered around the new Director’s questions\nGitLab Strategy\n3 year strategy\nCompany KPI’s\nMitigating Concerns\nFinance (CFO) - 80 minutes suggested\nFinancing profile, liquidity, creditworthiness, credit ratings\nCurrent issues, Board oversight issues\nRisk assessment\nDisclosure controls, internal controls\nInformation systems\nInternal audits\nRole of independent auditor\nCurrent topics, Board oversight\nDiscuss separate meeting with Auditors\nAudit Committee Overview\nLegal, Compliance, Regulatory, Governance (CLO)  - 50 minutes suggested\nLegal matters, if any\nCompliance and regulatory, generally\nCurrent topics, Board oversight\nNominating Corporate Governance Overview\nPeople Group (CPO) - 50 minutes suggested\nCompensation philosophy\nBenefits structure\nEquity plans\nExecutive compensation structure and policy\nDIB overview\nCompensation Committee Overview\nSales (CRO) - 80 minutes suggested\nThe Staff EBA to the CRO sends material to the new Director at least 72 hours in advance.\nMaterials and key topics include: Sales Key Review slides, Sales KPI dashboard, most recent CRO Board Appendix slides and Sales section of the BOD deck, market definition, current organization design, current sales motion, customer motion, sales philosophy and current CRO priorities.\nMarketing (CMO) - 50 minutes suggested\nProduct Overview (EVP, Product, EVP, Engineering, CEO) - 80 minutes suggested\nProduct review\nRoadmap\nSecurity\nInvestor Relations (Sr. Director of IR) - Optional 50 minutes suggested\nIR strategy, shareholder base, external perceptions\nOverview of large investors\nIf available/applicable:\nShare analyst reports from any new banks\nShare copies of recent investor presentations\nLast modified July 17, 2025:\nRemoves outdated strategy page (\n387298cd\n)\nView page source\n-\nplease\ncontribute\n.", "num_words": 3100}
{"doc_id": "ede8b9c05d097887", "url": "https://handbook.gitlab.com/handbook/engineering/infrastructure-platforms/developer-experience", "title": "Developer Experience | The GitLab Handbook", "text": "The Handbook\nEngineering\nInfrastructure Platforms\nDeveloper Experience\nThe Developer Experience section is focused on improving the developer experience to enable all teams to ship high-quality changes\nMission\nOur mission is to empower developers to focus on innovation, build, and deliver high-quality products to our customers. We aim to achieve this through:\nState-of-the-art developer tooling.\nRobust and reliable test infrastructure.\nData-driven analysis for informed decision-making.\nStreamlined release and test governance to ensure consistency, compliance, and quality across the development lifecycle.\nContinuous performance profiling.\nTeam Structure\nInfrastructure Platforms Department structure\nDeveloper Experience group structure\ngraph TD\nDE[Developer Experience group]\nclick DE \"/handbook/engineering/infrastructure-platforms/developer-experience\"\nDE --> DA[Development Analytics]\nclick DA \"/handbook/engineering/infrastructure-platforms/developer-experience/development-analytics\"\nDE --> DT[Developer Tooling]\nclick DT \"/handbook/engineering/infrastructure-platforms/developer-experience/developer-tooling\"\nDE --> FR[Feature Readiness]\nclick FR \"/handbook/engineering/infrastructure-platforms/developer-experience/feature-readiness\"\nDE --> PE[Performance Enablement]\nclick PE \"/handbook/engineering/infrastructure-platforms/developer-experience/performance-enablement\"\nDE --> TG[Test Governance]\nclick TG \"/handbook/engineering/infrastructure-platforms/developer-experience/test-governance\"\nTeam Members\nManagement team\nName\nRole\nIndividual contributors\nThe following people are members of the\nDevelopment Analytics group\n:\nName\nRole\nAbhinaba Ghosh\nEngineering Manager, Test Platform\n, Development Analytics\nFullstack Engineer\nJay Montal\nSenior Fullstack Engineer\n, Growth::Acquisition\nPaul Gascou-Vaillancourt\nSenior Frontend Engineer\n, Foundations:Personal Productivity\nThomas Hutterer\nSenior Fullstack Engineer\n, Foundations:Personal Productivity\nThe following people are members of the\nDeveloper Tooling group\n:\nName\nRole\nMohga Gamea\nManager, Quality Engineering\nBackend Engineer\nManuel Schönlaub\nBackend Engineer\nKev Kloss\nFrontend Engineer\nMatias Alvarez\nBackend Engineer\nNao Hashizume\nBackend Engineer\nPeter Leitzen\nStaff Backend Engineer, Engineering Productivity\nThe following people are members of the\nFeature Readiness group\n:\nName\nRole\nThe following people are members of the\nPerformance Enablement group\n:\nName\nRole\nThe following people are members of the\nTest Governance group\n:\nName\nRole\nAmy Phillips\nSenior Engineering Manager, Dedicated\nAlberto Bignotti\nBackend Engineer\nAndy Hohenner\nSenior Software Engineer in Test\n, SaaS Platforms:US Public Sector Services\nBrittany Wilkerson\nSenior Software Engineer in Test\n, Dedicated:Environment Automation\nChance Feick\nStaff Backend Engineer\nChloe Liu\nStaff Software Engineer in Test, Development Analytics\nDésirée Chevalier\nSenior Software Engineer in Test\n, Test Governance\nHarsha Muralidhar\nSenior Software Engineer in Test, Govern\nJay McCure\nSenior Software Engineer in Test\n, Dev:Create\nJohn McDonnell\nSenior Software Engineer in Test\n, Systems:Gitaly\nJoy Roodnick\nSoftware Engineer in Test\n\", Test Governance\nMax Woolf\nStaff Backend Engineer\n, Analytics:Platform Insights\nMohga Gamea\nManager, Quality Engineering\nNivetha Prabakaran\nSoftware Engineer in Test\n, Dev:Manage\nPaul John Phillips\nBackend Engineering Manager, Cloud Connector\nRichard Chong\nSenior Software Engineer in Test\n, Developer Experience:Feature Readiness\nSanad Liaquat\nStaff Software Engineer in Test\n, Test and Tools Infrastructure\nSofia Vistas\nSenior Software Engineer in Test\n, Test and Tools Infrastructure\nTiffany Rea\nSenior Software Engineer in Test\n, CI:Verify\nTim Beauchamp\nSoftware Engineer in Test\nVishal Patel\nSoftware Engineer in Test, Core Platform:Systems\nWill Meek\nSenior Software Engineer in Test\n, Test Governance\nProject Management\nWe use epics, issues, and issue/epic boards to organize our work, as they complement each other.\nThe structure of epics, and the responsibilities of the DRI are documented on the\nThe Infrastructure Platforms Project Management handbook page\nWeights\nWhen estimating work, we use Fibonacci Series for weights and limit the highest number to 8. The definitions are as below:\nWeight\nDescription\n1 - Trivial\nSimple and quick changes such as typo fixes, test tag updates, or trivial documentation additions\n2 - Small\nStraight forward changes with no underlying dependencies needed, such as new tests that use existing factories or page objects\n3 - Medium\nWell understood changes with a few dependencies. Few surprises can be expected, such as new tests that require new factories or page objects/components\n5 - Large\nA task that will require some investigation and research, in addition to the above weights, such as tests that need framework level changes which can impact other parts of the test suite\n8 - X-large\nA very large task that will require much investigation and research. Pushing initiative level\n13 or more\nPlease break the work down further, we do not use weights higher than 8.\nBug Prioritization\nThis page describes the bug prioritization process performed by the quality engineering sub-department as part of the cross-functional prioritization process.\nDeveloper Experience Dashboards\nThis handbook page serves as a central repository for all our Developer Experience dashboard details\nDeveloper Experience Design Documents\nA design document describes a technical vision and a set of principles that will guide various …\nDeveloper Experience Onboarding\nGuidelines for onboarding as a new Developer Experience Stage member\nDeveloper Experience Project Management\nGuidelines for project management for the Developer Experience Stage at GitLab\nDeveloper Tooling team\nThe Developer Tooling team enables all GitLab contributors to efficiently deliver results for customers by providing stable and performant software development tools, such as the GitLab Development Kit.\nDevelopment Analytics Group\nDevelopment Analytics Group under Developer Experience Stage\nFeature Readiness\nFeature Readiness group within Developer Experience sub-department\nPerformance Enablement\nPerformance Enablement group within Developer Experience sub-department\nQuality Engineering Learning Resources\nThe Quality Engineering Sub-Department has compiled a list of learning resources for SET and QEM growth.\nTest Governance Group\nTest Governance Group under Developer Experience Stage\nTest Platform Roadmap\nRoadmap for the Test Platform Sub-Department at GitLab\nLast modified May 21, 2025:\nUpdating the DevEx handbook page (\nda703ee4\n)\nView page source\n-\nplease\ncontribute\n.", "num_words": 868}
{"doc_id": "c6d47609edce70b6", "url": "https://handbook.gitlab.com/handbook/legal/publiccompanyresources", "title": "Corporate & Compliance Legal | The GitLab Handbook", "text": "The Handbook\nLegal & Corporate Affairs (\"LACA\")\nCorporate & Compliance Legal\nThis page offers a single source related to corporate legal information.\nPlease note that all links are GitLab-internal only.\nTrading Window Status\nGitLab Team Members can view the current trading window status via the\nTrading Window Status Issue\n.\nWorking with Corporate Legal\nFor questions related to corporate matters, please review the content and materials within\nAnswerBase\n. The team will continue to update the Corporate Library.\nIf the question a team member has is not answered within\nAnswerBase\n, please open an Issue pursuant to the\nRFP Process\nInsider Trading Policy and Insider Trading Policy FAQ\nInsider Trading Policy\nInsider Trading Policy FAQ\nDesignated Insiders\nDesignated Insider Pre-Clearance Process & FAQ\nLegal Office Hours: Designated Insider Agenda & Notes\nDesignated Insider Slack Communication\nNote:\nThis was the inital communication posted to\n#designated-insiders\nDesignated Insider: Pre-Clearance Form Demo\nPolicies & Guidelines\nCompany Information\n- general information about each legal entity of the company\nCorporate Governance Guidlines\n- guidelines to assist the Board of Directors in the exercise of its governance responsibilities and serve as framework within which the Board of Directors may conduct its business\nCorporate Resources\nTemplate: Year & Quarter End and Annual Meeting Calendar\nNote: This resource is shared with specific Team Members who participate in Quarter & Annual Filings\nQuarterly Open Window and Designated Insider Process Guide\nNote: This resource is shared with Corporate, Legal Operations, Finance and Stock Adminstration Team Members who participate in Quarterly Open Window processes\nLast modified April 3, 2025:\nUpdate link to Insider Trading Policy (\n538b8a94\n)\nView page source\n-\nplease\ncontribute\n.", "num_words": 274}
{"doc_id": "090c5f609f36b65e", "url": "https://handbook.gitlab.com/handbook/marketing/growth", "title": "Growth Direction | The GitLab Handbook", "text": "The Handbook\nMarketing\nGrowth Direction\nGrowth Section Overview\nThe GitLab Growth section is dedicated to making it easier for teams to find value and increased efficiency within the GitLab platform. We work across stages within the product experience to make the product as easy as possible to adopt and use.\nThe Growth section lives within Marketing & Strategy to ensure we’re aligned in our go-to-market strategy and we’re as efficient as possible in finding the right prospects, convincing them to become product users, and assisting in converting them into paying customers. Since the work within the section occurs within the product experience our engineering and user experience counterparts are within the\nDevelopment division\n. This approach ensures that we have proper alignment on our priorities from a go-to-market and business perspective while ensuring our\ndevelopment team\nis set up for success to operate within the development division.\nGrowth Section’s Principles\nThe Growth team works cross functionally within the organization to increase user and business value. We ground ourselves in four core principles.\nPartner with stakeholders in Marketing, Sales, and Product to establish metrics informed by quantitative and qualitative data that meet the business needs while supporting our users\nEmpower teams to find value efficiency in the GitLab platform\nEnable teams to quickly and intuitively adopt multiple stages with multiple users\nEmpower teams to find enterprise value within features that live in our Ultimate offering\nCore metrics, findings & experimentation results\nMetrics\nAcquisition - Valuable signup\nInternal team members can view this metric\nhere\nActivation - Team activation\nInternal team memmbers can view this metric\nhere\nFindings and experimentation results\nOur core findings and experiment results are considered non-public information. Internal team members can reference the internal handbook growth page for a detailed review of our findings.\nVision\nOur vision is to make it seamless for teams to find, adopt, and discover value along with increased efficiency in the GitLab platform.\nThis includes\nAligning internally with signups we want to prioritize as a business\nEnsuring the signup experience is balanced by collecting the information required for the business while collecting the needed user information (JTBD) to provide a tailored product experience\nAssisting users in finding product value (ah-ha moments) as quickly as possible including increasing access to enterprise value\nAssisting users in their product adoption experience that aligned with their defined JTBD\nProviding users with the purchase experiences that align with their business\nFor SMBs this means uncovering the value in the paid tiers through in-product experiences including trials married with related marketing and sales content related to their usage\nFor larger businesses, this encompasses empowering namespaces owners to understand what features their teams are using and which paid features they are requesting access to. While also providing them with the ability to connect directly with their dedicated point of contact within sales. This could include in-app messaging, and the ability to book time on their point of contact calendar directly within the app.\nGroups\nThe growth division is currently grouped under the Acquisition team that contains a shared growth backlog while we actively hire additional team members to build out a activation team.\nAcquisition\nTeam description, dedicated handbook page and specific vision is a work in progress.\nActivation\nTeam description, dedicated handbook page and specific vision is a work in progress.\nProduct ownership\nThe Growth section owns the following areas of the product experience.\nThe\nfree user\nand\ntrial registration\nexperience\nThe new user\nonboarding experience\nGitLab Experiment Gem (also refered to as GLEX)\nInstance review\nProduct Qualified Leads\nWhile we own these areas our work is not limited to these specific areas as the teams work cross-functionaly with other product and business teams to improve the user experience the most efficient way possible.\nEngineering\nGrowth engineering\nhandbook pages.\nGrowth Coffee & Learn Sessions\nGrowth requires constant learning, and many compaines face similar challenges or go through similar journeys. At GitLab, we believe hearing from growth experts and practitioners with diverse background is the best way to learn, and we want to share that with the community as much as possible. Therefore, we started a growth Coffee & Learn series since 2020. Below is a list of exerperts we invited to share their wisdom with us. We appreciate their time and insights, note that some videos/notes are viewable by internal team only.\nExpert\nBackground\nTopic\nVideo\nNotes\nChris More\nVP Growth @ Fusebit & Former Head of Growt@ Mozilla\nAMA on Open source & growth\nAMA Notes\nHolly Chen\nGrowth advisor, former head of global marketing @ Slack\nGrowth Loop & Journey of Slack\nVideo\nSummary\nLinsha Chen\nHead of Growth Data Science, Airbnb\nHow Airbnb does experimentation\nVideo\nAMA Notes\nJike Chong\nAuthor, How to Lead in Data Science, former data science executive @ LinkedIn, Acorns\nHow to Lead in Data Science\nVideo\nAMA Notes\nAnuj Adhiya\nAuthor, Growthhacking for Dummies, VP Growth\nHigh Performing Growth Teams\nVideo\nAMA Notes\nRobert Neal\nDirector of experimentation @ LaunchDarkly\nExperimentation system AMA\nVideo\nAMA Notes\nCarl Gold\nFormer Chief Data Scientist, Zuora\nFighting Churn with data\nVideo\nAMA Notes\nGrowth Definitions\nSign-up Experience:\nRegistering to be a user of GitLab. It generally starts on\nabout.gitlab.com\nand ends when the user is registered and can log in to the application. We have free, trial and direct to paid sign-up options.\nRegistration Flow:\nThe “happy path” flow a new user goes through when registering for GitLab and landing in the app for the first time. This is a more confined user flow, as we narrow down options so they can experience GitLab without being overwhelmed by all the other features. It starts at\nabout.gitlab.com\nand ideally ends with them using Create features.\nTrial Experience:\nThe experience of selecting and starting a trial, as well as testing/trialing features in GitLab.com or a self-managed instance during the trial. This could be done by net new users of GitLab, or existing users of GitLab who are interesting in exploring paid features.\nUser Onboarding:\nA general term that refers to experiences we create to support users during their first 90 days, or any time they engage with a new stage.\nContinuous onboarding:\nSpecifically our onboarding experience that allows users to choose when and if they want to continue onboarding tasks. It starts with simple tasks and builds to more complex ones.\nOnboarding Emails:\nRefers to emails that are sent to Saas and self-managed users intended to drive stage adoption via the email service the instance sets up.\nSaaS Purchase Flow\n- We consider the SaaS purchase flow (or “funnel”) to begin with the first screen of the checkout experience (the first page that displays the total cost of their GitLab subscription) and continues through the payment sequence with the last step of the flow being the successful first-time purchase of a GitLab paid tier. A potential customer can enter this experience directly within the SaaS app from the /billings page or on\nabout.gitlab.com/pricing\n.\nGrowth Shared Calendar\nWe use Growth PTO shared calendar to ensure all time off events are visible to everyone on the Growth team. To enable syncing your PTO from Time Off by Deel with this calendar follow these instructions:\nIn Slack open app\nTime Off by Deel\nEnsure you are on\nHome\ntab and select\nCalendar Sync\nfrom the dropdown menu\nUnder the section\nAdditional calendars to include?\nclick\nAdd calendar\nCopy & paste this calendar ID:\nc_5e5a9e4df8718fb25c518f165ca78fbccd42a7b6e1437a3caa6650e8e8dffbea@group.calendar.google.com\nCongratulations! 🎉 From now on all your PTO events will be automatically synced to our shared calendar!\nHelpful Links\nEngineering Growth Section\nGrowth Product Handbook\nLast modified September 23, 2024:\nFix broken links (\nd748cf8c\n)\nView page source\n-\nplease\ncontribute\n.", "num_words": 1278}
{"doc_id": "b0f1b1fa47494389", "url": "https://handbook.gitlab.com/handbook/enterprise-data", "title": "Enterprise Data Team | The GitLab Handbook", "text": "The Handbook\nEnterprise Data Team\nThe GitLab Enterprise Data Team is responsible for empowering every GitLab team member to contribute to the data program and generate business value from our data assets.\nWelcome to the Enterprise Data Team Handbook\nOur Vision is to\nContribute to GitLab’s journey of becoming the leading AllOps platform by responsibly harnessing the power of data.\nIn pursuit of our vision, we will focus on 4 outcomes:\nDrive\ncompany results by building trusted, reliable, and innovative data products and insights when and where needed.\nMinimize\ntime from question to insight to action, enabling team members to move faster by implementing efficient processes and enabling self-service analytics.\nDevelop\nand secure our data into a uniform, trusted asset through data protection & privacy, iterating on processes, people, and platforms.\nEnable\nevery team member to contribute to initiatives responsibly and with trust, building a powerful data-driven culture.\nRead our\nDirection\npage to learn what we are doing to improve data at GitLab.\nOur\nPrinciples\ninform how we accomplish our mission.\nWould you like to contribute?\nRecommend an improvement\n,\nvisit Slack #data\n,\nwatch a Data Team video\n. We want to hear from you!\nHow Data Works at GitLab\nThe collective set of people, projects, and initiatives focused on advancing the state of data at GitLab is called the\nGitLab Data Program\n. GitLab has two primary distinct groups within the Data Program who use data to drive insights and business decisions. These groups are complementary to one another and are focused on specific areas to drive a deeper understanding of trends in the business. The two teams are the (central) Enterprise Data Team and, separately, Function Analytics Teams located in Sales, Marketing, Product, Engineering or Finance. Watch the\nData Recruiting Video\nto hear from some of the teams involved and what they are working on.\nThe\nData Team\nreports into Marketing office and is the Center of Excellence for enterprise insights & analytics (not operational), data science, data platform & infrastructure, BI technologies, master data, data governance and data quality. The Data Team is also responsible for the enterprise data strategy, building\nenterprise-wide data models\n, providing Self-Service Data capabilities, maintaining the\ndata platform\n, developing\nData Pumps\n, and monitoring and measuring\nData Quality\n. The Data Team is responsible for data that is defined and accessed on a regular basis by GitLab team members from the\nSnowflake Enterprise Data Warehouse\n. The Data Team builds data infrastructure to power approximately 80% of the data that is accessed on a regular basis. The Data Team also provides a Data Science center of excellence to launch new advanced analytics initiatives and provide guidance to other GitLab team members.\nFunction Analytics Teams\nreside and report into their respective divisions and departments. These teams perform specific analysis for business activities and workflows that take place within the function. These teams perform ad-hoc analysis and develop dashboards based on the urgency and importance of the analysis required, following the\nData Development\napproach. The most important and repeatable analysis will be powered by the centralized\nTrusted Data Model\nmanaged by the central Data Team. Function Analytics Teams also build function-specific/ad-hoc data models and business insights models to solve for urgent and operational needs, not requiring trusted data features. Function Analytics Teams work closely with the Data Team in a variety of ways: expand GitLab’s overall analytics capabilities, extend the\nData Catalog\n, provide requirements for new Trusted Data models and dashboards, validate metrics, and help drive prioritization of work asked of the Data Team. When data gaps are found in our business processes and source systems, the team members will provide requirements to product management, sales ops, marketing ops, and others to ensure the source systems capture correct data.\nData Program Teams\nThe GitLab Data Program includes teams focused in the following areas:\nCustomer Success Operational Data Team\nEnterprise Data Team\nFinance Analytics & Insights\nMarketing Strategy and Performance\nMarketing Web Analytics\nPeople Analytics Team\nProduct Data Insights\nAnalytics Instrumentation Group\nSales Analytics\nHow Data Teams Work Together\nOn a normal operational basis, the Data Team and Function Analyst teams work in a “Hub & Spoke” model, with the Data Team serving as the “Hub” and Center of Excellence for analytics, analytics technology, operations, and infrastructure, while the “Spokes” represent each Division or Departments Function analysts. Function analysts develop deep subject matter expertise in their specific area and leverage the Data Team when needed.  From time to time, the Data Team provides limited development support for GitLab Departments that do not yet have dedicated Function Analysts or those teams which do have dedicated Function Analysts, but might need additional support. The teams collaborate through\nSlack Data Channels\n, the\nGitLab Data Project\n, and ad-hoc meetings.\nclassDiagram\nSales : +Sales Analyst\nMarketing : +Marketing Analyst\nProduct : +Product Analyst\nEngineering : +Operations Analyst\nEngineering : +Infrastructure Analyst\nFinance : +Financial Analyst\nPeople : +People Analyst\nData : +Data Analyst\nData : +Analytics Engineer\nData : +Data Engineer\nData : +Data Scientist\nData : +Data Quality and Governance Analyst\nThe Data Platform & Architecture Team\nThe\nData Platform Team & Architecture Team\nis part of the Enterprise Data Team and focuses on building and maintaing secure, efficent, and reliable data systems\ndata infrastructure\n. The Data Platform & Architecture Team is both a development team and an operations/site reliability team. The team supports all Data Pods with\navailable, reliable, and scalable\ndata compute, processing, and storage. Platform components include the Data Warehouse, New Data Sources, Data Pumps, Data Security, and related new data technology. The Data Platform team also drives the\nData Management processes\n. The Data Platform Team is composed of\nData Engineers\n.\nAnalytics Engineering Team\nThe\nAnalytics Engineering Team\ntransforms raw data into clean, structure and usable formats for data decision-making. The Analytics Engineering team also drives Enterprise Data Program and supports the wider data community. The team focuses on inventorying, integrating, maintaining, and governing the data at an Enterprise level. This includes collaborating with the business units and data teams in establishing and facilitating commonly accepted guidelines around Enterprise data along with building\nenterprise-wide data models\n, supporting Self-Service BI and Analytical capabilities by providing Data Enablement and required training to the Users on Enterprise Data Models.\nThe Enterprise Insights & Data Science Team\nThe\nEnterprise Insights & Data Science Team\nutilize analytics and Machine Learning (ML) for insights into customer behavior and company performance. The Enterprise Insights & Data Science team focuses on delivering a complete view of the customer (Customer 360), predict customers that are likely to buy, expand or churn, develop models to predict the long-term value of customers, create detailed customer profiles, and deliver insights on company performance.  The Team acts as a Center of Excellence for predictive analytics and supports other teams in their data science endeavours by developing tooling, processes, and best practices for data science and machine learning. List of the current projects can be found in the\nData Science handbook page\n.\nData Governance and Data Quality Team\nThe\nData Governance and Data Quality Team\nfocuses on building a data governance and data quality program that ensures our organization leverages data as a strategic asset with the highest standards of\nintegrity, reliability, and secure accessibility\nwhich are enabled through robust policies, advanced technologies and a culture of collaboration. The team partners with cross functional teams including Enterprise Apps, Security and Legal to establish data policies, quality controls, metadata management and compliance with regulatory requirements.\nEnterprise Data Team Job Families\nThe job families are designed to support all of the routine activities expected of a Data Team.\nData Analyst\nData Scientist\nAnalytics Engineer\nData Engineer\nData Governance and Quality Analyst\nData Governance and Quality Program Manager\nManager, Data\nDirector, Data\nHow We Measure Impact\nOur impact will be measured against 4 dimensions (these metrics will adjust as our data maturity increases and our focus areas change):\nData Platform Stability\nInfrastructure Cost vs Plan: This performance indicator tracks the financial position of the actual cost vs the planned costs for the data infrastructure (warehouse, ETL pipelines, etc.).\nData Uptime: This performance indicator measures the % of time a data pipeline was providing data without reported incidents. This indicator is currently measured based on Monte-Carlo data, according to the configured (automatic) monitors on any given table in the\nraw\ndata layer.\nData Governance and Data Quality\n% improvement in data quality metrics\n% data assets enriched with metadata\n% reduction in time to discover data\nData Adoption\nData Monthly Active Users (DMAU): DMAU Measures the direct usage of the Data Platform by GitLab Team Members based on usage of the primary analysis tools we provide: Snowflake and Tableau. Over time we will include additional tools such as Jupyter and Data Studio, as well as usage of data pumped into EApps such as Marketo (PQLs), Gainsight (Usage Data), and Salesforce (Propensity Scores). A visualization of these numbers can be found in the\nData Monthly Active Users\nreport.\nData Monthly Active Users (DMAU) = Unique users of a Data system (i.e. Snowflake, Tableau) in a given month\nData Maturity Score: measured annually, evaluates our current data maturity against 8 data capabilities:\nStrategy & Approach\nCulture & leadership\nMetrics & KPIs\nOrganization & Skills\nArchitecture & Integration\nGovernance & Quality\nDeployment & Usage\nTechnology & Operations\nNumber of certified Tableau dashboards\n% total views from certified dashboards\nRevenue/Efficiency Impact\nFirst we have the evaluation criteria known as Dollar Value of our Results as calculated by the Data Value Calculator. We can use the\nData Team Value Calculator\nto calculate the dollar value of the initiatives we contribute to and the issues we complete.\nAdditionally we want to shift to a more aspirational measurement which is to measure the ARR impact or efficiency gain from each of our data products. Our data science models will be measured in the following ways:\nPropensity to Expand (PtE) and Purchase (PtP) - We will evaluate two metrics: 1) Incremental revenue impact 2) # of leads generated that are not currently in the sales funnel\nPropensity to Churn (PtC) - We will evaluate two metrics: 1) # of high propensity to churn customers that didn’t churn 2) Incremental revenue impact\nHow To Connect With Us\nPrimary #Data Slack Channel\nIssue tracker\nGitLab Unfiltered Data Team Playlist\nData Slack Channels\n#data\nis the primary channel for all of GitLab’s data and analysis conversations. This is where folks from other teams can link to their issues, ask for help, direction, and get general feedback from members of the Data Team.\n#data-team\nis where Data Team announcements are made.\n#data-daily\nis where the Data Engineers track day-to-day productivity, blockers, and fun. Powered by\nGeekbot\n, it’s our asynchronous version of a daily stand-up, and helps keep the Data Engineers aligned and informed.\n#data-lounge\nis for links to interesting articles, podcasts, blog posts, etc. A good space for casual data conversations that don’t necessarily relate to GitLab. Also used for intrateam discussion for the Data Team.\n#data-engineering\nis where the GitLab Data Platform team collaborates.\n#bt-data-science\nis where the GitLab Data Science team collaborates.\n#analytics-pipelines\nis where slack logs for dbt runs and monte carlo analysis are output and is for analytics engineers to maintain. The DRI for tracking and triaging issues from this channel is shown\nhere\n.\n#data-triage\nis an activity feed of opened and closed issues and MR in the data team project.\n#data-pipelines\nis where alerts from  the ELT pipelines / FiveTran/ Monte Carlo RAW layer anomalies  published and is for data engineers to maintain. The DRI for tracking and triaging issues from this channel is shown\nhere\n.\nYou can also tag subsets of the Data Team using:\n@datateam - this notifies the entire Data Team\n@data-engineers - this notifies just the Data Engineers\n@data-analysts - this notifies just the Data Analysts\n@analytics-engineers - this notifies just the Analytics Engineers\n@data-governance - this notifies just the data governance and quality team members\nExcept for rare cases, conversations with folks from other teams should take place in #data, and possibly the fusion team channels when appropriate.  Posts to other channels that go against this guidance should be responded to with a redirection to the #data channel, and a link to this handbook section to make it clear what the different channels are for.\nGitLab Groups and Projects\nThe Data Team primarily uses these groups and projects on GitLab:\nGitLab Data\nis the main group for the GitLab Data Team.\nGitLab Data Team\nis the primary project for the GitLab Data Team.\nThough many of our GitLab projects are\ninternal only\n, the rest are still\npublic by default\n.\nYou can tag the Data Team in GitLab using:\n@gitlab-data  - this notifies the entire Data Team\n@gitlab-data/engineers  - this notifies just the Data Engineers\n@gitlab-data/analysts - this notifies just the Data Analysts\n@gitlab-data/analytics-engineers - this notifies just the Analytics Engineers\nTeam, Operations, and Technical Guides\nSQL Style Guide\nHigh Level Diagram\nHow We Work\ndbt Guide\nSystem Data Flows\nTeam Organization\nPython Guide\nData Sources\nCalendar\nAirflow & Kubernetes\nSnowplow\nTriage\nDocker\nPermifrost\nMerge Requests\nData CI Jobs\nPlanning Drumbeat\nRstudio Guide\nTrusted Data\nData Science Team\nJupyter Guide\nData Management\nMeltano Guide\nData Onboarding\nLearning Library\nTableau Guide\nTableau Style Guide\nData Team Handbook Structure\nDashboards & Data You Can Use\nData Learning and Resources\nData Programs\nHow The Data Team Works\nCalendar\nData Analytics Team\nAnalytics Engineering Team\nData Platform Team\nData Science Team\nData Team Principles\nData Management\nPlanning Drumbeat\nTriage\nHow The Data Platform Works\nData CI Jobs\nData Infrastructure\nData Onboarding\nInternship Experience\nData for Product Managers\nData Quality\ndbt Guide\nEnterprise Data Warehouse\nJupyter Guide\nPermifrost\nPython Guide\nRStudio Guide\nSQL Style Guide\nSnowplow\nTableau\nTableau Style Guide\nTrusted Data Framework\nData Governance\nData Governance Processes and Workflows at GitLab\nData Team - How We Work\nGitLab Data Team Workflow\nData Team Organization\nGitLab Data Team Organization\nData Team Platform\nGitLab Data Team Platform\nLast modified July 9, 2025:\nGoogle tag manager handbook (\n7a73052e\n)\nView page source\n-\nplease\ncontribute\n.", "num_words": 2358}
{"doc_id": "1654e1850ce168b9", "url": "https://handbook.gitlab.com/handbook/people-group/learning-and-development", "title": "Learning & Development | The GitLab Handbook", "text": "The Handbook\nPeople Group\nLearning & Development\nOverview\nPurpose\nWhy we exist:\nGitLab Talent Development (commonly referred to as “Learning & Development”) exists to enhance team member performance, expand capabilities, and further develop skills that make GitLab team members the top talent in the industry. We strive to foster a culture of continous growth so that GitLab remains a great place to work. Positive impact on team member experience leads to a positive impact on results, which leads to a positive impact on GitLab customers.\nVision\nWhere are we going:\nGitLab seeks to be recognized as a top organization for remote learning & development. We aim for a future where\neveryone contributes\nto a culture of curiosity.\nMission\nWhat we do:\nWe empower individual contributors and equip leaders through self-service learning. We accomplish a culture of development by:\nFocusing on skill-based learning\nProviding resources to improve career mobility\nDeveloping learning journeys for teams throughout the organization\nObjectives\nPerformance indicators\nReduce voluntary attrition by 5% each year by measuring\nexit survey data\nrelated to career development\nSecure a 5% increase in the Growth & Development category of the\nannual engagement survey\nIncreased access to career mobility: internal transfers,\npromotions\n, job shadows, intern for learning, and professional development\nClear evidence of best in class remote learning & development (i.e.\nBrandon Hall Awards\n, Industry Speaking Events, Thought Leadership articles, etc.)\nPrinciples\nMeaningful and relevant content.\nWe deliver learning solutions that help you reach your professional goals.\nValues aligned.\nOur learning solutions reinforce GitLab’s\nvalues\nand foster continuous learning and curiosity.\nDiverse approaches to learning.\nWe apply a blended learning model to find solutions to various individual needs.\nCommunity.\nL&D offerings available to the public so that everyone can contribute.\nLearning & Development Team\nWe are a small team, but we’ve got a big role to play at GitLab!\nLearning and Development Director\n:\nTre Ely\nSenior Learning and Development Program Manager\n:\nJamie Allen\nSenior Learning and Development Program Manager\n: Lauren Cairns\nSenior Learning and Development Program Manager\n: MQ Gillespie\nTeam Member Resources\nThe Learning & Development team has a number of resources to help team members learn new skills. Click the button(s) below to learn more about each one:\nTransitioning to a Manager Role\nGrowth & Development Fund\nCareer Development & Mobility\nLearning Initiatives\nSelf Paced Learning\nLevel Up\nElevate Manager Training\nMentorship\nCoaching\nPartnerships at GitLab\nMultiple teams across the company contribute to learning and development of our team members. Below is a list of some teams we partner with and how we collaborate.\nEducation Services: Share customer & product training with team members on Level Up\nTalent Brand: Telling career growth stories\nPeople Operations: Measuring impact of learning and development on team member engagement\nSelect Department Subject Matter Experts: Legal, Compliance, and other specific courses\nSlack:\n#learninganddevelopment\nEmail Us:\nlearning@gitlab.com\nRequest support/Collaborate on new learning content\nWork With Us\nThe\nwork with us\npage outlines issue templates and processes that are managed on our\nLearning and Development issue board\n. We review and classify requests based on the scalability and possible organizational impact. Learning solutions that can be applied and used company-wide take priority. Our process includes:\nEvaluate the strategic impact of the learning session\nDetermine the level of work associated with the learning requirement\nAssess the impacted audience groups of the session\nIdentify measures of success\nAssess dates of delivery with the course schedule and forecast a future date\nHow we work\nTools\nThe L&D team frequently uses the following tools for creating and communicating learning opportunities at GitLab.\nTool\nPurpose\nPowtoon\nVideo Creation\nLucidChart\nInteractive Diagrams\nCanva\nImage and infographic creation\nArticulate/Rise 360\nCourse Authoring\nGenial.ly\nCreate Interactive Images\nDeveloping Learning Content\nLearning Content Accessibility Guidelines\nIn July 2024, GitLab published the first iteration of our\nLearning Content Accessibility Guidelines\n.\nWe ask that team members who create both internal and external learning content:\nFamiliarize themselves with these guidelines\nApply these guidelines when creating learning content for internal and external use, when applicable\nRevisit existing learning content you have created, to consider whether any updates are appropriate\nTop Five Training Content Development Principles\nKnow Your Audience\n- Analyze and assess the course audience. Ensure that all audience needs are accounted for at every level in the organization you are delivering the training too.\nDefine Learning Objectives\n- Highlight the learner outcome. Consider developing two to three broad overall statements of what the audience will achieve.\nBreak Down Complex Information\n- Consider breaking down complex information into easy to digest visuals or text. Reference the handbook but do not be afraid to create a visual representation or use storytelling for the audience.\nEngage the Learner\n- Adults learn through practice and involvement. Consider using tools to engage learners in a virtual setting like\nMentimeter\nor\nKahoot\nto stimulate interactivity.\nImplement Blended Learning Course Content\n- Give the learners pre-course work to read and review before the learning session. Use off-the-shelf resources and ensure the content is applicable to what will be covered in the session. Follow up to gauge how they’ve applied what they’ve learned on the job through surveys and questionnaires.\nApplication of Adult Learning Theory\nAdults learn differently in the workplace than in traditional learning environments or how they learned growing up. If you are developing training, consider applying principles related to Adult Learning Theories, those include:\nTransformative learning:\nLearning should change the individual through transformative learning approaches. Start with learning experiences that appeal to your specific audience, and then move to activities that challenge assumptions and points of view.\nSelf-directed learning:\nEmphasize informal learning experiences. Infuse applications of pre-reads and post-course follow up. Have the participants bring up examples of self-directed learning that they have taken that is related to the training course.\nExperiential learning:\nAdults learn through experiences and by doing. When designing a learning experience, apply activities to stimulate learning by doing through role-playing, simulations, virtual labs, case studies, etc.\nAndragogy:\nDesign learning experiences with the assumption that your participants will come to the table with their own set of life experiences and motivations. Adults tend to direct their own learning, learn better by doing, and want to quickly apply their learning to concrete situations.\nDeveloping Learning Objectives\nAdd learning objectives to the beginning of the content to state a clear training outcome. A clear learning objective describes what the learner will do upon completion of a learning/training activity. Good learning objectives are what you want team members to learn or achieve.\nSteps to creating learning objectives:\nIdentify the level of knowledge necessary to achieve the aim of the training. Use\nBloom’s Taxonomy\nto assist with writing practical learning objectives.\nSelect an\naction verb\n.\nCreate your very own objective\nCheck your objective. Make sure it includes these four pieces: audience, behavior, condition, and degree of mastery\nRepeat these steps for each objective\nSample learning objectives:\nBy the end of the session, team members will be able to describe the steps taken to address underperformance\nTeam members will be able to apply the GROW coaching model framework to coaching sessions with members of their team\nAfter learning about the high-performance team-building model, team members will be able to determine the steps needed to reach high performance.\nLearning Components - Definitions\nTerm\nDefinition\nDuration\nTraining\nThe action of teaching a team member a particular skill or behavior\nVaries\nBite-sized learning\nA short course to learn a skill. Bite-sized can be a compontent of training or a separate learning element (i.e. a video, a PDF cheat-sheet, an infographic)\nMax 15 minutes, 5 to 10 minute average\nSelf-paced course\nLearner has the control over the amount of material they want to consume and the duration of time needed to learn the new information.\nPre-defined by the designer (i.e. hours, days, etc.)\nCurriculum\nA series of learning paths that comprise a course of study on a skill-based topic\nVaries\nCertification\nA certification indicates that an individual community member has acquired the knowledge, skills, and abilities required to perform a specific skill or job. Certifications include an examination process.\nVaries\nLearning Path\nA chosen route taken by a learner through a range of learning activities to build knowledge progressively\nVaries\nLearning Delivery Methods - Definitions\nTerm\nDefinition\nDuration\nInstructor-Led Training (ILT)\nPractice of training and learning material between an instructor and learners. Face-to-face training (classroom training)\nVaries\nVirtual Instructor-Led Training (VILT)\nTraining that is delivered in a virtual environment (i.e. training in Zoom)\n1 to 3 hours\nE-Learning\nLearning based on traditional learning theories which takes place electronically, often via the Internet.\nVaries\nBlended Learning\nTraining that uses multiple methods to teach the new information to learners. It can include ILTs, self-paced materials, VILT sessions, etc.\nVaries\nWebinar\nA seminar conducted virtually to a large audience\n3+ hours\nWorkshop\nHands-on or virtual demos, problem solving, tutorials where team members engage in discussion and activity on a particular subject\nVaries\nPlease let us know how you would prefer to learn by\nfilling out this form\n!\nCareer Development and Mobility\nResources and direction for career development and mobility for all GitLab team members\nElevate Programs\nUse the links below to navigate to each Elevate program. Here is a useful guide to ensure …\nGitLab Basics\nGitLab Basics and Terminology This page is just a quick guide to some GitLab basics, for easy …\nGrowth and Development Fund\nA description of programs and resources for team members to access when using the G&D Fund.\nHone Partnership\nGitLab has partnered with Hone to provide expanded professional development opportunities through …\nInternship for Learning\nResources and direction for internship for learning for all GitLab team members\nLearning Initiatives\nThe Learning & Development team is rolling out learning programs to enable a culture of curiosity and continual learning.\nLevelUp\nLeveling Up LevelUp We’re currently rolling out a new platform for LevelUp to better support …\nMentoring at GitLab\nMentorship is an opportunity to learn from personal experience, background, and perspective. …\nSelf-Paced External Trainings\nDetails of third-party training providers utilised by various GitLab departments\nTeam Workshops\nVisit the Team Workshops Level Up page to get started!\nTeam Workshops are customized, group …\nTransitioning to a manager role\nYour first few months as a manager at GitLab can be exhilarating. They can also be challenging, …\nWork with the Learning and Development Team\nAvailable Learning and Development Support The Learning and Development team is available to support …\nLast modified July 11, 2025:\nRemoving JS from HB page (\ne3aab33c\n)\nView page source\n-\nplease\ncontribute\n.", "num_words": 1757}
{"doc_id": "b31be2cf4b48b8ac", "url": "https://handbook.gitlab.com/handbook/finance/expenses", "title": "Global Travel and Expense Policy | The GitLab Handbook", "text": "The Handbook\nFinance\nGlobal Travel and Expense Policy\nGitLab’s Global Travel & Expense Policy is meant to provide guidance to all Team Members to ensure that we act in the best interest of our Company at all times. The purpose of this policy is to:\nProvide guidance around allowable reimbursable expenses.\nEnsure the best utilization of our Team Member’s time.\nDrive transparency across all business travel related spend.\nHelp Team Members understand that a centralized travel program results in improved safety, visibility, support and savings.\nPrevent violations of applicable anti-bribery and corruption laws.\n2. Responsibilities\nTeam Members\n:\nAs a public company, GitLab has an obligation to act in the best interests of the corporation and its shareholders. This obligation is shared by all Team Members and is the basis of our global travel and expense policy as a public company; Team Members must be thoughtful in spending the company’s money.\nUse best judgment to ensure that all travel is business critical and all expenses are deemed “ordinary and necessary”. Team Members should consider conducting meetings via audio or video conferencing when appropriate.\nRead, understand and adhere to GitLab’s Global Travel & Expense policy.\nTeam Members are also expected to inform their direct manager of all business trip plans prior to booking to ensure that the proposed trip is within their departmental budget. Team Members must receive Manager approval for any proposed business critical trips.\nSubmit all expenses timely. All Team Members should submit expenses by the end of the fiscal quarter in which the expense was incurred. GitLab’s fiscal quarter end dates are January 31, April 30, July 31, October 31.\nFollow-up with your manager or the AP team if they haven’t approved your expense report.\nManagers and/or Budget Owners\n:\nEnsure that Team members’ expenses are in compliance with GitLab’s Global Travel & Expense policy.\nWe ask that managers set pre-trip awareness expectations within their teams to ensure that trips are business critical and budgeted for.\nPlease work with your respective Finance Partner to know your specific team’s budget and amount spent to date.\nManagers are expected to review their team’s expenses in their entirety every month, and must flag any concerns immediately to the Accounts Payable team. Potential violations of GitLab’s expense Policy as it relates to gifts and entertainment should also be flagged to the Legal department in a manner consistent with\nGitLab’s Whistleblower Policy\n.\nManagers will be required to sign off that they have reviewed their team’s expenses.\nManagers will be held accountable for any unreported abuse by their Team Members.\nAP will flag Managers if further information is required for their direct reports.\nPlease see the attached\nManager Policy\nfor more details.\nAccounting\n:\nMaintain and communicate the Global Travel & Expense Policy out to the Company on a regular cadence as updates occur.\nEnsure that expense reports are in compliance with the  Global Travel & Expense Policy.\nProvide clear and timely feedback to Team Members and managers regarding missing information, general questions, or “out of policy” issues, and escalate potential violations of the gifts and entertainment expense rules to the Legal department in a manner consistent with GitLab’s\nWhistleblower Policy\n.\nReview and process all expense reports that require AP Admin review, within 7 working days from the date submitted.\nFinance\n:\nMaintain departmental budgets for Travel and Entertainment and Offsites.\nWork with respective Business Partners to provide specific team budgets and amounts spent to date.\n3. General Guidelines\nTeam members should submit receipts for every business expense. For Non-US Team Members, receipts are required for all expenses. US Team Members are required to only submit receipts for any expenses over $50 USD.  Receipts must contain vendor name, date of purchase, listing of what was purchased, and contains a full breakout of the subtotal and tax amounts. Snapshot from phone/computer screen of Applications, Card/Bank Statements are not an acceptable form of receipt.\nTeam Members are not allowed to expense items on behalf of their managers.\nPayments, gifts, favors, or entertainment for officials, employees, or representatives of government-owned entities are strictly prohibited, regardless of value.\nExpense claims for a single item up to $5,000 can be expensed via Navan. >$5,000 needs to go through the procurement process in Zip.\nExpense claims over 90 days from purchase date will not be reimbursed unless approved by the Manager.\nNavan Description box: Expense items must have a description filled out. This box is showing as optional but we require this to be filled in. This helps to correctly record the transaction and assist any reporting purposes downstream.\nWhen filling in the description box , we ask for you to enter details of the expense so anyone looking at the line on a report can tell immediately (without the need of looking at the receipt) what the expense relates to and why it is claimed.\nPlease fill in the description box with details like : Items Purchased/Claimed, Period service relates to, Trip Details this claim relates to, Reason for trip, Clients Name, etc. If left blank, the expense will be bounced back to the team member to complete this portion.\nThe maximum monthly limit to be reimbursed is $10K USD (or local currency equivalent). Once this limit has been reached, all expense items will need to be approved by the A/P team in Navan.  This limit may be increased for Team Members whose positions require more spend (eg. Field Marketing), but the increase request needs to be submitted via an issue for approval by the VP or higher in the Accounting Organization. Due to the nature of their roles, E-Group members have a maximum monthly limit to be reimbursed of $20K USD before additional approvals are required.\nExpenditures related to client entertainment or marketing must be necessary, prudent, and job-related.\nExpenses that span longer than a month must be submitted on a monthly basis (eg. Although you paid for a year upfront for the internet, you must divide the total by 12 months and submit the cost monthly), with the exception of VPN.\nGift cards are not accepted as a form of payment for business expenses.\nExpense items must clearly state if the spend includes amounts for clients / non-Team Members. Tax requirements in certain countries require us to account for client spending differently.\nAnything submitted outside of these guidelines will be flagged as Out of Policy.\nAll work-related expenses (internet, co-working space, other monthly subscription, etc.) are not reimbursable while on Leave of any kind.\nFor PEO’s, as you are aware with Navan, the system will automatically reimburse in the currency of the GitLab organization you are employed. To ensure you are reimbursed in the currency in which your PEO needs to be invoiced please submit your expenses in the payment currency you will be invoicing the PEO in. i.e. if you invoice your PEO in USD, then convert the expense into USD prior to submitting the expense report in Navan. This will then allow you to know the exact amount to invoice the PEO every month. If this is not doable then we will convert the currency using the FX rates from Netsuite on the day this expense is transferred to payroll for payment to the PEO. To find out the actual amount submitted in Navan, we can provide you a list of the expenses submitted for each month.  Please request this monthly by submitting a\nHelpLab\nticket so we can provide you the needed information.\nAs with any third-party, it is best practice to limit the amount of personal data shared. The inclusion of personal data on your receipts is not required to submit an expense, so feel free to redact personal data for increased privacy. However, this is not a required step. For those that choose not to redact personal data from your expense receipts, the privacy and security controls in place at Navan were evaluated and they are designed to adequately protect your information.\n3.1 Out of Policy Transactions\nNote that when expenses are flagged as “Out of Policy” in Navan, this does not necessarily mean the expense is “Out of Policy”. It can also mean that additional review is needed due to a requirement for  certain attachments (eg. an approved issue) and/or additional approvals.\nUpon review, if more clarification is needed for a certain expense, the AP team will contact the Team Member in the Navan tool to ask for justification of the transaction before approving or rejecting the expense.\nThe AP team will reach out to the Team Member’s manager if additional approval is needed.\nIf the claim is over the advised guidance, the claim will be rejected with a note for the Team Member. The Team Member should be able to rectify the claim and resubmit.\nWhere the Team Member has already received approval from the manager, that approval should be attached as a receipt on the claim transaction.\nAny claim made which does not fall into the policy is not reimbursable.  If an item is out of policy and approved by your manager, then please obtain and attach your manager’s approval email prior to submitting the expense. This will then be reviewed by the Expense team Admin and could need further approval from VP or higher in the Accounting Organization.\nThere will be occasions where if you have claimed an item and it needs to be reimbursed back to GitLab, you will need to follow the repayment process in Navan for submission of the funds.\n3.2 Trip Purpose Guidance\nWhen booking travel in Navan, it’s important to select the proper trip purpose type from the “Trip Purpose” dropdown menu. Selecting the correct trip type is essential for accurate data reporting.\nThe options for trip purpose include:\nCompany meeting - any travel for internal meetings or events (that are not listed separately) with no customers present\nCustomer visit - any travel for meetings or events where GitLab customers and prospects are in attendance including conferences, roadshows, field events, and customer meetings\nPartner visit - any travel for meetings or events where GitLab partners are in attendance\nSpecific events - these will be visible in the trip purpose dropdown, ex:\nFY25 GTM Onsite\n3.3 Other\nOut of Policy Transactions for all E-Group Members needs to be approved by VP or higher in the Accounting Organization.\nAny exceptions to the policy must be documented via an issue or an email with proper approvals from their manager and Finance team.\nPayment method\nGitLab’s default payment method in Navan is a central company card.\nPayment varies based on travel transaction type - air, hotel, car or rail (where applicable).\nAirfare: All airfare is charged immediately at the time of booking to the card on file. GitLab’s central card is the default payment method in the system and will always be available.\nFollowing expenses are categorized for reimbursement purposes with specific policy definition attached to it. The limits below are in USD, please use local currency equivalents when considering other currencies.\n4.1 TRAVEL RELATED EXPENSES\nAirfare\nAll business related flights need to be booked through Navan, and will be paid by GitLab travel card. For each flight search, Navan determines the price in real time. Also to note that while it is sometimes possible to find a cheaper flight outside of Navan, we get overall better rates in the aggregate with the buying power of the whole company. Even if a flight is cheaper outside of Navan, please book in Navan. Also submit a request under the\nExpenses -> Travel Related Expenses\npage of\nHelpLab\nwith screenshots of Navan’s rate and the other airlines rate so the Expense team can address with Navan.\nAdvance Purchase\nTeam Members should make air reservations as early as possible, in order to take advantage of discounted fares. Travelers will ideally book:\nDomestic: At least 14 days in advance\nInternational: At least 21 days in advance\nThe airfare policy in Navan is set up as a “Dynamic Policy” which calculates a fair market price for every search based on travel dates and destinations. Any purchases that are over 20% of the Dynamic Policy will be flagged for further review by your manager. Also note that anything booked outside of Navan will flag as “Out of Policy”, and will need to be reviewed by your manager and the AP team.\nClass of Service\nOne class of upgrade is permitted with Manager approval for team members over 6'5\"/2m in height.\nDomestic Flights\nFlights over 5 hours of consecutive flight time\n- For domestic flights with a duration greater than 5 hours of consecutive flight time (each segment must be 5+ hours), team members are authorized to book the next class up from standard economy as long as it is below business class.\nInternational Flights\nFlights greater than 5 hours of consecutive flight time\n- For international flights with a duration greater than 5 hours of consecutive flight time (each segment must be 5+ hours), team members are authorized to book the next class up from standard economy as long as it is below business class.\nFlights exceeding 8 hours of consecutive flight time\n- For those who travel frequently, defined as 3 or more trips per quarter internationally on flights of 8 hrs+ continuous flight time (minimum 6 flight segments with 8+ hours per segment), business class is permitted when traveling for any of the following reasons:\nMeeting with customers\nSpeaking engagement\nRepresenting GitLab at a conference\nFrequent Flyer Programs\nParticipation in frequent flyer programs must not influence airfare selection if it results in an out-of-policy option.\nTeam Members may use personal frequent flyer miles or points for upgrades on business travel, however, Team Members will not be reimbursed for any respective charges.\nCancellations, Unused Tickets and Exchanges\nTeam Members are responsible for canceling trips that they will no longer be able to attend.\nFlight cancellations typically result in flight credit/unused tickets that can be used going forward.\nUnused tickets must be used for future business travel whenever possible. If the Team Member knows they won’t be able to use the ticket, please submit a request under the\nExpenses -> Travel Related Expenses\npage of\nHelpLab\n.\nTeam Members may not personally benefit from any unused airline tickets.\nPlease reach out to Navan Support if you need to change a flight.\nCommon Out-of-policy Airfare Flags in Navan\nThe system automatically flags the following as out-of-policy:\nFlight price selected is more expensive than the cheapest option + our buffer\nOut-of-policy air class is selected\nFlights booked less than 14 days in advance\nIf the flight selected triggers any of these criteria, an email will automatically be sent to your manager for approval. Please provide sufficient reasoning to make approval easier and faster.\nAfter 24 hours without any manual action (approved/denied) the booking will automatically be accepted.\nCoding\nExpense Type / Navan Policy Category:\nAirfare\nCar Rental\nRental Cars are reimbursable and should be booked through Navan, up to the intermediate car class, with a 7 day booking lead time. Rental Cars are reimbursable and should be booked through Navan, up to the intermediate car class, with a 7 day booking lead time.\nPlease note that anything booked outside of Navan will flag as “Out of Policy”, and will need to be reviewed by your manager and the AP team.\nNavan Confirmation should be attached to the claim along with the Car Rental Receipt.\nTeam Members can claim gas expenses but not mileage, when renting a car.\nFuel at $300 limit per day.\nAdditional Car Rental Guidelines\nA. Third Party Liability\nPurchase the liability insurance that is excess of the standard inclusion of State minimum coverage in the rental agreement at the rental agency. GitLab’s insurance policy provides liability insurance for rental cars while conducting company business, but it may be excess over any underlying liability coverage through the driver or credit card company used to purchase the rental.\nPurchase the liability offered at the rental counter if there are Non-US Team Members renting autos in the US or Canada. While workers’ compensation would protect an injured US Team Member, other passengers may have the right to sue. To ensure that GitLab has protection when a Non-US Team Member invites another person into the car we recommend the purchase of this insurance when offered at the rental counter.\nB. Physical Damage - Collision Damage Waiver\nDo Not purchase the Collision Damage Waiver offered at the rental counter. GitLab purchases coverage for damage to rented vehicles. If travel to Mexico is required, purchase the liability insurance for Mexico offered at the rental counter. You should verify that the rental agreement clearly states that the vehicle may be driven into Mexico and liability coverage will apply.\nCountries other than the US and Canada:\nThird Party Liability\nPurchase the liability insurance offered at the rental counter when traveling outside the US and Canada. Automobile Bodily Injury and Property Damage Liability insurance are required by law in almost every country. Please verify this coverage is included with the rental agreement.\nPhysical Damage - Collision Damage Waiver\nPurchase the Collision Damage Waiver or Physical Damage Coverage offered by the rental agency when traveling outside the US and Canada.\nIn the event of an accident resulting in damage to the rental car, the Non-US rental agency will charge the credit card used to make the reservation with an estimated amount of repair costs if insurance is not purchased. If this happens, GitLab does not purchase Foreign Corporate Hired Auto Physical Damage Coverage to reimburse for damages.\nCoding\nExpense Type / Navan Policy Category:\nRental cars\nHotels\nTo be booked in Navan. When booked outside Navan - approval required by Manager and AP Admin.\nWhen you book Hotels through Navan Travel, the costs will need to be charged to a personal credit card.\nFor business related bookings, you can submit the costs for reimbursement via the Navan Expense reimbursement tool.\nPlease attach the Navan Reservation email confirmation to the claim.\nHotel stays are reimbursable up to $300 USD (or equivalent local currency) inclusive of tax per night for standard rooms, with a 7 day booking lead time.\nHowever, the lodging policy in Navan is set up as a “Dynamic Policy” which calculates a fair market price for every search based on travel dates and destinations. This allows for some room in price in case the $300 USD limit is really not applicable to that area. And similar to airfare, any purchases that are over 20% of the Dynamic Policy will be flagged for further review by your manager.\nAlways choose the refundable room booking unless the only available option is a non refundable room.\nThe exception is the Corporate Events hotel room blocks organized by the internal team or if the conference hotel room block has better pricing than Navan.\nThe hotel room block’s pricing is generally within the bounds of the $300USD/night and in the event it is over that amount, please contact the AP team for an exception to be granted.\nConference hotel room blocks or Corporate Events organized blocks will still need to be charged to a personal credit card and then submitted for reimbursement via Navan Expense.\nAlways bring a credit card with you when traveling for company business if you have one. Hotels will generally expect you to have a physical credit card to present upon check-in. This credit card will be kept on file for the duration of your stay. Even if your lodging was pre-paid by the company or by using a company credit card, the Hotel may still require a card to be on file for “incidentals”.\nAdditional Hotel Guidelines\nDry cleaning is allowable if the stay is over 5 days. Room service is allowable as a meal for e.g. breakfast/lunch/dinner.\nMeals are to be segregated from the hotel bill and tagged under “Meals Company Provided” Category.\nParking must be segregated and tagged under “Transportation”.\nMovies, mini bars are not allowed as a claim.\nBooking accommodations through Airbnb\nTo be booked on the AIRBNB platform. Same restrictions in amount applies as the hotel expense.\nBooking through Airbnb is permitted if it is cheaper than a hotel stay for your trip\nTeam Member to submit a manual expense in Navan using expense type “Lodging” and attach the receipt/invoice.\nSelf Stay Incentive Policy\nIf you decide to stay with friends or family instead of a hotel / Airbnb for a business trip, you may expense up to a $50 appropriate host/hostess gift.\nCoding\nExpense Type / Navan Policy Category:\nLodging\nMeals: Company Provided while Traveling\nMeals while traveling on Company business  are reimbursable, up to $100 USD (or local equivalent currency) per day.\nEach Team Member must submit their own receipts for reimbursement, so ensure to separate billing when going to meals with groups of Team Members. If this is not practicable to do due to the group size, then the most senior Team Member present should pay the bill and submit for reimbursement.\nTo be used for team activities and food/beverages associated with travel on Company business. Refer to our Travel Handbook Page.\nTips are acceptable up to 20% and should be detailed accordingly in the description box. This should be included in the final price to stay within the Policy limits. For US team members, cash tips under $50 do not need a receipt.\nPlease also add a description for the trip/reason for travel.\nCoding\nExpense Type / Navan Policy Category:\nTraveling: meals for myself\nTraveling: Team Events and Meals\nTo be used for team activities and food/beverages.\nEach Team Member must submit their own receipts for reimbursement, so ensure to separate billing when going to meals with groups of Team Members. If this is not practicable to do due to the group size, then the most senior Team Member present should pay the bill and submit for reimbursement.\n$80 limit per person per meal.\nTips are acceptable up to 20% and should be detailed accordingly in the description box. This should be included in the final price to stay within the Policy limits. For US team members, cash tips under $50 do not need a receipt.\nPlease also add a description for the trip/reason for travel.\nCoding\nExpense Type / Navan Policy Category:\nTraveling: Team Events and meals\nMileage\nBased on Mileage driven and calculated by Navan. Team Members are prompted by Navan to enter their start and end locations.\nMileage is reimbursed according to local law, e.g.  US rate per mile, rate per km in the Netherlands, or rate in Belgium. Refer to “How Mileage Rates are Based” section below.\nShould Show Start and End point of trip in Navan.\nPlease include a reason for the trip in the description box.\nTeam Members cannot claim both mileage and Electric Vehicle charging fees.\nHow Mileage Rates are Based\nThe mileage rate is based on your legal entity’s mileage rates for the current year. These will be updated yearly for tax compliance.\nHowever, for the following entities (due to limited visibility online), the default rate is set at $.50/mile… so please update the rate on your mileage if needed to match your local compliance laws: GitLab IT BV, GitLab Korea and GitLab Japan.\nCoding\nExpense Type / Navan Policy Category:\nDistance Driven\nTrain\nThe Train policy in Navan is set up as a “Dynamic Policy” which calculates a fair market price for every search based on travel dates and destinations. Any purchases that are over 20% of the Dynamic Policy will be flagged for further review by your manager.  Also note that anything booked outside of Navan will flag as “Out of Policy”, and will need to be reviewed by your manager and the AP team.\nTrains booked through Navan will be paid by GitLab travel card.\nTrain rides must be standard cabin class with a 14 day booking lead time.\nIf you travel more than 3 train trips (6 segments) per quarter, and they are over 5 hours in duration; we will allow you to upgrade one class on the train.\nYearly or Monthly Rail Discount cards are not reimbursable.\nPlease note that anything booked outside of Navan will flag as “Out of Policy”, and will need to be reviewed by your manager and the AP team.\nIf booked within Navan and is flagged as “Out of Policy”, please also refer to the “Booking shows Out of Policy” section below.\nCoding\nExpense Type / Navan Policy Category:\nTrain travel\nTransportation/Parking\nParking, Tolls, Taxi, Uber pertaining to travel to/from GitLab events, clients, or conferences is acceptable. Team Members are not permitted to expense both fuel/EV charging fees and mileage.\nFull Description of Trip should be stated in the Description box.\nGround Transportation (taxis, ubers) at $300 limit per round trip and $150 limit for single trip.\nParking and tolls  at $150 limit per day.\nAll items booked which are over the limits set will need to have manager approval attached to the claim.\nCoding\nExpense Type / Navan Policy Category:\nPublic transport, tolls & parking\nTravel (Other)\nTravel Dates - Days before and after\nThe company will cover all work-related travel expenses. This includes lodging and meals during the part of the trip that is work-related. Depending on the distance of your travel, it can also include one day before and one day after the work related business. For example, if you are attending a 3 day conference in a jet lag-inducing location, the company will cover your lodging and meals those 3 days as well as one day before and one day after.\nInternet - Travelling\nInternet while traveling is reimbursable for up to $50 USD (or local equivalent currency) per day.\nPlease provide trip details on the description box.\nCoding\nExpense Type / Navan Policy Category:\nTraveling: internet access\nSupporting nursing mothers\nIf you are nursing while traveling on GitLab approved business, you can reimburse costs in order to travel with breast milk or ship your breast milk back home.\nYou can expense:\nFees associated with a milk shipment service, such as MilkStork.\nIf a milk shipment service is unavailable, you may expense the cost of checking a bag while flying\nCoolers or containers to store breast milk while traveling\nShipment costs and materials, including dry ice, packaging, styrofoam coolers, and labels.\nCheck with your health plan to see if you are eligible for reimbursement for the cost of a breast pump or any other supplies.\nCoding\nExpense Type / Navan Policy Category:\nOther\nGL Code NON-COGS:\n6080 - Other Travel- Visas, Permits, Covid Tests\nGL Code COGS:\n5080 - Other Travel- Visas, Permits, Covid Tests COGS\nPersonal Bookings\nIn Navan, you have the ability to book Personal trips.\nNote that when selecting this option, a personal credit card will be required at time of booking.\nPersonal trips will not have the option to be added to the GitLab invoice.\n4.1 NON-TRAVEL RELATED EXPENSES\nBooks (Audio/E-Books included)\nBooks are reimbursable if used to optimize your job position.\nLimit is set to $60/year.\nCoding\nExpense Type / Navan Policy Category:\nBooks, dues & subscriptions\nBusiness Cards\nBusiness cards are ordered from Moo as per the instructions provided by the People Connect team.\nTo be ordered via Moo, attach a receipt from Moo. Refer to the\nOrdering Business Cards\nhandbook page.\nLimit is set at $150 per quarter.\nExpenses higher than this limit require manager’s approval via email. The email should be attached to the expense transaction as an additional receipt.\nCoding\nExpense Type / Navan Policy Category:\nOffice Supplies\nCo-Working Space\nCoworking space is reimbursable for monthly space and one-off days during business travel.\n$700.00 Limit per month.\nThe space should be located within a commutable distance of the Team Member’s primary residence in their country of employment, with exception to One-off days (day passes) if the Team Member is traveling for business. This is for tax reasons.\nCo-working spaces need to be a professionally managed space. Leasing of apartments or private properties is prohibited.\nCoworking space is not reimbursable while on personal travel.\nUp to 5 One-off Days in a calendar month related to co-working space do not require Manager or Finance approval.\nIf more than 5 days are booked in the month, then Manager and Finance approval (via submitting a request under the\nExpenses -> General Expenses\npage of\nHelpLab\n) is required and needs to be obtained prior to submission of expenses.\nCopy of approved email must be submitted with first month submission.\nNo contracts are allowed to be under the GitLab name and it must be under the Team Members name.\nThe co-working space must be submitted monthly in the month it pertains to with full receipts to be provided.\nGitLab will not cover security deposits or advance payments for co-working space.\nTravel to and from the co-working space, parking, meals, beverages, access cards, insurance and other additional expenses in a co-working facility are not reimbursable. Only the rent for the space is reimbursable.\nIf co-working space is used together with a combination of working from home, we will allow the reimbursement of the internet cost for where you spend most of your time. i.e. if you expense a co-working space for a full month then internet for home cannot be expensed. If you expense co-work for a few days in a month then home internet can be expensed in full.\nCoding\nExpense Type / Navan Policy Category:\nOther\nGL Code NON-COGS:\n6076 - Coworking Space\nGL Code COGS:\n5076 - Coworking Space COGS\nConferences\nAll costs associated with attending a conference to represent GitLab are reimbursable and an approved completed\nG&D issue\nwill need to be noted in the expense report upon submission. Please refer to the\nGrowth and Development handbook page\nfor further details and requirements. The reimbursement limits currently denoted in the Growth and Development handbook page do not include the cost of travel to and from the conference, so please ensure you have Manager approval for the cost of the travel.\nSelect classification or tag “Growth and Development” in Navan when you create expenses.\nNeeds to have approved G&D Development issue which will be reviewed by AP Admin.\nNo conference expense, with the exception of travel, should be allowed outside of G&D, unless the Team Member is a speaker for an event or required to attend an event for job related responsibilities (i.e. staffing or sales).\nCoding\nExpense Type / Navan Policy Category:\nG&D (Growth & Development)\nEquipment\nThese amounts were set after a thorough analysis and review of Team Members’ expense data during the previous two years and benchmarked with other remote companies. Anything over this amount will be at the expense of the Team Member and no exceptions will be made.\nAs you onboard and start your GitLab journey, new hires will receive a 1,500 USD (or equivalent local currency) stipend to help you towards setting up your home office in your first year. This will be issued to you as a Virtual Card, and you will be able to use that card to purchase items. The Virtual Card information will be sent to you by the Accounts Payable team via your Onboarding Issue. Please refer to the\nNavan End Users Guide\nfor instructions on using and accessing your Virtual Card.\nExisting Team Members will get a yearly refresh of 500 USD (or equivalent local currency) to purchase upgrades, replacements, or enhancements to your home office setup. This only applies to Team Members who have been employed the entire previous fiscal year. This excludes laptops - please connect with the IT team if you require a replacement laptop.\nWe want you to set up your office the way you want it. Although we don’t want to put any restrictions regarding which office equipment you may purchase, we would like to outline what is covered under the term Office Equipment.\nWhat’s included - Essential items which you will need to ensure you are able to perform your role in GitLab should include chair, desk, monitor, Laptop (provided), headset, external mic, external keyboard and external mouse.\nFurther to this, items like additional monitors, laptop stand, external webcam, supplementary lighting, laptop bag/case, can also be considered and expensed using the Stipend/Allowance.\nAny items outside this will fall under an exception to the policy and will be subjected to review.\nIn addition the following items are\nnot reimbursable\n: Phones, watches, smart speakers, smart TVs/smart monitors, walking pads/treadmills and tablets.\nPurchasing from Private Sellers (e.g. either new or used equipment) is allowed. To expense them, attach the screenshot of your transaction with the seller showing the amount agreed upon, payment method, and item details in the description field. If paid via online transfer, attach the receipt for back up.\nIf you have any doubts please connect with the Expense Team by submitting a request under the\nExpenses -> Home Office Equipment\npage of\nHelpLab\n. Please note that these purchases are still reviewed by your manager and accounting teams, and any misappropriation of these funds will be flagged.\nNew Hires- 1,500 USD (or equivalent local currency) Guidelines\nThe virtual card provided will expire after one year of issue.\nAny unused funds will not roll over to the next year.\nThe local currency FX rate will be calculated using the OANDA Currency Converter as of the date the virtual card is issued.\nExisting Team Members- 500 USD (or equivalent local currency) Refresh Guidelines\nThis is a yearly refresh amount. It will reset at the beginning of each calendar year (January 1 to December 31).\nThe Navan Virtual Card cannot be used for the yearly refresh. Team Members should use their own method of payment and submit their expenses in Navan.\nAny unused funds will not roll over to the next year.\nTeam Members hired within the previous fiscal year are not eligible. For example, a Team Member who started 2023-05-10 will get their first refresh amount on 2025-02-01.\nCoding\nExpense Type / Navan Policy Category:\nWork from home\nTeam Member Significant Life Events and Team Member Gifts\nCash or cash equivalents, such as gift cards, are not allowed; Qualified gifts are capped at $125 per transaction.\nManagers are able to send Gifts and Flowers on behalf of their team members in acknowledgment of significant life events such as well wishes ahead of surgery, or the loss of a loved one. Baby gifts are not reimbursable as GitLab already sends them a\ngift\n.\nAny People Manager can send a gift or flowers to any Team Member at GitLab to let them know they are thinking about them. Examples include:\nA new Team Member recently purchased a new home and shared their news with others. A People Manager sends a “Home Sweet Home” doormat as a congratulatory gift.\nWhile working a People Manager noticed a Team Member’s children in the background of a Zoom call and surprised the kids with a new game.\nA Team Member wasn’t feeling well, which was noticed by a People Manager who sent a care package of food as a ‘get well soon’ gesture.\nBaby gifts are not reimbursable, as the GitLab People team already sends team members a congratulatory gift.\nThe cost of the gifts and flowers provided to GitLab Team Members will be allocated to the senders departmental budget. The allowable cost for gifts is up to $125 USD (including shipping) per gift.\nIf you would like to buy holiday gifts for your team, these need to be done personally and should not be expensed.\nPeople Managers are to use their own personal card for expense reimbursement. People Managers will need to be sure to use Team\nEmployeeGiftsFlowers\nand the account 6028 in Navan Expense for the expense.\nFor further questions regarding expensing of gifts and flowers, please reach out to the AP team by submitting a request under the\nExpenses -> General Expenses\npage of\nHelpLab\n.\nCoding\nExpense Type / Navan Policy Category:\nGifts - internal\nClassification:\nEmployeeGiftsFlowers\nInternet\nMonthly service charges for the internet are reimbursable, but GitLab will not reimburse for any initial setup, equipment, change fees, or monthly insurance charges.\nPlease expense internet costs monthly, reflecting current charges only (even if you pay by a different cadence).\nFor Team Members in the Netherlands:\nIf you have not already completed the form as part of onboarding with our Netherlands payroll provider, fill in and sign the\nRegeling Internet Thuis\nform and send it to the HRSavvy team at\npayroll@savvy-group.eu\n. Please do not expense your Internet costs via Navan - these will be rejected.\nIf your address changes or the amount changes, please send a new form to the HRSavvy team, along with the invoice/letter for processing.\nThis is a taxable expense for GitLab Ltd. United Kingdom Team Members assuming that the internet connection is used partially for personal use as well as business use.\nPolicy is set at $80, anything over that amount will still be considered for approval as we know there are exceptions, and will be checked and approved on an individual basis depending on the user’s circumstances, i.e. location etc.\nItemized Receipt required.\nIf an itemized bill is not available, costs will only be reimbursed for the element relating to Internet Access, i.e. if you pay for tv, internet and phone, the invoice should be divided by 3/# of services and we will pay this value only.\nNo hardware costs for internet service is reclaimable. This includes routers, extenders/boosters, etc.\nIf co-working space is used together with a combination of working from home, we will allow the reimbursement of the internet cost for where you spend most of your time. i.e. if you expense a co-working space for a full month then internet for home cannot be expensed. If you expense co-work for a few days in a month then home internet can be expensed in full.\nTeam members for GitLab GmbH (Germany) should refer to this\npage\nfor their country’s specific guidelines of this expense.\nCoding\nExpense Type / Navan Policy Category:\nInternet access\nLaptops, insurance and repairs\nAll laptops are purchased through GitLab unless a Team Member is in a region where GitLab cannot deliver a laptop.\nTeam Member laptops can be refreshed after three years of employment. If a Team Member needs a replacement laptop due to damage, they must reach out to IT via an issue before purchasing a new one. See\nLaptop handbook page\nfor your reference.\nRepairs to company issued equipment\nIf you need to replace a battery, laptop charger, or something small that does not affect the productivity or speed of the device, please go ahead and get that small item replaced and expensed.\nThe category to use in Navan is ‘Office Supplies’.\nPlease get approval from your Manager if your equipment appears to be damaged, defective, or in need of repair\nBusiness Operations can advise on next steps to ensure you have the proper equipment to work.\nFor loaner laptops: Do not hesitate when expensing a loaner laptop while your primary laptop is being repaired.\nUse your best judgment identifying a local vendor. Please check out our Laptop Repair page for more info.\nNeeds to have an approved issue from the IT team.\nAP Admin needs to review expense for approved issue.\nCoding\nExpense Type / Navan Policy Category:\nOffice Supplies\nMarketing- related expenses\nSmall purchases for marketing events which are under $5,000 USD and which cannot be paid through the Procurement Process (Zip) are reimbursable.\nUp to $5,000 can be expensed via Navan.\n$5,000 needs to go through the procurement process in\nZip\n.\nCoding\nExpense Type / Navan Policy Category:\nOther\nGL Code NON-COGS:\nMultiple- will be required to choose GL account\nGL Code COGS:\nMultiple- will be required to choose GL account\nMeals with Clients and Partners\nTeam Members are prohibited from providing anything of value, including meals, to any government official, government Team Member, or government representative (including any government prospects and government customers).\nMeals are otherwise reimbursable, however Team Members should be mindful of budget while claiming meals with clients and partners.\n$80 limit per person per meal.\nAll Participants should be added (both internal and external participants) in the section provided.\nPlease also add a description for the meal/event.\nThe bill should be paid by the most senior Team Member present and submitted for reimbursement by that Team Member.\nCoding\nExpense Type / Navan Policy Category:\nEntertaining clients\nOffice Supplies & consumables\nTo maintain your home office equipment, items like compressed air to clean keyboards, pens, etc may be required from time to time.\nLimit is set at $50.00 per month.\nCoding\nExpense Type / Navan Policy Category:\nOffice Supplies\nPhone Service\nMonthly service charges for cell phones are reimbursable for Team Members whose phones are vital to their position.\nActual cell phone, phone accessories and family plans are not reimbursable.\nPolicy is set at $80, anything over that amount will still be considered for approval as we know there are exceptions, and will be checked and approved on an individual basis depending on the user’s circumstances, i.e. location etc.\nA note that Team Members using their phone service outside of their country should try to obtain a contract which includes roaming services.\nItemized Receipt required.\nIf itemized bill is not available, then the costs will only be reimbursed for the element relating to Phone Service, i.e. if you pay for tv, internet and phone, the invoice should be divided by 3/# of services and we will pay this value only.\nNo monthly hardware costs for phone service is reclaimable.\nIn addition Tablets, Watches, Phone Devices are not reimbursable.\nCoding\nExpense Type / Navan Policy Category:\nCell phone\nPostage/Shipping/Customs Fees\nPostage/shipping/custom charges related to the sending and or receiving of work documentation or special packages can be reimbursed.\nLimit is set at $100.00 per transaction before being flagged for approval.\nCoding\nExpense Type / Navan Policy Category:\nShipping & postage\nProfessional dues, membership fees\nFor bar license dues / fees, Team Members who are employed by GitLab as an attorney will supply evidence of payment for such fees and expensed via Navan.\nOther costs associated with professional dues and membership fees are reimbursable and an approved completed G&D issue will need to be noted in the expense report upon submission.\nSelect classification or tag “Growth and Development” in Navan when you create expenses.\nAP Admin needs to review expenses for approved issue.\nCoding\nExpense Type / Navan Policy Category:\nG&D (Growth & Development)\nSoftware\nNo software subscriptions are reimbursable.\nTeam Members that would like to purchase software will need to go through the Procurement process.\nPlease follow the Guidance from the\nIndividual Use Software Handbook Page\n.\nSwag\nAll Swag related to customers, your team, events, giveaways, TMRG’s, etc., are not to be expensed.\nFor conferences, any gifts or swag related items to be given out are not to be expensed.\nPlease refer to the\nMerchandise Workflow Guidance\nin the Handbook.\nExceptions are only reimbursable with approval from the VP of department or the Swag team.\nTeam Building\nTo be used for team activities and food/beverages associated with special team events. Amount allowed is dependent on their department budget for the year.\nTeam members to please use T&E accounts for their own individual expenses relating to any team building events (ie meals, travel, transportation) and tagging the classification to “FY25 Team Building Budget”\nIn FY25, each e-group member has been allocated a budget per quarter for FY25-Q2 to FY25-Q4 for team building events.\nEach e-group member can use their discretion when using the budget.\nThe budget should be used within the quarter the funds are allocated and unused funds cannot be moved to a different quarter.\nThis budget should cover leadership offsites, Team Members get togethers, the holiday party and other virtual fun events.\nIn Navan, the Team Member must code any related expense to GL code “Team events & meals” and Classification (under optional details) “FY25 Team Building Budget”.\nThe expense needs to be submitted in the same month as the event or if not possible due to the timing of the event, the latest acceptable submission will be before the end of the fiscal quarter that the event took place.\nCoding\nExpense Type / Navan Policy Category:\nTeam members to please use T&E accounts for their own individual expenses relating to any team building events (ie meals, travel, transportation)\nClassification:\nFY25 Team Building Budget\nTraining/Tuition\nAll costs associated with training or tuition are reimbursable.\nAn approved\ncompleted G&D issue\nwill need to be noted in the expense report upon submission.\nThe Growth and Development benefit is managed in partnership by the Total Rewards and Learning and Development team.\nSelect classification or tag “Growth and Development” in Navan when you create expenses.\nAP Admin needs to review expense for approved issue.\nCoding\nExpense Type / Navan Policy Category:\nOther\nGL Code NON-COGS:\n6065 - Training & Development\nGL Code COGS:\n5065 - Training & Development COGS\nVPN Subscription\nPlease read\nWhy We Don’t Have A Corporate VPN\n, and check out our\nPersonal VPN\npage regarding usage at GitLab.\nPolicy is set at $150 per year.\nYearly subscription can be submitted in one claim.\nMonthly subscriptions to be submitted monthly.\nValid receipts to be submitted for all claims.\nMulti year Policy - only current year subscription can be claimed.\nCoding\nExpense Type / Navan Policy Category:\nOther\nGL Code NON-COGS:\n6060 - Software Subscriptions\nGL Code COGS:\n5060 - Software Subscriptions COGS\nVisas/Permits/Covid Tests\nTravel Visas, Travel Permits, Covid Tests pertaining to travel to/from GitLab events, clients, or conferences is acceptable.\nPlease provide a detailed description of expenses in the description box.\nWill flag approval required by AP Admin.\nCoding\nExpense Type / Navan Policy Category:\nOther\nGL Code NON-COGS:\n6080 - Other Travel- Visas, Permits, Covid Tests\nGL Code COGS:\n5080 - Other Travel- Visas, Permits, Covid Tests COGS\n4.3 Missing Receipt Affidavit\nIf a Team Member is missing a receipt, a Missing Receipt Affidavit will need to be completed and attached to the expense when submitted. Missing Receipt Affidavit located\nhere\n(please ensure to make a copy). When attaching the receipt affidavit, the Team Member should attach the document as a PDF.\n4.4 Reimbursement Payout Timelines\nThe procedure by which reimbursable expenses are processed varies and is dependent on contributor legal status (e.g. independent contractor, Team Member) and subsidiary assignment.\nLegal entities\nTeam Members must submit their expenses through Navan.\nExpenses for GitLab Inc, GitLab Federal, GitLab Ltd (UK), GitLab BV (Belgium and Netherlands), GitLab GmbH (Germany), GitLab PTY Ltd (Australia and New Zealand), GitLab GK (Japan) GitLab LTD (Ireland), GitLab Korea Limited and GitLab Singapore PTE. LTD. are reimbursed via Navan within 7 business days for the expenses within policy or after approval by the Accounts Payable team (for out of policy expenses).\nThe Team Member’s bank account must be set up in Navan in order for payment to complete.\nExpenses for GitLab Canada Corp must be submitted and approved by the Accounts Payable team (for out of policy expenses) before the 1st day of each payroll period.\nExpenses for GitLab France S.A.S and GitLab BV Finland must be submitted and approved by the Accounts Payable team (for out of policy expenses) on or before the 6th of each month to ensure it is included in the current month’s payroll.\nNavan will be implementing a Batched Payment system for team members who are reimbursed directly through Navan. If you submit multiple expenses during the week, Navan will batch these expenses into one single weekly payment that will be paid out on Mondays. These payments will include all approved expenses up until the Sunday evening prior, and should hit the team member’s bank accounts on Tuesday or Wednesday.\nPEO (Professional Employer Organization/ Employer of Record and not a GitLab entity or Branch)\nPEO Locations\nThe list of locations under a PEO can be found\nhere\n.\nTeam Members must submit their expenses through Navan.\nAll expenses must be submitted and approved by the Accounts Payable team (for out of policy expenses) on or before the 6th of each month to ensure it is included in the current month’s payroll.\niiPay\nTeam Members must submit their expenses through Navan.\nAll Individual contractors or C2C, with exception of Nigeria will be reimbursed by iiPay by the 22nd of each month. All expenses must be submitted and approved by the Accounts Payable team (for out of policy expenses) by the 6th of each month to be included in the current month payment. For contractors with C2C status, be sure to contact the Payroll team via HelpLab and submit a request under the\nExpenses -> General Expenses\npage of\nHelpLab\nif you need to set up a separate bank for your expense reimbursement.\nCXC Global\nThe list of CXC countries can be found\nhere\n.\nTeam Members must submit their expenses through Navan.\nAll expenses must be submitted and approved by the Accounts Payable team (for out of policy expenses) on or before the 6th of each month to ensure it is included in the current month’s payroll.\nGitLab Payroll Team will send the approved expense amount to CXC EMEA Payroll to include with the monthly salary.\nTeam Members must include the approved expense amount on their monthly invoice as well.\n4.5 Submitting Expenses on Behalf (or Requested By) Team Member’s Manager\nA Team Member submitting expenses on behalf of their manager is a violation of our Expense policy and GitLab’s internal controls. The AP team will review these on a quarterly basis during their review of the quarterly Manager issue. If this is found during the expense review process, the following actions will take place:\nAP Admins to notify the Team Member, the Team Member’s manager, the Team Member manager’s manager, and Finance leadership team of the violation.\nThe expense is to be repaid to GitLab immediately and the Team Member’s manager will need to resubmit the expense themselves.\n5. Physical Cards\nPlease see Navan Physical Card policy\nhere\n.\n6. Purchase Cards\nNavan Purchase Card\nThese virtual cards within Navan are only utilized by the AP team, and they are used solely for providing new Team Members with a $1,500 USD (or local currency equivalent) stipend for their home office set up. These cards were set up to ensure that Team Members do not spend outside of this amount, as well as ensuring the stipend is only available during their first year of employment. Within the controls in Navan, these cards are only accessible to the AP Admins team, and are not accessible to Team Members.\nSetting up your Navan Account\nBelow is some more information to help you get set up with your\nNavan\naccount.\nLog into Okta and click the Navan tile.\nOnce you are in your dashboard, make sure to set up your info in your profile (see link from drop down menu under your name).\nAdd your passport information to your profile (only passport information is accepted), this will populate your info directly when booking a flight.\nTeam members can view if their reimbursements have been processed successfully or failed on both mobile and desktop versions. If the reimbursement fails, the team member will receive a notification and how to fix it in Navan.\nNow let’s start booking!\nNavan Loyalty Program\nTravelers earn Navan Loyalty Points s when booking hotels in Navan.\nUsers who book hotels for others will also earn loyalty points.\nThe Navan Loyalty Program is visible in the platform, with a new loyalty program profile page to track your earn and redemption activity. Team members are able to redeem loyalty points for personal travel hotels. Users can redeem as little or as many loyalty points as desired - they can pay partially with loyalty points  and partially with a personal credit card if team members don’t have enough loyalty points  to cover the full cost of the booking. Loyalty Points will be a form of payment on checkout when selecting a prepaid hotel rate.\nAll loyalty points  can be retained by a user when they leave their company by activating a personal-only account. Companies cannot take back earned rewards.\nSustainable travel considerations\nEven as an all-remote company, GitLab recognizes that some travel is necessary. These considerations aim to reduce the environmental impact of travel:\nPrefer virtual meetings and attendance over personal meetings, except when the event’s objective is enhanced by meeting in real life.\nFor short-distance travel, consider ground travel over air travel for information on short distance travel recommendations visit these examples from the University of Bern, University of Lund.\nSelect trips with lower carbon emissions. When booking travel through Navan Tripactions you can view the total CO2 footprint for at the checkout screen.\nIf you organize an in-person meeting, aim for a location that allows as many people as possible to travel in a sustainable way.\nCarbon offsets offered by airlines have dubious value, so aim to avoid air travel where it makes sense.\nDomain Name Registration and Maintenance Policy\nScope and Purpose\nThis policy applies to all GitLab team members registering, or maintaining a registration for, GitLab-related Domain Names, including GitLab-related Domain Names registered or used for sandbox or testing purposes.\nDomain names are key assets in GitLab’s intellectual property portfolio. Centralizing the registration and maintainance of domain names under the Infrastructure Shared Services group using GitLab’s approved domain name registrar helps us track and protect these valuable assets. Please refer to the\nDomain Names and DNS Records Handbook Page\n.\n“GitLab-related Domain Names”\nwhen used in this policy means any domain name:\nregistered or used for any purpose related to a team member’s role at GitLab;\ncontaining the GitLab trademark (GITLAB) or one of its derivatives (like, amongst other things, git, glab, gtlb, gl); and/or\ncontaining any GitLab key messaging term (like, amongst other things, DevOps, DevOps platform, all remote).\nRegistration of new GitLab-related Domain Names\nAll GitLab-related Domain Names must be registered using the process outlined in the\ndns-domain-purchase-request issue template\nmaintained by IT Operations.\nExpense reports submitted by team members for expenses incurred on or after\n2022-03-01\nin registering new GitLab-related Domain Names will be rejected.\nTransfer of existing GitLab-related Domain Names\nAll GitLab-related Domain Names currently registered in the name of team members, or registered with unapproved registrars, should be transferred to GitLab using the process outlined in the\ndns-domain-transfer-request issue template\nas soon as possible.\nExpense reports submitted by team members for expenses incurred on or after\n2022-08-01\nin maintaining registrations of GitLab-related Domain Names in the name of team members, or with unapproved registrars, will be rejected.\nTeam Member Expense Temporary Advances\nThis relates To Laptop Advances only - If more information is required please email the AP team on\nAP@gitlab.com\nExpense Reimbursement for Terminated Team Members\nIf a team member whom you manage has left GitLab and comes to you with final expenses that are valid for reimbursement, please verify that they were not already processed in Navan and then contact Accounts Payable. You must submit valid receipts and a completed copy of the\nExpense Reimbursement template\nalong with your approval. Please note that we may also ask the terminated team member to provide valid banking details in order to process the payment to them. AP will do their best to process and pay the reimbursement to the individual within 1 week.\nLast modified July 8, 2025:\nEUS - Access Requests Update (\nb88590d3\n)\nView page source\n-\nplease\ncontribute\n.", "num_words": 9232}
{"doc_id": "41ae4d3a64493818", "url": "https://handbook.gitlab.com/handbook/legal/esg", "title": "Sustainability | The GitLab Handbook", "text": "The Handbook\nLegal & Corporate Affairs (\"LACA\")\nSustainability\nInformation and processes related to Sustainability and ESG\nTo learn more about Sustainability at GitLab, please take our ESG Training course available on\nLevelUp\nand in the\nHandbook\nJoin the\n#sustainability-esg\nSlack channel to follow along for updates, ask questions and provide feedback\nCustomer asking ESG-related questions? Follow the steps outlined in the\nRequesting Support with Customer ESG Questions\nsection below\nSustainability Programs\nCorporate Sustainability\nis a business approach that enhances long term stakeholder value by implementing a strategy that considers every dimension of how a business operates when making social, environmental and economic progress.\nstands for Environmental, Social and Governance and refers to the three key factors when measuring the sustainability and ethical impact of an investment in a business or company.\nAt GitLab we use Sustainability and ESG interchangeably. Both terms are relevant to our work and both serve different purposes depending on the audience we interact with.\nTeam Overview & Vision\nThe Sustainability\nTeam\ncreates and maintains GitLab’s Corporate Sustainability strategy and programs by driving and integrating responsible business practices and ESG regulatory compliance.\nThe Sustainability team builds and maintains strong internal and external relationships to understand stakeholder expectations - including customer, investor and team members. This engagement allows us to remain customer centric and easy to do business with while meeting shareholder and team member expectations.\nThe Sustainability Team has two primary functions and four corresponding programs:\nCompliance, Reporting & Climate Action\nCompliance & Reporting\n: Manages customer and prospect ESG-related questionnaires, requests for proposals, and sustainability contractual clauses. Leads annual Sustainability report and external assurance process. Monitors global ESG regulation and works cross-functionally to advance GitLab’s culture of compliance with applicable ESG regulations. Responds to investor ESG rating agencies to maintain competitive ESG scoring among peers.\nClimate Action\n: Identifies and executes strategic climate programs, including annual measurement of GitLab’s greenhouse gas inventory, emissions reduction target-setting, partners with Procurement to run the sustainable supplier program, identifies emissions reduction opportunities across the business, and purchases high quality carbon credits. Manages team member & customer communications related to GitLab’s commitment to environmental sustainability.\nSocial Impact\nGiveLab\n: GiveLab is GitLab’s team member volunteer program and includes year-round volunteering, GiveLab 30 days of Impact, our annual company-wide volunteer campaign and GiveLab Champions Program. Volunteerism is an effective way to build trust through social connections - this leads to higher individual and team motivation, and greater cross-functional collaboration.\nGitLab for Non-Profits\n: GitLab’s in-kind donation program. Manages social impact communications with team members and customers, while developing strategic nonprofit partnerships to advance GitLab’s ESG goals and help enhance our brand reputation by demonstrating our commitment to the nonprofit community.\nSustainability Strategy\nDeeply integrated into our business philosophy, GitLab’s Sustainability strategy is driven by our\nvalues\nof Collaboration, Results for Customers, Efficiency, Diversity, Inclusion and Belonging, Iteration, and Transparency (CREDIT). GitLab’s stakeholders, including customers, investors, team members, and community members play a key role in GitLab’s Sustainability strategy.\nGitLab conducted its inaugural ESG materiality assessment in 2022. By conducting a materiality assessment with our stakeholders, we identified which ESG topics have the greatest impact on GitLab’s business and where we have the potential to have the greatest impact on the environment, society, and our global communities - those material topics drive the programs, policies and initiatives under our strategy.\nThis page will continue to be updated as we make progress towards developing plans and programs to advance our Sustainability goals.\nSustainability Advisory Committee\nThe purpose of the advisory committee is to create cross-functional alignment on ESG objectives and decision making, to go beyond simply compliance and into long-term operational implementation.\nMembers of the Sustainability Advisory Committee\nRobin Schulman (Egroup)\nRob Allen (Egroup)\nBrian Robins (Egroup)\nStacy Cline (ESG)\nKim Buncle (ESG)\nKelsey Turcotte (Investor Relations)\nLisa Boughner (Communications)\nAmie Bright (Marketing)\nBilly Stallings (Marketing)\nSherida McMullan (DIB)\nStella Treas (CoS)\nScott Rissmiller (Corporate Legal)\nEmily Plotkin (Employment Legal)\nRendi Miller (Procurement)\nJames Shen (Finance)\nMarin Jankovski (Infrastructure)\nTaylor McCaslin (Product)\nCompliance & Reporting\nLike all functions at GitLab, transparency is a core focus. Every year GitLab publishes an annual ESG report where we share our approach to managing our key ESG focus areas, provide updates on programs and policies, achievements to date, metrics and targets, and plans for the future.\nFY23 ESG Report\nFY24 ESG Report\nThe Sustainability team works cross-functionally to prepare GitLab for compliance with ESG regulations.\nThe Sustainability team also supports internal teams with customer ESG questionnaires and RFPs. Customers and prospective customers are increasingly asking about GitLab’s Sustainability programs, including questions related to GitLab’s climate commitments and greenhouse gas emissions. Many of our customers are also subject to ESG regulation and we expect customer ESG questions to continue to increase as they look to better align to new regulations.\nRequesting Support with Customer ESG Questions\nIf a customer or potential customer has questions related to GitLab’s ESG practices\nas part of an RFP\n, please follow the\nRFP process\nIf a customer or potential customer requests information via an ESG questionnaire, please open an issue\nhere\nand select the ‘ESG Questionnaire’ template\nIf there’s an opportunity to connect the Sustainability team directly, please reach out in the\n#sustainability-esg\nSlack channel\nClimate Action\nGitLab is committed to doing our part to minimize our environmental footprint, including working to reduce greenhouse gas (GHG) emissions associated with our operations. GitLab’s stakeholders, including customers, investors, regulators, and team members expect the company to operate sustainably and to do our part to reduce our environmental footprint.\nMany of GitLab’s customers have GHG reduction targets and as a vendor, GitLab’s carbon emissions contribute to our customers’ emissions footprints. To remain easy to transact with, GitLab needs to meet the expectations of our customers by taking action on climate change.\nGitLab’s Climate Action Program consists of four pillars:\nMeasure & Report:\nEvery year GitLab conducts an annual greenhouse gas (GHG) inventory in alignment with the GHG Protocol, the global best practice carbon accounting standard. We publish the results of the inventory in our annual ESG report and have the data assured by a third-party. In 2026, GitLab is subject to new regulations in the US and the EU that will make these disclosures mandatory.\nAct:\nGitLab is taking action to reduce our carbon emissions. As a fully remote software company, the majority of our emissions come from our suppliers. Engaging our suppliers to measure their carbon emissions and set their own reduction targets is a critical component of our reduction pathway, which is why we have set an aspirational supplier engagement target. Please see the\nSustainable Procurement Program\nfor more information. The Sustainability team continues to explore other ways to reduce emissions and is doing further analysis on additional reduction pathways.\nEngage:\nThis includes engaging GitLab team members in climate education and action. In 2024, we launched the\nGitLab Team Member Sustainability Guide\n, providing actionable steps team members can take at home to minimize their environmental impact. In FY26, we launched our partnership with\nMammoth Climate\n, a climate literacy and challenges platform, to further engage team members with educational materials, activities, and rewards\nAccelerate:\nWhile GitLab works to reduce our emissions, we are also committed to accelerating climate solutions by purchasing high quality carbon credits to cover a portion of our carbon footprint. We are proud to partner with\nRubicon Carbon\nto purchase a diversified portfolio of high quality carbon credits, financing carbon removal projects that meet Rubicon’s\nhigh standards of quality\n.\nSustainable Procurement Program\nIn FY25, GitLab set an aspirational science-aligned supplier engagement target to reduce our Scope 3 emissions: 70% of our suppliers (by emissions) will have science-aligned climate targets by FY29.\nOur sustainable procurement program includes the following initiatives:\nAnnual emissions survey to request data from suppliers in an effort to improve the accuracy of our footprint\nUse strategic business reviews to understand key barriers suppliers face when measuring and reporting their emissions\nProvide resources and training to suppliers on how to measure and reduce their greenhouse gas emissions\nProvide resources and training to team members responsible for supplier selection on our new expectations of suppliers, aligned with applicable laws.\nWe look forward to sharing updates on this new initiative.\nGiveLab\nAt GitLab, all team members do work that supports the company, which supports the enhancement of an open source codebase. This codebase is freely available to everyone to make better software faster and drive progress through what they build. Between 2022 and 2024, team members made over 125,000 commits to the open source part of the GitLab codebase.\nBut, there are also other ways to give back and many team members choose to contribute beyond GitLab. In addition to contributing to GitLab, GitLab offers additional optional pathways for team members to give back while leveraging their unique skills and passions through programs such as GiveLab, GitLab’s Team Member Volunteer Program.\nGitLab encourages team members to take part in volunteer initiatives such as supporting their local communities, participating in virtual volunteer activities, and organizing volunteer activities as part of team events. Corporate volunteerism has been proven to be an effective strategy for\nboosting engagement\n, improving employee retention, and\nstrengthening relationships at work\n. Volunteering with GiveLab supports team members in fostering connections, building trust among one another and embodying our CREDIT values while positively impacting our communities.\nTeam members may self organize volunteer events at any point throughout the year. To submit a request for a team volunteer activity with a\nRegistered Nonprofit Organization\nthat isn’t on the current\nGiveLab Nonprofit Directory\n, please go to the\nPhilanthropic Requests epic\nand open a new issue using the\nVolunteer_Support Template\n.\nTeam members can also request support from the Sustainability Team to organize local or virtual volunteer opportunities on their behalf by going to the\nPhilanthropic Requests epic\nand opening a new issue using the\nVolunteer_Support Template\n. Please write “yes” for the question, “Would you like the Sustainability team’s help organizing the volunteer activity?”\nAll team members and volunteer activities must adhere to the\nGitLab Philanthropy Policy\n. Team members must follow GitLab’s paid time off (PTO) policy if volunteering during work hours and use the “public service/volunteer” option in Workday.\nIf volunteering in person, team members may incur some expenses. For calendar year 2024, team members can expense up to a total of $25 for expenses incurred that meet the allowed for reimbursement criteria. All expenses should be submitted in Navan using the “GiveLab” classification. Please note that GitLab does not allow team members to travel to in-person volunteer events. All in-person volunteering should be local to the team member.\nAs with all\ncompany expenses\n, team members must be thoughtful in spending the company’s money and use best judgment to ensure that all expenses are deemed “ordinary and necessary.” Team members should follow all\nteam member expense responsibilities\n.\nExpenses allowed for reimbursement (for in-person volunteer events):\nLocal travel only -\nmileage\n,\ntrain\n,\ntaxi/rideshares\n. Must follow and comply with the current limits of our Expense Policy. Code under their individual travel category and use the “GiveLab” classification in Navan\nParking\nfor the event. Must follow and comply with the current limits of our Expense Policy. Please use the “GiveLab” classification in Navan\nMeal\nduring the event. Must follow and comply with the current limits of our Expense Policy. Code under Travel-Meals for Myself and use the “GiveLab” classification in Navan\nExpenses not allowed for reimbursement:\nAny airfare, lodging, rental cars, coworking space, internet expenses are not allowed\nAny supplies or items needed for the event\nDonations to the nonprofit\nAny expenses that are not mentioned as “allowed” above are not reimbursable and there will be no exceptions\nAs with our unique ways of working, GitLab and its team members have identified and sought out opportunities for impact that speak not only to our\nvalues\nbut also to our\nall-remote\nnature. To review previous opportunities that team members participated in, visit the\nhistorical activities page\n.\nGiveLab 30 Days of Impact\nGiveLab 30 Days of Impact is GitLab’s annual volunteer campaign created to encourage team members to foster connections, build trust among one another and embody our CREDIT values while positively impacting our communities. We have designed this program with our high-performing team culture and results for customers in mind.\nGiveLab 30 days of Impact runs annually in Q4 and our goal is to encourage as many team members as possible to volunteer over the course of 30 days.\nThroughout the month, team members can volunteer as little as one hour of their time to make an impact. We understand that our team members are driven by many different factors, and we welcome that volunteer participation will look different for everyone. Through GiveLab 30 days of Impact we aim to offer many different ways for team members to get involved such as:\nThrough company-sponsored virtual events\nLocal in-person volunteer events organized by the GitLab Sustainability team,\nGiveLab Champions\n, and team members\nIndividual volunteer pursuits\nFind and contribute to opportunities in the\nGiveLab Volunteer Directory\nInclude a volunteer activity at an all-hands or team builder\nContribute to\nGitLab’s codebase\nAssist with\nretention\nand recruitment efforts\nWhy GiveLab 30 Days of Impact Exists\nWhile GitLab encourages year-round volunteerism through\nGiveLab\n, GiveLab 30 days of Impact centralizes our efforts into an annual campaign to have a larger collective impact over a specific timeframe. Corporate volunteerism has been proven to be an effective strategy for\nboosting engagement\n, improving employee retention, and\nstrengthening relationships at work\n. Additionally, this program offers volunteering opportunities around a major holiday season in many parts of the world, a time when many are seeking opportunities to give back.\nTeam Member Benefits of Volunteerism\nDevelop new skills and knowledge\nExpand your professional network and connections\nUnderstand the nonprofit community’s needs and how your skills can help\nMake a meaningful difference in your community\nImportance of Volunteerism at GitLab\nProvide an additional option for team members to volunteer and make a positive impact beyond the impact team members make every day by contributing to GitLab - the platform and the company\nProvide another way for team members to embody our CREDIT values through volunteerism and social impact\nExpand GitLab’s positive impact across communities\nBuild trust amongst team members through social connections\nBoost team member engagement\nUtilizing GitLab’s PTO Policy to Volunteer\nTeam member participation is voluntary, should not interfere with work commitments, and time off is required to be in alignment with GitLab’s\nPTO policy\n. Travel is not permitted for this program. Team Members may choose to volunteer virtually or through local in-person events. Volunteer events typically last between one and four hours. Managers play an important role in supporting team members in taking time for themselves and their families, while also ensuring accountability to results and coverage for teams and its goals. Our Results for Customers value sits at the top of our values hierarchy, and our PTO policy empowers managers to appropriately manage workloads and deliverables, while also giving team members the time away they need from work.\nHow to Request Volunteer Time Off\nTeam Members taking time off to volunteer should communicate time off in advance with their manager. To request volunteer time off, follow the\nPaid Time Off\nprocedures outlined in our handbook and reach out to People Connect via HelpLab should you have any concerns. A step-by-step guide on how to request paid time off can be found\nhere\n. Note that volunteer time off should be used towards acceptable volunteer activities and in adherence with our\nGitLab Philanthropy Policy\n.\nExpenses and Reimbursements for Participation\nPlease see our\nGiveLab reimbursement policy\nto understand current allowances as they relate to volunteering costs.\nGiveLab Volunteer Directory\nWe have created an internal\nGiveLab Volunteer Directory\nthat features a list of vetted nonprofit organizations with available volunteer opportunities. Team members can search the document for virtual volunteer opportunities, opportunities to volunteer with\nGitLab Foundation\ngrantees and search for local opportunities.\nWe encourage all team members to contribute to our GiveLab Volunteer Directory. To recommend a nonprofit organization to add to the Directory, please open a\nVolunteer Recommendation Issue\n.\nGiveLab Champions\nThe GiveLab Champions are team members who are passionate about giving back to their communities and want to encourage other team members to do the same.\nGiveLab Champions self-identify to participate in the voluntary Champions group, managed by the Sustainability team. The GiveLab Champions help activate the GiveLab signature program (launching Fall of 2024), but also work to organize and promote volunteer opportunities year-round.\nThe importance of GiveLab Champions\nGiveLab Champions help team members build trust through social connections, build connections within their communities, and help GitLab provide meaningful opportunities for team members to give back. The GiveLab Champions ensure global voices are heard and relevant causes are represented based on where team members live. GiveLab Champions help to make GitLab a better place to work.\nTeam member benefits of volunteering\nChampions introduce new and current team members to GitLab’s culture and help to build and maintain engagement\nChampions help build trust through social connections\nChampions have the opportunity to develop professional and leadership skills, build relationships across the company and make a difference at work and in local communities\nChampions can network and provide positive impacts to the business\nGiveLab Champion responsibilities\nRecommend local\nRegistered Nonprofit Organizations\nthat meet GitLab’s eligibility criteria for volunteer activities\nHelp organize local volunteer events for team members to participate in\nProvide recommendations to the Sustainability Team for virtual volunteer opportunities\nEncourage team members to volunteer\nHelp plan and execute the GiveLab signature program\nParticipate in quarterly Champion group meetings\nProvide feedback to the Sustainability team on the GiveLab and Sustainability Programs\nTime commitment\nThe time commitment for a GiveLab Champion is estimated to be 3-5 hours per quarter. Participation can vary throughout the year.\nSelection criteria\nThe team member must be performing in their role and not part of any performance management process as confirmed by the People Group\nMust be a full-time GitLab team member. This includes team members employed through a PEO or who contract with CXC or directly with GitLab IT BV\nAt least 3-month tenure at GitLab\nApproval from your direct manager and support to commit the time and to use this leadership role as a professional development opportunity\nA minimum one-year commitment in the role but understanding this may change to less and can be more\nSelection process\nInterested team members should complete the\nGiveLab Champions survey\nexpressing their interest\nTeam members must confirm that they have approval from their manager to participate\nThe Sustainability team evaluates interest at a minimum on a monthly cadence and will reach out to the interested individual for follow up questions\nGiveLab Champions\nBrenda Nyaringita (Engineering)\nMax Woolf (Engineering)\nYasha Rise (Engineering)\nRendi Miller (Finance)\nEmily Plotkin (Legal)\nKim Buncle (Legal)\nAlisha Ward (Marketing)\nDarwin Sanoy (Marketing)\nKristof Goossens (Marketing)\nNupur Sharma (Marketing)\nTess Dutton (Marketing)\nMichaela Seferian-Jenkins (Product)\nGitLab for Non-Profits\nGitLab launched\nGitLab for Nonprofits\n, an in-kind donation program in 2023. Through this program, GitLab supports Registered 501c3 (or jurisdictional equivalent) Nonprofit Organizations in good standing that align with our values by offering free licenses and seats. The program operates on a first come first served basis. Once the\nannual donation of 5,000 seats\nis met, the application will remain closed for the year.\nFAQs\nWhat are the benefits of the GitLab for Nonprofits program?\nGitLab is a single platform for project management, collaboration, source control management, git, automation, security, and much more. Because it is easy to use, flexible, and all in one place, it is the best choice for nonprofits to scale their work. The GitLab for Nonprofits Program gives free licenses of GitLab to registered nonprofit organizations.\nNonprofits accepted into the program will be provided a free Ultimate license for one year (SaaS or self-managed) for up to 20 seats. Additional seats may be requested although they may not be granted.\nWho qualifies for the program?\nGitLab supports Registered 501c3 (or jurisdictional equivalent) Nonprofit Organizations in good standing that align with our\nValues\n. A “Registered Nonprofit Organization” is one that has been registered with the local government or authorized agency within its applicable local, state, provincial, federal or national government.\nFor the calendar year 2024, we will limit the in-kind program to 5,000 seats, which was approved by finance and the board in the\nPhilanthropy Policy\n. Each organization will be eligible for up to 20 seats. This will allow us to assist as many organizations as possible. This will be revisited throughout the year and adjusted as needed. Interested organizations who are new customers may request additional seats although the request may not be granted. To limit churn, current GitLab customers that apply to transition to the Nonprofit Program will not be granted a special request above the 20 seats.\nWhat are the terms of the GitLab for Nonprofits program?\nUpon acceptance, program members are subject to the\nGitLab Subscription Agreement\n. The decision to issue a GitLab for Nonprofits license is always at the sole discretion of GitLab.\nHow does someone apply?\nInterested organizations need to visit the\nGitLab for Nonprofits\npage and submit the\napplication form\n.\nHow are applications processed?\nNonprofits apply on the\nGitLab for Nonprofits\npage. Once the application is submitted, the Nonprofit will receive a message and a link to TechSoup, our verification partner.\nThe Nonprofit will then need to log in or create their TechSoup account. TechSoup provides a rigorous vetting process to ensure the nonprofit is eligible for the GitLab for Nonprofits program and meets all requirements.\nIf a Nonprofit is verified, TechSoup will notify GitLab.\nGitLab will then undergo its own vetting and approval process.\nOnce all parties have verified and approved the Nonprofit, GitLab will send the instructions directly to the Nonprofit to redeem their license.\nIf a Nonprofit is not verified through TechSoup, TechSoup will provide details on how the Nonprofit can become verified.\nIf a Nonprofit is declined from GitLab, GitLab will notify the Nonprofit via\nnonprofits@GitLab.com\n.\nPlease allow up to 15 business days for the application and verification process.\nMust Nonprofits renew their memberships?\nYes. All nonprofits must renew their membership annually, which involves a re-verification process. Nonprofits will submit for renewal the same way they first applied for the program.\nWhere can members receive support?\nWhile GitLab for Nonprofits Program benefits do not include product\nsupport\n, program members can receive help with GitLab in a number of ways. In general, we recommend the following:\nSend questions or issues requiring immediate attention or sensitive information to the GitLab for Nonprofits team at\nNonprofits@GitLab.com\nReview\nGitLab Docs\nfor answers to general product-related questions\nPost questions in the\nGitLab Forum\n, where community members and GitLab team members can review and discuss them\nFile bug reports and breaking behaviors\nas issues\nfor product teams to review and address\nI’m a GitLab Team Member and I have a customer applying for the program. What do I do?\nPlease point the Nonprofit to the GitLab for Nonprofits page to learn about the program, eligibility and application\nIf the Nonprofit has questions on the eligibility or status of an application, please advise them to reach out to\nnonprofits@gitlab.com\n. Or team members can inquire about the status of an application in\n#esg\nIf you have a question or concern about the customer churn, please raise this in #gitlab-for-nonprofits slack channel and a Sustainability team member will contact you\nPhilanthropic Requests\nInformation on how GitLab Inc. supports Registered Nonprofit Organizations can be found in the\nPhilanthropy Policy\n.\nPlease note that for all Philanthropic Requests, including requests for GitLab to join as a member to an association, program or organization, approval by the Sustainability team and CLO is required as defined by the Oversight Responsibility section of the Policy.\nIf you would like to submit a philanthropic request, please follow the instructions based on your request type.\nMonetary Contributions\nThere are two ways that team members can submit a request for monetary support:\nRequest funding from the Sustainability team to support a Registered Nonprofit Organization OR (not currently accepting applications - see instructions below on submitting a non-profit for future consideration)\nRequest utilizing department or TMRG budget to support a Registered Nonprofit Organization\nIf you are requesting funding from the Sustainability team to support a Registered Nonprofit Organization, please note that at this time, we are not accepting applications. If you would like to submit a Nonprofit Organization to be considered for support in the future, please go to the\nPhilanthropic Requests epic\nand open a new issue using the\nMonetary_Support Template\n. You will be notified if there is a future opportunity.\nIf you have a department or TMRG budget that you would like to utilize to support a Registered Nonprofit Organization, please go to the\nPhilanthropic Requests epic\nand open a new issue using the\nMonetary_Support Template\n. Please tag your manager to approve the request if you are submitting on behalf of your department. If you are submitting a request on behalf of a TMRG or DIB, please add the DIB DRI as a reviewer. Please allow a minimum of 10 working days for review.\nThe team member submitting the issue is responsible for obtaining proper approvals and working with Accounts Payable to issue the payment. Please tag the individuals in the approver section of the issue. Once approvals are completed, the team member requesting the donation needs to obtain an invoice from the non-profit that contains the bank payment details and submit this to\nAP@GitLab.com\n.\nMembership Requests (non-monetary)\nFor requests related to GitLab Membership of Association, Program or Organization, and includes terms, conditions and/or obligations on GitLab that must be executed, please follow the below process. Open an\nissue using the Membership Request Issue Template\n. Complete and attach the necessary information. Note: If you are submitting a request on behalf of a TMRG or DIB, please add the DIB DRI as a reviewer.\nNOTE: For any request(s) that require payment, please be certain to follow applicable ESG & Procurement processes.\nMatching Gifts Program\nAt this time, GitLab does not offer a matching gifts program.\nEarth Month\nGitLab FY26 Earth Month Campaign\nGitLab Fiscal Year 2023 (FY23) ESG Report\nMessage From Our Chief Executive Officer Welcome to GitLab’s inaugural Environmental, Social, …\nSustainability Training\nSustainability Training for GitLab team members\nTeam Member Sustainability Guide\nGitLab's Team Member Sustainability Guide for Remote Work\nLast modified May 28, 2025:\nUpdating to include scope 3 target (\n4884ae30\n)\nView page source\n-\nplease\ncontribute\n.", "num_words": 4445}
{"doc_id": "ab08c57863d06d80", "url": "https://handbook.gitlab.com/handbook/tools-and-tips", "title": "Tools and tips | The GitLab Handbook", "text": "The Handbook\nTools and tips\nOverview\nThis page contains useful tips for working at GitLab and for various tools we use.\nGitLab tips\nChange your username at GitLab.com\nStarting point: let’s say your username is\nold-mary\nand you want it to be just\nmary\n.\nNote:\neach GitLab account is tracked by an\nuserID\n, which is a number stored in a database.\nIf we change the username, the userID does not change.\nAnd all the permissions, issues, MRs, and relevant stuff within GitLab are related to your\nuserID\n, not with your username.\nNote:\nif you are not a GitLab Team member, the same process applies except your e-mail (\n), which will be different (will not be @gitlab.com email), so you can replace it with your own email account.\nSTEP 1: Request your new username\nAs of this\nMerge Request\n, it is no longer possible to request a username via the\nNamesquatting process\n. If the username you wish to use is unavailable, you will have to pick a different one.\nSTEP 2: Create a new account with your new username\nIf support replies to you telling that the username is free to use, create a new GitLab.com account with it.\nUse a personal email to register your new account and choose one that has not been used with your old GitLab account.\nNavigate to your\nProfile Settings\n>\nEmails\n, and add a new email.\n⭐️\nTrick\n⭐️ If your email at GitLab is\nmary@gitlab.com\n, add the new email as\nmary+something@gitlab.com\n: this is a\nGmail trick\n! All your emails sent to this alias will end up in your GitLab email account 😃\nNavigate to\nhttps://gitlab.com/-/profile/notifications\nand choose the notifications email:\nmary+something@gitlab.com\n.\nOpen your old account in one browser and the new one in another browser (e.g., Chrome and Firefox, or Chrome and Safari) - log in to both accounts at the same time.\nSTEP 3: Let’s have some fun (kidding, this is critical!)\nNavigate to\nhttps://gitlab.com/-/profile/account\nin both your accounts.\nLook for your username.\nThis operation has to be done quickly, otherwise you are risking to lose your awesome new username to someone else quicker than you.\nWe need to\nswap\nthe usernames between both accounts, so you’ll keep all your history, your privileges, issues, and MRs assigned to you, etc.\nIf you work with 2 monitors, open each browser on one monitor.\nIf you don’t, open them side by side, so that you can keep an eye on both at the same time.\nRename your new username\nmary\nto something like\nmary-1\nand\nclick\nupdate username\nyet.\nRename your old username\nold-mary\nto your new username\nmary\nand\nupdate that either.\nJust leave them typed into the boxes.\nMake sure you did the previous step right!\n⚠️\n⚠️ Update the first one (\nmary\nto\nmary-1\n).\nImmediately, click\nupdate\non the other one (\nold-mary\nto\nmary\n).\nImmediately, rename the\nmary-1\nto your old one\nold-mary\nand click\nupdate username\nagain.\nTa-Da! 🙌\nSTEP 4: Move your projects (or not)\nNow, if you have any personal projects, you might want to import them to your new account (the one that has your old username now).\nTo do that, in your new account (the one with the old username), click\nCreate a New Project\n, give it the very same name as the original one, click\nGit - add repo by url\n, and paste the\nhttps://\nURL of your project there.\nTo make things easier, make sure all the projects you want to import are set to\npublic\nview.\nYou can make them private afterwards.\nIf you have GitLab Pages projects with the default\nGitLab.io\nurl, you will need to import them to you new account, then make a change to\ntrigger a build\nand redeploy your site.\nThey will be affected only if you’re using a\nCNAME with a subdomain instead of an A record\n.\nThis won’t affect Pages projects that use custom domains, as they all point to the same Pages server IP via\nrecord.\nYour groups won’t be affected either, as they operate under their own namespace.\nAdd both users as members of your groups and nothing changes.\nThat’s it!\nSTEP 5: Update your username in other places\nDon’t forget to update your username in the following places:\nteam page\nIf you’re part of Marketing,\nMarketing Handbook\nWorkday - GitLab Username under ‘Additional Data’ > ‘View all’ in your profile actions\nSTEP 6: Set up your notifications\nTeam members choose to manage their GitLab activities in different ways. Setup your notifications in a way that works best for you.\nTo-do list:\nall team members will see a\nto-do list\nwithin their GitLab account. This will track different action items. Items can be marked as done as they are completed.\nEmail:\nteam members can choose which, if any, notifications show up in their Gmail accounts by\nusing filters\n.\nSlack notifications:\nteam members can choose to enable\nSlack notifications\n. Please note that GitLab slack expires after 90 days, so this is not a tool for longer-term activity management.\nGitLab team members’ resources\nThe\nGitLab team-member resources project\nhas a wiki for sharing among\nGitLab team-members\n.\nIt’s for topics like parenting where people may want to share knowledge, but the handbook is not the best fit.\nGitLab team members’ setups\n@tipyn\n’s\nhome office equipment and macOS setup\nLinking Gravatar photo\nLink your GitLab email address to an easily recognizable photo of yourself on GitLab, Slack, and\nGravatar\n.\nIt is company policy to use a photo, and not an avatar, a stock photo, or something with sunglasses for any of your GitLab accounts, as we have a lot of GitLab team-members and our brains are comfortable with recognizing people; let’s use them.\nNote\n: If you upload your photo to Gravatar associated with your gitlab.com email, then you can simply not set an image in your GitLab and Slack profiles and they will automatically use your Gravatar photo.  If you already uploaded individual photos to your GitLab and Slack profiles, simply removing them will cause your avatar to use the Gravatar photo by default.\nUsing Mermaid\nMermaid is a tool that allows us to create flowcharts, graphs, diagrams, Gantt charts, etc. within GitLab! Check out the\nexamples in the GitLab docs\non how to use Mermaid.\nA few additional resources that can be helpful when working with Mermaid are:\nThe\nlive mermaid editor\nto check your work!\nGitHub’s Mermaid overview\nCSS color bank\nto add color to your charts.\nYou can see an example of how to add images to Mermaid charts\nhere\n.\nExamples of Mermaid charts that have been created by GitLab team members:\nTalent Development Program Chart\nby\nCassiana Gudgenov\n, People Compliance Partner\nCEO Year at a Glance\nData Infrastructure System Diagram\nAdvanced layout demos\nfor Mermaid diagrams\nthree back tick symbols\nfollowed by the word\nmermaid\nbefore the chart, and\nthree back tick symbols\nat the end of the chart. This will enable Markdown to distinguish between .md and Mermaid. Please reference the example Mermaid charts linked above to see how this looks live.\nVisual help to differentiate between GitLab servers\nIf you are working on multiple GitLab instances and want to have a visual differentiation, you can change the default\nNavigation theme\nto a different color.\nPage counts are determined through a simple two-step process:\nCount the number of words in the handbook.\nThis can be done by running\nfrom the root directory of the repository.\nSubmit the word count to\nWordCounter\nfor conversion to a page count.\nTrainee maintainer issue upkeep\nPart of the\nmaintainer training process\nis to keep track of Merge Request that have been reviewed and writing down an assessment on the review in the maintainer training issue.\nManual upkeep of the maintainer training issue can be time consuming. There are tools that others have built to help with this task:\nhttps://gitlab.com/nolith/review-tanuki\nhttps://gitlab.com/splattael/traintainer\nhttps://gitlab.com/arturoherrero/trainee\nhttps://gitlab.com/alberts-gitlab/review-tanuki\nhttps://gitlab.com/gitlab-org/gitlab-dev-cli#maintainer-trainee-helper\nNote:\nWhen using these tools, avoid adding mentions to maintainers in existing comments. There is a\nknown issue\nwhere users are not notified by email when mentioned in an edited comment. It only generates a TODO which a maintainer may not use.\nHandbook Tips\nRefer to the\nHandbook Development section\nto learn more about the architecture, structure and how to edit the handbook locally on your desktop. For how to edit the handbook in your browser, refer to\nthe editing handbook page\n.\nwww-gitlab-com Tips\nPortions of the\nhttps://about.gitlab.com\nsite lives in the\nwww-gitlab.com\nrepo. The marketing website is maintained by the\ndigital experience team\nin their\nGitLab group\n.\nThe\ndata/*.yml\nfiles live in the\nwww-gitlab-com\nrepository, and are used by numerous sites including the marketing website and the handbook.\nThe documentation for the site itself is in markdown documents under the\ndoc\nfolder in the repo\n. If you are looking to do local development on the site,\ndoc/development.md\nis probably the best place to start.\nImage and GIF tips\nMany of the tips shown in this section require ImageMagick, an image manipulation tool. The installation is described in the\nImageMagick section\n.\nImageMagick\nprovides the\nconvert\nCLI command which can be used to resize images, add drop shadows, edit GIFs, etc.\nOn macOS, install ImageMagick with Homebrew:\nbrew install imagemagick\nOn Linux, use your package manager:\nsudo dnf install ImageMagick\nsudo apt install imagemagick\nCreating GIFs\nWe have a\ndedicated section\nfor that in the handbook.\nResizing images\nImageMagick\nprovides the\nconvert\nCLI command which can be used to resize images. Our blog images do not need resolutions higher than 1920x1080. This saves bandwidth and makes the website load faster.\nThis example converts an existing image to\n1920x1080\nresolution and replaces it inline:\nconvert blogimage.jpg -resize 1920x1080 blogimage.jpg\nYou can also use percentage values for the\n-resize\nparameter. The\nconvert\nCLI command can do more things explained in the\ndocumentation\n.\nIf you need to convert multiple images, combine the\nconvert\ncommand with\nfind\n. Note that this replaces the images inline.\nfind . -type f -name\n'*.jpg'\n-exec sh -c\n'convert {} -resize 1920x1080 {}'\n\\;\nConvert HEIC to JPG\nTip: Modern macOS versions provide the Finder right-click menu\nQuick Actions > Convert Image\nwhich automatically converts an image to JPG. Use this method for quick UI conversions.\nImageMagick\nprovides the\nmogrify\nCLI command which can be used to convert the\nimage format to other formats like\nwhich are accepted on all websites.\nmogrify -format jpg icloudphoto.HEIC\nIf you need to convert multiple images, combine the\nmogrify\ncommand with\nfind\n. Note that this creates new files and requires manual cleanup of\nfiles,\n-iname\nuses a case insensitive match.\nfind . -type f -iname\n'*.heic'\n-exec sh -c\n'mogrify -format jpg \\\"{}\\\"'\n\\;\nAn example shell alias can be found in\n@dnsmichi’s dotfiles project\n.\nAdd drop shadow to images\nInstall ImageMagick\nand use the\nconvert\nCLI command to add a drop shadow. The\n-shadow\nparameter may need adjustments on the dimension.\nconvert input.png\n\\(\n+clone -background black -shadow 80x20+0+15\n\\)\n+swap -background transparent -layers merge +repage output.png\nTroubleshooting\n2FA debugging\nIf 2FA stops working unexpectedly (no new phone or computer) it’s usually because of improperly configured date & time on either device.\nMake sure that “Automatic Date & Time” is\nenabled\non both devices.\nIf they’re already enabled try toggling them off and on again to force an update.\nIf this doesn’t work, request that IT Ops reset your 2FA setting.\nLinks for finding the settings:\niOS:\nGet help with the date and time on your iPhone, iPad, and iPod touch - Apple Support\nmacOS:\nIf the date or time is wrong on your Mac - Apple Support\nLinux (using systemd):\nsystemd-timesyncd - ArchWiki\nFor Android there’s no definitive link, since most vendors have different UIs for their settings.\nBut in the Settings-app, look for “Date & Time” and there should be a “Automatic Date & Time” toggle.\nCheck which process occupies a given port\nUsing Netstat\nNetstat is a command line tool which can be useful to print network connections, routing tables, interface statistics, etc. One of the most common uses for netstat during troubleshooting is to display a list of open ports listening for connections.\n[\nuser@gitlab ~\n]\n$ sudo netstat -tulpn\ngrep -i listen\ntcp\n0\n127.0.0.1:5000     0.0.0.0:*     LISTEN     18948/registry\ntcp\n0\n127.0.0.1:9100     0.0.0.0:*     LISTEN     18841/node_exporter\ntcp\n0\n127.0.0.1:9229     0.0.0.0:*     LISTEN     18764/gitlab-workho\ntcp\n0\n127.0.0.1:8080     0.0.0.0:*     LISTEN     18980/unicorn maste\ntcp\n0\n127.0.0.1:9168     0.0.0.0:*     LISTEN     18808/puma 4.3.3.gi\ntcp\n0\n0.0.0.0:80         0.0.0.0:*     LISTEN     18831/nginx: master\nIf you find a port already in use, you won’t be able to successfully start up a service or program that utilizes that same port. Options to resolve are:\nStop the service currently running on the needed port and confirm the port is no longer in use\nReview documentation to determine whether it is possible to specify an alternate port for either process (the existing one or your new service)\nKnown Port Conflicts\nWhen the GitLab Development Kit cannot start using the\n./run\ncommand and Unicorn terminates because port 3000 is already in use, you will have to check what process is using it.\nRunning\nsudo lsof -iTCP:3000 -sTCP:LISTEN -n -P\nwill yield the offender so this process can be killed.\nIt might be wise to alias this command in your\n.bash_profile\nor equivalent for your shell.\nYou may also wish to add a function in your\n.bash_profile\n(or equivalent file for your shell) like this:\nfunction\nkillport\n()\n{\nlsof -i tcp:\n$1\nawk\n'(NR!=1) && ($1!=\"Google\") && ($1!=\"firefox\") {print $2}'\nxargs\nkill\n}\nwhich you can use like so:\n> killport\n3000\nand it will kill whatever process is currently using port 3000.\nTerminal\nDisplay current git branch in the console\nBy adding this small configuration you will be able to view the git branch that you are using currently.\nIf you are not inside a git repository, it only displays the username and the current directory.\nFor Bash:\nAdd the following lines in your\n.bash_profile\ngit_branch\n()\n{\ngit branch 2> /dev/null\nsed -e\n'/^[^*]/d'\n-e\n's/* \\(.*\\)/(\\1)/'\n}\nexport\n=\n\"\\u@\\[\\033[32m\\]\\w\\[\\033[33m\\]\\$(git_branch)\\[\\033[00m\\]\\$ \"\nDoing the following, makes the changes to get reflected in you current terminal:\nsource\n~/.bashrc\nFor Zsh:\nOn macOS Catalina, ZSH is the\ndefault shell\n.\nBy installing\nOh My ZSH!\n, the git plugin is automatically loaded and shows the current git branch.\nAnother option would be:\nAdd the following lines in your\n~/.zshrc\nparse_git_branch\n()\n{\ngit branch 2> /dev/null\nsed -e\n'/^[^*]/d'\n-e\n's/* \\(.*\\)/ (\\1)/'\n}\n=\n\"%n@%d~%f%\\$(parse_git_branch) %# \"\nThe changes will show on the next terminal or immediately by running.\n. ~/.zshrc\nShell aliases\nUse command aliases in your shell to speed up your workflow.\nTake a look at\nthese aliases\nand others in\nSid’s dotfiles project\n.\nFor example, by adding the following to your\n.bash_profile\nor equivalent for your shell, you can just type\ns\nto checkout the\nmaster\nbranch of this website, pull the latest changes, and open the repository in Sublime Text:\nalias\ngco\n=\n'git checkout'\nalias\ngl\n=\n'git pull --prune'\nalias\ngca\n=\n'git commit -a'\nalias\ngp\n=\n'git push origin HEAD'\nalias\nwww\n=\n'cd ~/Dropbox/Repos/www-gitlab-com/source'\nalias\ns\n=\n'www;subl .;gco master;gl'\nAfter editing, you can just type\ngca\nto commit all of your changes, followed by\ngp\nto push them to the remote branch.\nIf you are using\nOh My ZSH!\n, you can add custom aliases shown below. You can freely define the file name, only the suffix\n.zsh\nis important.\nvim ~/.oh-my-zsh/custom/aliases.zsh\nAn example can be found in\nMichael Friedrich’s dotfiles project\n.\nDelete local Git branches where remote branch was deleted\nIn order to delete local Git branches which are deleted on the remote server, you’ll need to combine the\n--prune\npull/fetch command with more commands.\ngit branch -vv\nlists all details of local branches, the followed\ngrep\nfilters for all marked gone in the default remote\norigin\nand prints the results with\nawk\n. This argument is passed into\ngit branch -d\n, and executed for all matching results. Note that\n-d\ndoes not delete unmerged branches.\nhas more impact but can accidentally delete branches.\n# Delete all remote tracking Git branches where the upstream branch has been deleted\nalias\ngit_prune\n=\nRun the command without the final deletion command to see the potential affected branches. Note that\n\\$1\nis shell escaped in the alias and needs to be executed as\n$1\n.\ngit fetch --prune\n&&\ngit branch -vv\ngrep\n'origin/.*: gone]'\nawk\n'{print $1}'\nDotfiles\nYou can use dotfiles to customize your system, and keep all configuration in a central place. The name\ndot file\nis derived from Linux/Unix where all configuration files started with a dot, hiding them from the default list view\nls\n.\nTeam member dotfiles projects:\nSid Sijbrandij’s dotfiles\nMichael Friedrich’s dotfiles\n, more details in\nthis blog post\nBrendan O’Leary’s dotfiles\nTraveling\nLong haul flights\nNote: you have to pay for these items yourself.\nQuiet comfort Bose over ear noise canceling headphones\n(so it doesn’t touch your dried out eyes)\nCustom molded ear plugs (can be up to $200 hearing aid store but are usable in many situations, there are also\nDYI kits\nbut Sid has not tried that)\nMelatonin (possible unsafe during pregnancy and breast-feeding)\nSleeping pills (over the counter is fine)\nWorkFrom\nis a crowd-sourced resource of coffee shops and other such places that are remote-work friendly.\nWi-fi usage\nWhen using unsecured Wi-Fi, consider a personal VPN.\nWe\ndon’t have a corporate VPN\nbut consider\npurchasing\na\npersonal VPN\nif you travel for GitLab or use unknown networks often.\nRemember that if your job has restrictions based upon geolocation (for example supporting customers with specific data restrictions and country-based access), a personal VPN may not be the best choice as often the VPN vendor routes traffic through other countries.\nIf this restriction applies to you, consider tethering.\nTethering\nis when you set up your mobile phone as a hotspot and connect your laptop up to it via Wi-Fi, avoiding the unsecured Wi-Fi network.\nThere is more information\nhere\non the subject, and as long as your data plan supports it, you should be good to go.\nDouble check before international travel, as it may be supported but have hidden costs.\nWhen connecting to a network with a\ncaptive portal\n, most websites will not load as modern sites use HTTPS, and captive portals interrupt that process.\nYour device will try and compensate for this, but it can be tough to manage manually.\nIf you have trouble, try connecting to\nhttps://captive.apple.com/\nfirst, which is intentionally only HTTP and will load the captive portal.\nFIDO2 / WebAuthn\nFIDO2 is a cryptographically strong 2FA (2-factor authentication) method. It is hardware-based, and is typically deployed via a USB, NFC, or built into a device such as a MacBook’s Touch ID or iPhone’s Face ID. The standard is open and is maintained by the\nFIDO Alliance\n.\nWebAuthn\nis a component of FIDO2 that supports verification by web applications using public key cryptography. FIDO2/WebAuthn is the preferred method of 2FA and is highly recommended by GitLab’s Security Department. One of the points of 2FA is that while you are authenticating with a username and password for the first factor, a secondary factor should use a separate - or “out of band (OOB)” - communication channel for the authentication. FIDO2/WebAuthn devices certainly meet that criteria, better than all other methods. There are other 2FA methods\noutlined below\n.\nHow it works\nDuring the authentication process, you enter in your username and your password. On systems with 2FA enabled and using FIDO2/WebAuthn, the hardware token is queried. By pressing a button or tapping a sensor on the FIDO2 device, the FIDO2 device completes the authentication process in a cryptographically strong way. It is generally considered the most secure form of 2FA. It is also more convenient than manually entering codes generated by a\napplication.\nDuring the registration of the FIDO2/WebAuthn device, a public/private key pair is generated, with the public key being registered with the service you will be authenticating with, and the private key is stored on a secure chip in the device. When authenticating, after you’ve entered in your username and password, the device is queried via an encrypted message that can only be authenticated by the private key, so a button or sensor is pressed on the device to allow the query to be completed, and the user is then granted access to the system.\nFIDO2/WebAuthn devices\nYubiKey: The most popular FIDO2/WebAuthn device is Yubico’s YubiKey. There are a wide variety of sizes and styles of YubiKeys. Yubico (along with Google) helped develop the predecessor to FIDO2 standard (U2F) before it was moved to the FIDO Alliance. Most GitLab team members that have WebAuthn devices have a YubiKey. It should be noted that for a long time Yubico’s source code for its firmware was open source, but some of the newer versions of firmware are closed source. This has caused some concern in the security community, particularly those that prefer to use open source whenever possible.\nAre They Secure?\nYubiKey has been examined by the security industry at large, third party audits and by the Security Team. YubiKey’s are more than suitable for use within GitLab and work fine with FIDO2/WebAuthn-compatible systems.\nYubiKey has had a number of\nsecurity issues\nwhich are typically resolved quickly. They have a dedicated page for security advisories.\nIn rare cases, a security issue involving a hardware token arises that requires the hardware token to be replaced as a firmware update will not mitigate the issue. This happened with\nYubico in 2017\n.\nMost of the attack models that impact the FIDO2/WebAuthn tokens require physical access to the token itself. That is, the security advisories involve coding issues that can only be exploited via access to the token or the computer that the token is plugged into. This in itself makes the devices more secure.\nRecommendations\nWhile there are other hardware tokens that are also decent and will function with GitLab, some have limitations. The recommended solution for team members is Yubico’s YubiKeys.\nPlease fill out this\nform\nbefore ordering a YubiKey, as we may be able to provide a YubiKey via our group buy subscription.\nRecommended YubiKey models include the YubiKey 5Ci (for iPhone users) and YubiKey 5 NFC (for Android users).\nWhat GitLab team members need to keep in mind is that if you travel with your company laptop - either on a business trip, a trip to visit family and friends in another location but you intend to keep working, or just a trip to the local coffee shop - treat the token with the same level of care as a credit card. Do not leave it where it could be stolen.\nIf you are concerned about potentially losing your hardware token, be sure to add\nTouch ID\nand potentially a\nmobile device\nas an accepted authentication token. Sites following the FIDO2/WebAuthn standard should support multiple tokens. That way if one is lost or stolen, you can still login use another method. Currently YubiKey’s are limited to one per user, in the case of lost or damaged, please reach out in the #it_security_help Slack channel and we’ll assist you with a replacement.\nUsage of 2FA is mandatory for GitLab team members.\nOther 2FA Methods\nIn addition to\nFIDO2/WebAuthn\n, there are additional protocols used for 2FA. There is “cryptographic push”,\n, and SMS-based authentication (text message). Pluses and minuses to each are listed below.\nCryptographic Push\nThis is usually shortened to simply “push technology”. It is called “push” because during the authentication process, after you’ve entered your username and password, the service you are authenticating with automatically “pushes” a secondary authentication via a separate communications channel to a device you possess. This is usually your phone, and it is facilitated via a phone app that is specific to that process. During the registration process a cryptographically-secure key pair is generated, and the app uses that key pair to uniquely identify the Push as coming from the service you are authenticating to. Typically the app then either directly notifies you or you access the app, which will pop up a message asking if you were in fact trying to authenticate. Answer yes and the authentication process is complete. GitLab team members may be familiar with this Push method as it is used by\nOkta Verify\n.\nPush Caveats\nThis method is not quite as secure as a hardware token, as typically those devices stores data securely on the secure chip on the device itself. It is possible that the Push phone app is also storing secret data on the local secure chip on the phone, however the entire process is dependent on the service’s servers being up, and WebAuthn is more self-contained. But note that Push technology is still considered extremely secure, and once configured it is fairly convenient to use.\nTimed-based One-Time Password is fairly secure. This method involves a rotating value based off of a cryptographic seed that is used to uniquely identify communication between the service and the end user authenticating. The value is (usually) a six digit number that changes every 30 seconds, and during the authentication process after you’ve successfully entered in your username and password, you are asked to enter in the value. GitLab team members should use\n1Password\nto manage TOTP codes.\nTOTP Caveats\nThe main problem with TOTP is that during this 2FA process it typically involves the end user entering in all values through a single communications channel (usually a web browser). As this is the case, it is possible that an attacker could send you a fake web page for you to enter in your credentials, including your TOTP value. Granted, the attacker would have to be reading your replies and sending in all of your credential information extremely quickly and get the entire process completed with 30 seconds so the risk is greatly reduced, but it still exists. Both WebAuthn and Push are preferred over TOTP, but as long as you are the one initiating the communication and you are not clicking on a link in email, you should be okay.\nOne of the more popular (and most common) methods of 2FA is SMS-based text messaging. It is similar to TOTP, but instead of using a locally-stored application to calculate the six digit number, the service you are authenticating to sends the six digits to you via an SMS text message. When you set up your account, you provide the service with your cell phone number so they know which phone number to send the six digits to.\nSMS Caveats\nDue to the number of caveats, SMS is only recommended if there is no other 2FA option available. Here are the main problems with SMS messaging.\nSMS is subject to the same phish-style attack as TOTP. The main difference is that some SMS-based authentication schemes time out after 60 seconds instead of 30, making the phish-style attack slightly easier for the attacker.\nThe information regarding your phone number is stored on a SIM card in your phone. If an attacker with physical access to your phone were to steal the SIM, they could impersonate you from their own phone. Of course they could do the same thing with your hardware token, however they would still need your username and password to use the hardware token. Unfortunately, calling up the service and asking for your password to be reset is often confirmed using SMS messaging, so with the possession of the SIM card, the attacker could pose as you. Again, if you treat your phone the same way you treat your credit card or cash, then this type of attack is minimized.\nAn attacker could contact your phone carrier, impersonate you and state you lost your phone, and set up a new SIM card. Unfortunately many times your account is protected with a security question such as “mother’s maiden name”, “favorite restaurant”, or some other simple question - all information that could be determined from a website that does family trees or via social media where you post pictures of your dinner.\nAn older attack known as “\nSIMJacker\n” allowed an attacker to send your phone an SMS message with a malicious payload that allows for direct manipulation of the SIM card itself. This attack still works on older SIM cards, although more modern SIMs are no longer vulnerable to this. Most of the known attacks using SIMJacker involved Latin and South America, the Middle East, Northern Africa, parts of Eastern Europe, and parts of Southeast Asia.\nIf You Must Use SMS\nThere may be services that only offer SMS as their 2FA solution, so in those cases it is better than nothing. If this is the case, there are a few things you can do to secure things ever so slightly.\nIf you have an old phone (5+ years old) you might want to consider upgrading the SIM to a recent one, as these are not susceptible to the SIMJacker issues.\nContact your phone carrier and ask if there are additional security measures to protect your account besides security questions, such as a PIN. In lieu of that, you could also try setting your mother’s maiden name or family pet security questions to something more, shall we say, unique (e.g.\nHdyla86kajDF64asdlui\n).\nSet a SIM PIN. For iOS devices, follow these\ninstructions from Apple\n. For Android devices, start with\nthese instructions\nbut contact your phone’s manufacturer website if the instructions do not fit your particular model.\nComplain to the service to offer more than just SMS for 2FA! The more complaints they get, the more likely they might be to offer more secure options.\nAdditional 2FA Concerns\nRemember the purpose of 2FA - it is a secondary authentication method, invoked after the primary authentication method has succeeded. You should only acknowledge a 2FA request if you personally have just successfully completed the primary authentication. An unsolicited 2FA request means someone has your password, and is in the process of trying to log in as you. This is why 2FA exists, to help protect your user account from attacks involving your password.\nIf you experience any such irregularities, please bring it to the attention of the Security Team. For more information, review the handbook regarding\nSecurity Awareness\nSlack\nThere is a lot of information pertaining to Slack, as it is a critical part of GitLab’s communication. See the\nSlack handbook page\n.\nZoom\nThere is a lot of information pertaining to Zoom, as it is a critical part of GitLab’s\ncommunication. See the\nZoom handbook page\n.\nThe\nGoogle Calendar\ninvite is the single source of truth for the Zoom link. Avoid linking the Zoom link in Google Document agendas since those may quickly become out of date. If the zoom link changed around the start of the meeting it is OK to have it in there temporarily.\nGoogle\nNeed a new document or new slide deck quickly? Use shortcuts like\nhttps://doc.new\nor\nhttps://slide.new\n. The full list (not even restricted to Google products) is available at\nhttps://whats.new/shortcuts/\n.\nGoogle Docs\nGoogle Docs Pro Tips\nQuickly create a new Google Doc in chrome: type “docs.new” in the chrome address bar.\nLikewise “sheets.new” for a Google Sheet etc…\nWhile in a document with many other editors, click on the image or icon of any user at the top of the document to move focus to their cursor and what they are typing in the document.\nThis is great when someone is speaking about something they are typing on a video call and you are not sure where they are in the document.\nQuickly find all action items assigned to you with a\nsearch for\nfollowup:actionitems\n.\nTo add additional rows to a numbered list in a Google Document, press\nReturn\nto add additional spaces under the existing numbered list in the document, highlight those spaces, and click the numbered list icon in the formatting bar (or press\nCommand ⌘ + Shift + 7\non a Mac) to create a numbered list from the spaces. See video on\nhow to add more rows to a numbered list\nfor a quick tutorial.\nType the\n@\ncharacter to quickly embed today’s date, other document titles, references to people, and more; without clicking anything (a menu will pop up). See details in the\nSmart Canvas\nblog post and the\nAdd items with the @ menu\nsupport doc.\nEmoji live-search\ncan be accessed by typing\n@:\n, or shorter using the\n:\ncharacter. Start typing to search for an emoji and press enter to insert.\nPageless docs are great for documents you don’t intend to print, and is the\npreferred format at GitLab\n. You can\nswitch in File > Page setup\n.\nSee also\nLive Doc Meetings\nfor more Google Doc tips.\nGoogle Analytics\nGoogle Analytics (GA)\nis an essential tool for making data-driven decisions.\nIt receives data from both about.gitlab.com and docs.gitlab.com websites.\nRead through the\nGoogle Analytics Handbook\nfor more information on GA.\nFor example, you can look at the GA data to analyze how visited is a certain page, in a period of your choice.\nYou can also look at the GA referrals data to understand where the users are coming from and where they go when they leave a certain page.\nSet your picture in Google\nOptional:\nSet your picture\nin Google so that your picture will show where you are in a Google document (vs showing just your first intial). This will allow others to more easily follow a discussion when meeting attendees move around in a document.\nAdd name pronunciation in Google\nConsider adding a phonetic pronunciation of your name and/or a pronunciation recording in your Google profile.\nClick on your profile icon on the top-right of any Google account page (i.e. Google Docs, Google Sheets)\nSelect “Manage your Google account”\nOn the left-hand side panel, select “Personal info” » on the center of the page, go to “Name & pronunciation”\nAdd a recording or a phonetic pronunciation e.g. Rochana (Rosh-ah-na)\nGoogle Calendar\nFinding a time\nPlease make use of the Find a Time tab in Google Calendar, especially when scheduling events with teammates in other parts of the world:\nFind a Time presents a new or existing event’s time for all participants, adjusting for time zones as appropriate.\nTo use Find a Time:\nCreate a new event or modify an existing event.\nClick the “Find a Time” tab. Invited guests will be presented in the availability table and represented by a column.\nAreas outside of someone’s working hours (9:00 AM - 5:00 PM by default) are represented in light grey.\nGuests who are optional will not appear in the availability table by default.\nYou can add them by checking their name in the “Guests” area on the right hand side.\nFor meetings spanning across multiple time zones and with external parties,\nTime & Date Calculator\ncan help determine the best time to schedule.\nGitLab availability calendar\nThe GitLab Availability Calendar has been deprecated to allow for GitLab to scale effectively.\nWe have created\ntools and tips for managing your time off\n.\nSetting working hours & location\nTo help other team members to schedule meetings with you, you can set your normal\nworking hours & location in Google Calendar\n. The preferred times will show up when someone tries to schedule a meeting with you.\nTo set your working hours, go to\nSettings\n->\nGeneral\n->\nWorking Hours & Location\n.\nWorking location\ncan be set here or on your calendar directly by clicking on the pill in the\nAll day\nrow. In Settings there’s a helpful\nCopy to all\noption as well.\nSince all GitLab Team Members work remotely\nHome\ncan be an ambiguous choice as folks may travel and it doesn’t provide any context on timezones. If you’d like, you can choose\nSomewhere else\n(in Settings) or\nEdit pencil\n->\n+\n->\nAnother location\n(from the pill) to set this to something such as\nCity, State, Country (GMT-#)\nand keep it up to date when traveling or timezones shift, which can help folks with planning and understanding timezones.\nGitLab Team Meetings calendar\nThe GitLab Team Meetings Calendar is available to all team members and can be found in your calendars list after it’s added. To add the GitLab Team Meetings Calendar to your list of calendars:\nGo to\nyour calendar\nScroll the left sidebar down to\nOther calendars\nPress on\n+\nSelect\nSubscribe to calendar\nEnter in the search field\ngitlab.com_6ekbk8ffqnkus3qpj9o26rqejg@group.calendar.google.com\nand then press enter on your keyboard\nPlease reach out to a People Connect Team member if you have any questions. NOTE: Please do NOT remove any meetings from this calendar or any other shared calendars, as it removes the event from everyone’s calendar.\nYou can find the details for the Company Calls, Group Conversations, 101s, and other teams’ meetings here, so you can attend a different teams’ meeting and ask questions, learn about what they’re working on, and get to know the rest of the GitLab Departments and teams.\nThese meetings are open to everyone in GitLab.\nIf you are creating a new team meeting, please\nadd it\nto the GitLab Team Meetings calendar\nPlease reach out to the People Connect Team in the\n#people-connect\nSlack channel with any questions, requests or changes to the GitLab Team Meetings calendar.\nAdding an event to the GitLab Team Meetings calendar\nCreate your calendar invite\nAdd your Zoom link\nAdd an agenda or relevant content\nUnder Add Guests, add\nGitLab Team Meetings\nin addition to anyone else you want invited (if you want the entire company invited please use everyone@).\nNote:\nThis will appear like adding a room, which is expected\nManaging invite responses\nIf you are familiar with queries in Gmail, add a filter to remove invites responses from your inbox with the following query:\n*.ics subject:(\"invitation\" OR \"accepted\" OR \"rejected\" OR \"updated\" OR \"canceled event\" OR \"declined\") when where calendar who organizer\nYou can also create a filter to remove ALL invite responses from your inbox with the following search terms:\nSubject: “invitation” OR “accepted” OR “rejected” OR “updated” OR “canceled event” OR “declined”\nHas the words: *.ics\nThen click Create filter:\nSkip the Inbox\nApply the label (of your choosing)\nModifying events\nPlease click ‘Guests can modify event’ so people can update the time in the calendar instead of having to reach out via other channels.\nYou can configure this to be checked by default under\nEvent Settings\n.\nNotifications\nYou can change the default notification settings by calendar (add or remove notifications for all-day events, add a second default notification to all events…). This is accessible through Settings ->\nSettings for my calendars\n-> pick the calendar ->\nEvent notifications\nand\nAll-day event notifications\n.\nIf you change the default notifications, all existing events will inherit that as well (unless their notifications have been customized).\nRestore deleted calendar items\n(This assumes you are using\nGoogle’s new Calendar\n).\nWhen you have accidentally deleted something from the Team Meetings calendar, you can recover it by:\nGo to\nGoogle Calendar\nand click the gear icon at the top left of your screen.\nChoose the\nTrash\n.\nMake sure you are on the correct calendar, by clicking on the name of the calendar in the left sidebar.\nHover over the item you’d like to restore and click the arrow to “Restore”.\nShow declined events\nWe recommend enabling the ‘Show declined events’ setting if you are unable to attend a meeting but will still contribute to the agenda or attendance list asynchronously. Use this setting if it’s helpful for you to see declined meetings in your calendar view for any other reason.\nNavigate to\nEvent settings\nCheck the box for ‘Show declined events’ under ‘View options’\nSharing\nWe recommend you set your Google Calendar access permissions to ‘Make available for GitLab - See all event details’. Team member calendars should\nnot\nhave access permissions set to ‘Make available to public’ due to the risk of sensitive data exposure and\nzoombombing\n.\nConsider marking the following appointments as ‘Private’:\nPersonal appointments\nConfidential & sensitive meetings with third-parties outside of GitLab\n1-1 performance or evaluation meetings\nMeetings on organizational changes\nThere are several benefits and reasons to sharing your calendar with everyone at GitLab:\nTransparency is one of our values and sharing what you work on is in line with our message of “be open about as many things as possible”.\nDue to our timezone differences, there are small windows of time when our availabilities overlap.\nIf other members need to schedule a new meeting, seeing the details of recurring meetings (such as 1-1s) will allow for more flexibility in scheduling without needing to wait for a confirmation from the team member.\nThis speaks to our value to be more efficient.\nWhen setting up your Google Calendar be sure to\nset your working hours\n.\nIf you’d like to share your calendar with e.g. your partner you can use the ‘Share with specific people’ feature and set the permissions to ‘See only free/busy (hide details)’:\nSpeedy meetings\nEnable speedy meetings to automatically provide a buffer at the end of events you schedule.\nThis thoughtfully allows participants with back-to-back events the opportunity to use the restroom or grab a cup of coffee without being late to their next function.\nWorld clock\nAdd as many time zone world clocks as you wish by, in Google Calendar, going to\nSettings -> World Clock\nin order to see team members’ local times.\nYou can also use sites like\nTimeAndDate\nto convert times to/from UTC for example.\nTime zone\nCheck\nDisplay secondary time zone\nand select\n(GMT+00:00) Coordinated Universal Time\n(UTC). This enables team members to standardize on a single time zone in communicating when meetings take place.\nGoogle Cloud Platform\nSee the\nSandbox Cloud page\nfor a listing of cloud resources and how to gain access to them.\nGoogle Drive\nFirst, an important message - Don’t use Google Drive/Apps (unless you have to)\nWe would be remiss if we didn’t start this section off with this IMPORTANT message:\nYour default storage place for information that needs to persist and be available to others in the company should be ON THE WEBSITE/IN THE COMPANY HANDBOOK and not in Google Drive and Google Apps files!!\nThis is from the top.\nThis is how we operate, because Google Docs/Apps can only be found and contributed to by team members, and not by users, customers, advocates, future employees, Google handbook searches, or developers.\nDo not link directly to Google Drive/Apps\nHaving said that, there is content which doesn’t make sense to be created on the website directly (e.g. large collections of data in tables, spreadsheets for calculations, etc) or for which Google Drive storage makes sense.\nWhen directing folks to these files in Google Drive please include name of the file in the handbook so that team members can search for it in Google Drive. If you link directly to the URL, people from outside the organization can request access, creating workload and the potential for mistakes.\nKeeping it organized\nIt is important that we not just throw files into random or general places in the shared Google Drives.\nDoing so makes it harder for others to find and work with the content.\nHere are some guidelines to organizing the Google Drive content:\nFirst by department (e.g. strategic marketing)\nthen by subject (e.g. analysts relations)\nthen by sub-subjects as deep as necessary (e.g. Gartner -> 2018 ARO MQ)\nUsing Google Drive\nFor starters, when your GitLab Google company account is created you automatically get a Google Drive with unlimited storage allocation in your own “home” directory (called My Drive).\nYou can get to it by:\n(optional) Login to your GitLab account in your browser (if you are using Chrome)\nOpen your web browser to\nhttps://drive.google.com\nIf you’re not already logged in as your GitLab account (Chrome users should be) then login to Google using your GitLab account\nThis will take you to your Google Drive (called My Drive) which is like your home directory.\nIf you create Google files using Google Apps and don’t specify where to store them, they will be put in this home directory.\nThis is great for storing your own working files.\nAs already stated,\nthis should never be the final resting place for shared files\nthat are meant to be used by the rest of the company (or beyond).\nExisting GitLab Google Drive repositories\nThere are a few Google Drive repositories of GitLab shared files (there might be more, please add if not listed here):\nUX Research Drive\n- This houses all findings from\nCustomer Discovery Meetings\nand raw, confidential materials from customers shared with Design, UX Research, Product and Customer Success. Distilled findings from\nUser Research\nare stored in the\nUXR_Insights repository\n.\nGitLab Marketing Drive\n- This houses all shared files from the entire Marketing organization.\nThe best practice is for sub-organizations to have their own directory inside this space (e.g.\nStrategic Marketing\n).\nSales Drive\n- This houses all the shared files from the Sales organization.\nThe best practice is for some sub-organizations to have their own directory inside this space (e.g.\nCustomer Success\n).\nGitLab Alliance Drive\n- This houses all shared files from the entire Alliance organization.\nThe best practice is for sub-organizations to have their own directory inside this space (e.g.\nPartner Discussions\n).\nHow do you use these? You don’t have to remember these URL’s.\nTo add these links to your Google Drive My Drive directory, do the following:\nMake sure you are logged into your GitLab account in Google Drive in your browser\nOpen the link of interest (from above) to go to that directory\nFind the directory path across the top (under the “Search Drive” field)\nFind the name of directory in that path that you want to add to your drive (e.g. Sales)\nClick on the down arrow next to it\nFrom the resulting pop-up menu, select “Add to My Drive”\nFrom now on you can get to that directory by first going to your drive (\nhttps://drive.google.com\n) and then opening that link\nAdding Google Drive to your Mac\nTo really make your Google Drive easier to access, you can have your Google Drive show up on your Mac Finder as a regular drive.\nWith this it is easier to store and view files such as videos, analyst reports (PDFs), etc.\nHere’s how to do this:\nMake sure you are logged into your GitLab account in Google Drive in your browser\nGo to your Google Drive (\nhttps://drive.google.com\n)\nClick on the “Settings” icon (Gear) to the right of the search field\nFrom the resulting menu, select “Get Drive for desktop”\nIt might pull up a new page/tab and use your personal login.\nIf it does this you won’t see “Download & install Drive for desktop” on the page.\nSwitch to your GitLab account.\nDownload and install\nGoogle Forms\nUse these\nGitLab branded form templates\nwhen creating internal or external surveys or forms.\nMake a copy of the form and only edit the copy; do not edit the template itself.\nReview\nwhat data privacy means at GitLab\n. Help participants make informed decisions by applying the following guidelines:\nFor external forms\n: State that any Personal Data collected will be processed in accordance with the\nGitLab Privacy Statement\n.\nFor internal forms\n: Ensure that the purpose for collecting data is stated under our\nTeam Member Privacy Policy\nand that this purpose is made clear to Team Members.\nDon’t make Personal Data form fields mandatory unless they’re absolutely necessary to achieve the processing; any inessential Personal Data collected should be through a voluntary form field.\nOnly process Personal Data for the reason in which it was initially collected e.g., if the Google Form collected traveler information, don’t then use that Personal Data to create a marketing list.\nGoogle Mail (Gmail)\nAuto-advance\nIf you use the archive function, you normally return to your overview.\nWith Auto-advance you can select whether to advance to the next or previous message.\n“Auto-advance” can be enabled from the Advanced section under Settings.\nThis reveals the Auto-advance settings in the General section under Settings.\nThe default setting of showing the previous (older) message is usually preferred.\nEmail signature\n-Set up an\nemail signature\nwhich includes your full name and job title so people can quickly know who you are and what you do.\n-It is also an option to add your\npersonal pronouns\nto your email signature.\nExample\nNote: You can copy and paste the template below to use it in your own signature.\nAlex Doe (they/them)\nEmail signature if employed by our German entity\nDuring onboarding you may have been asked to set up your GitLab Gmail and your email signature using the\nfollowing example as a guideline\n. If you are employed by our German entity, you will need to add some company related details to the end of your email signature as set out\nhere\n(\naccessible internally to GitLab only\n).\nAdd company details to certain company communications if employed by our German entity\nCertain company details are required to be added as a signature to the forms of communication listed below, where that communication is going from a team member employed by our German entity GitLab GmbH to outside of the company, and relates to GitLab’s business activities:\norder forms\nphysical mail\nfax\npostcard\nemail\nTwitter\nZendesk\nother electronic communications\nIf you are sending such a communication, externally, please look at the setting of the relevant application and add the company details below to the end of the communication. If you are in doubt, please do add the details. If you are unable to add this information for any reason, please alert\nlegal-employment@gitlab.com\n.\nIf you are employed by our German entity you may have been asked during onboarding to set up your signature wherever it’s required to be used and to include certain company details, and if you have not been, please do so now, as set out\nhere\n(\naccessible internally to GitLab only\n).\nFilters\nApply label on mention\nIt might be useful to add a Gmail filter that adds a label to any GitLab notification email in which you are specifically mentioned, as opposed to a notification that you received simply because you were subscribed to the issue or merge request.\nSearch for\nfrom:(gitlab@mg.gitlab.com) \"you+have+been+mentioned+on\"\n.\nClick the down arrow on the right side of the search field.\nClick\nCreate filter with this search\n.\nCheck\nApply the label:\nand select a label to add, or create a new one, such as “Mentioned”.\nCheck\nAlso apply filter to matching conversations\n.\nClick\nCreate filter\n.\nApply label when assigned as reviewer\nYou can create a Gmail filter that adds a label to any GitLab notification email in which you are assigned as a reviewer:\nSearch for\nfrom:(gitlab@mg.gitlab.com) \"(Reviewer) (Firstname Lastname)\"\n.\nClick the down arrow on the right side of the search field.\nClick\nCreate filter with this search\n.\nCheck\nApply the label:\nand select a label to add, or create a new one, such as “Assigned”.\nCheck\nAlso apply filter to matching conversations\n.\nClick\nCreate filter\n.\nApply label when MR is merged\nYou can create a Gmail filter that adds a label to any GitLab notification email in which an MR has been merged:\nSearch for\nfrom:(gitlab@mg.gitlab.com) \"Merge Request\"+\"was merged\"\n.\nClick the down arrow on the right side of the search field.\nClick\nCreate filter with this search\n.\nCheck\nApply the label:\nand select a label to add, or create a new one, such as “Merged”.\nCheck\nAlso apply filter to matching conversations\n.\nClick\nCreate filter\n.\nApply label to all GitLab-generated emails\nGitLab issues and merge requests can generate a lot of email notifications depending on your settings and how in-demand your attention is.\nIt can be useful to apply a label to these generated emails and move them out of your immediate inbox.\nSearch for\nfrom:gitlab@mg.gitlab.com\n.\nClick the down arrow on the right side of the search field.\nClick\nCreate filter with this search\n.\nCheck\nSkip the Inbox (Archive it)\n.\nCheck\nApply the label:\nand select a label to add, or create a new one, such as “GitLab.com”.\nCheck\nAlso apply filter to matching conversations\n.\nClick\nCreate filter\n.\nYou can learn more about how to use Gmail filters to organize your inbox in\nProductivity Hack video\n.\nTo import downloaded\nfilter export\ngo to Gmail => Settings => Filters and Blocked Addresses => Import filters.\nKeyboard shortcuts\nKeyboard shortcuts only work if you’ve turned them on in Gmail Settings.\nSteps below:\nIn “Settings” scroll down to the “Keyboard shortcuts” section\nTurn Keyboard shortcuts “on”\nScroll down and Save Changes\nHere are some shortcuts you can use\nSplit screen\nList your inbox and preview mails in one view with this configuration change:\nCog/settings top right of inbox.\nSettings option.\nInbox tab\nReading pane: enable\nSelect a position for the reading pane, Right of Inbox or Below Inbox\nSave changes\nReload inbox\nInbox Zero\nTo utilitze Gmail to it’s full potential, consider adopting the\nInbox Zero\nstrategy. It’s the same way Google employees use Gmail.\nThere’s also an internal training recording about this. It goes into more details and more “power user” focused, covering keyboard shortcuts, etc.\nVideo\n(It’s set to private, so log in with GitLab Unfiltered to watch it: upper right corner > click on your profile picture > switch account > GitLab Unfiltered)\nMeeting notes\nDisable Google Meet and Chat in Google Mail\nThe integration for Google Meet and Google Chat is enabled by default. It can consume too much space in the left menu listing mailbox folders. In order to disable the integration in Google Mail, navigate to\nSettings\nat the right top,\nSee all settings\n,\nMail and Chat\nand select the following:\nChat:\nOff\nMeet:\nHide the Meet section in the main menu\nSave the changes and wait for Google Mail to reload.\nGoogle Slides\nUse this general\nGitLab Slide Template\nwhen creating slide decks for internal and external use.\nMake a copy of the slide deck and only edit the copy; please do not edit the template itself. To avoid potentially editing the source deck, you can go to the\nTemplate gallery\nand click on the\nGitLab Slide Template vYear-Month\nto quickly make a copy and begin a new deck. Ensure that all pages in the slide deck are numbered, with the title page always being number 1.\nSales slide decks\nSlide decks are available in\nHighspot\nin\nGitLab’s Official Sales Deck Library\n.\nGoogle Jamboard\nJamboard is a collaborative whiteboarding platform, accessible at\nhttps://jamboard.google.com/\n. The results are persisted in Drive and are shareable like any other object.\nGoogle Chrome\nSearch and find things by typing words from document/issue/etc page titles into the urlbar (anything that appears in the page title). The search is “best effort” but surprisingly efficient at finding that doc or issue you’ve accessed recently.\n“Search engines” help even more! Typing “drive” and pressing Tab, for example, searches in Google Drive. To discover and customize them, go to\nSettings > Search engine\n.\nPractice\nChrome keyboard shortcuts\n. Here are a few common helpful shortcuts:\nJump to the address bar:\ncmd l\nCreate a new tab\ncmd t\n, close a tab\ncmd w\n, undo close tab\ncmd shift t\nOpen new incognito window:\ncmd shift n\n(e.g. to reproduce a UI bug, or login problem)\nSearch all opened tabs:\ncmd shift a\nHide the bookmarks bar:\ncmd shift b\n(e.g. for screenshots, or shared screen presentations)\nOpen the developer tools:\ncmd option i\n(e.g. for debugging website errors)\nYou can\norganize tabs into tab groups\n, assign names and custom colors, and collapse or reorder them. Moving tabs between groups also works across browser windows.\nLogging in to the browser (with your GitLab Workspace account) preserves\nyour profile across installations\n. This is helpful to migrate bookmarks, extensions, and configuration\nwhen refreshing your laptop\n.\nChrome Performance Settings\nEnable the\nmemory saver\n. This will pause inactive tabs and reduce memory consumption.\nEnable the\nenergy saver\n. This can help extend battery life by telling Chrome to reduce background task activities.\n1Password and Environment Variables\nAI at GitLab Tips\nEditors and IDEs\ngit\nLinux tools and tips\nmacOS tools and tips\nMermaid Layouts\nOther apps\nPersonal VPN\nRuboCop\nSearching GitLab like a pro\nSlack\nZoom\nLast modified July 9, 2025:\nGoogle tag manager handbook (\n7a73052e\n)\nView page source\n-\nplease\ncontribute\n.", "num_words": 9475}
{"doc_id": "568682b6b311a9e5", "url": "https://handbook.gitlab.com/handbook/ceo", "title": "CEO | The GitLab Handbook", "text": "The Handbook\nThis page details processes specific to Bill Staples, CEO of GitLab.\nWhy I’m at GitLab\nI love software. I love developers. In my lifetime, I’ve seen software change every aspect of modern life. I believe we’re still in the early stages of software transformation, and AI will accelerate how software changes the human experience in the coming decade. There has never been a better time in history to be in the software business and serving developers. GitLab is a strategic asset for the companies we serve because we provide the platform they use to create software experiences for their customers. As we serve developers and improve their work and lives, our positive impact is amplified through them, ultimately reaching billions of people around the world in profound ways.\nI am honored to lead GitLab as CEO. It is the climax of my career after nearly 30 years of serving developers. I am committed to maximizing our impact in service of customers, shareholders, and team members. I am competitive, and I want to win. Winning begins with delivering software to our customers, creating positive results they can’t get any other way, and continuing to do that in a rapidly expanding and evolving market. That means innovation. It also means driving results for customers as our first priority. It means continuing to focus on responsible growth and performing in an elite class, one of the very few who are the very best in the world for the categories we compete in.\nThis README is meant to help anyone who needs to work with me by providing a brief overview of what is important to me.\nMy Personal Values\nIntegrity:\nTrust is the most important thing in any relationship. Trust is knowing you can count on me to say what I mean and do what I say. I try to live my life in strict adherence to this value, and when I fall short, I try to proactively and openly acknowledge and recommit. My single biggest ‘hot button’ issue is when someone does not follow through on something they said they would do.\nCurious:\nI try to live what many call the “growth mindset,” which means that I’m always learning, striving to improve, and iterating to be better. I feel very imperfect and self-critical on the inside, and I constantly strive to learn as much as I can while appreciating that I can’t know it all. I’m open and accept constructive feedback from anyone, anytime.\nResults:\nGood ideas, hard work, and fun on the job are all important, but ultimately, our results are what matters. I care far more about outcomes than effort. I strive to do everything at a high standard of excellence, and I’m never satisfied with the status quo. I seek people who are equally committed to being world-class.\nMy Super Powers - how you can get the best from me\nPassionate\n- I work for causes and missions and pour my heart into them. My brain is highly analytical, detail-oriented, and (usually) pretty fast, but my heart is equally important to understand me: I feel things deeply and try to help others around me both see the possibilities and feel motivated and inspired to strive toward what others may not think possible.  I am passionate about my work. It is not just a job for me. It is where I find meaning, purpose, value, and how I contribute to the world.\nCuriosity\n- I ask a lot of questions and like to absorb information quickly. I like being surrounded by people I can learn from and collaborate with. I often see patterns and synthesize disparate points of information to help others make sense of the work and align on a direction.\nWork Ethic\n- From my early life, I have always worked very hard and enjoyed it (most of the time). I especially enjoy “the struggle,” solving complex problems, grinding on hard issues, and rising above roadblocks. George Bernard Shaw once wrote, “I want to be thoroughly used up when I die, for the harder I work, the more I live.”\nMy Weaknesses - double-edged swords are real\nPassionate\n— I sometimes come across as emotionally charged, overly critical when we fall short of goals, or emotional when something touches my heart. I don’t smile enough on the outside (even though I’m generally pretty happy on the inside—because solving problems is fun to me!).\nHow to help me manage this: It depends on the situation. There is a time to be serious, but it is also possible to overdo it. Try smiling to remind me that I can lighten the mood. A well-timed joke is always helpful, and feel free to ask with a smile, “Are we having fun yet?” to make me think.\nCuriosity\n- I sometimes exhaust people with my many questions and drill-in tendencies. As I’m a genuinely curious person and care about all parts of the business,  I regularly do this, and it is not always an indication that something is off.\nHow to help me manage this: Come prepared for meetings. If you don’t know the answer, let me know and be clear on when you will follow up. If you have concerns about whether my drilling affects your performance, let me know so we can discuss it.\nWork Ethic\n- Occasionally, people struggle to keep pace with my style of work.\nHow to help me manage this: let me know if you are struggling so we can discuss it.\nSuggestion: If I am negatively impacting you, I welcome constructive feedback and will do my best to moderate my approach.\nMy Expectations of Everyone (including myself)\nCollaborate\n- By default, I expect everyone to actively work with their teams, peers, and leaders, as well as customers, partners, and investors (as applicable), to identify the “absolute best” ideas, no matter where they come from. I hire and retain leaders who I believe are experts in their functions and whom I feel personally excited to work with and learn from. Still, I also believe the best leaders actively learn from and incorporate good ideas from everywhere. I expect E-Group members to have similarly high expectations for team members.\nAccountability\n- By default, you are trusted to do your job, and I believe part of everyone’s job is to communicate expectations, set metrics and targets, and meet them. Along the way, the single most powerful way to ensure expectations are managed and met is to discuss or “inspect” the work regularly. This powerful tool\ndoes not\nrepresent a lack of trust or micromanagement; when done right, it ensures the best ideas are being pursued, surprises and roadblocks are rapidly identified and removed, and outcomes are maximized. I like creating operating rhythms that enable automated inspection and collaboration opportunities for every mission-critical initiative on a regular basis.\nSelfless\n— The very best leaders I know are smart and driven, and they motivate and inspire others to do their best work. Careful observation of these leaders also reveals that they check their egos at the door and focus on what is best for the company and customers first. They serve others around them and act selflessly for the greater good.\nMy Role\nI am the CEO of GitLab. Here is what I do in 12 words or less that is unique to my role:\nLead the team that defines and drives GitLab’s strategy & execution.\nCommunication Preferences\nI prefer Slack to email. I try to respond to every Slack message I get every day. Keep them concise.\nIf you need me in near real-time, text or call my phone. My EBA can help to get you in touch if you don’t have this information and it is urgent.\nIf you have a complex question or need a discussion on something async that will require more than a few sentences for me to reply, put it into a document and share it with me with comments. I read fast and am pretty efficient at giving feedback this way.\nUse email when it is an external-facing communication, but don’t expect me to respond in < 1 week unless you ask me to look at it sooner over Slack or it is regarding a critical external matter.\nExpectations for leadership\nWhat I need from you. What you will get from me.\nIf you tell me you will do something, I expect you to do it to the very best of your ability on time. I will, too.\nIf you fail at something, I expect you to own it and not make excuses. I will, too.\nIf you succeed at something, I expect you to give all the credit to your team. I will, too.\nI want to be part of a world-class company that is respected for being ‘excellent’ and unrivaled in our category. I expect you to constantly strive to increase your team’s output quality and volume through greater alignment and efficiency. I can’t judge your personal or team capacity, so I will push work until you set my expectations on what is achievable and by when. I expect you to actively manage expectations and hold yourself accountable.\nWhen E-Group members disagree with each other, I expect them to jointly escalate it to me in a timely fashion so I can help break the tie. I have a similar expectation for other team members. Escalation is not a failure. I want a team that is pushing passionately, and it is normal to have conflict. Disagree, commit, and advocate. Be a gracious winner. Own decisions either way 100% with your team.\nFrequently asked questions from prior roles\nWhy do you ask so many questions? What are you looking for?\nI do like to ask a lot of questions.\nI care about the details, and I really like to learn.\nI can tell when someone really knows the area by how easily and completely they can answer my questions.\nWhen I see that someone understands their area very well and has confidence in their area, I shift from probing to generative questions and sometimes ideas with the intention of contributing.\nWhen I see that someone lacks command of their area, I shift to the Socratic method to understand shared beliefs and assumptions and help guide people/teams to an answer we can align on. If this fails or isn’t converging, I put forward my hypothesis/ideas as a starting point.\nIf you find meetings/discussions ending frequently with my hypothesis as the next step, that may be a sign that we aren’t well aligned. If in doubt, ask me!\nWhy do you want to inspect my work so frequently? Do you not trust me?\nI like to meet regularly (weekly) to talk about top priorities and our progress on key metrics. These meetings normally have nothing to do with trust.\nPast experience has taught me that monthly updates are not frequent enough to ensure that most bold, ambitious, impactful initiatives are delivered as efficiently as possible, on time, and with high quality. It truly ‘takes a village’ to make that happen.\nOperating meetings help me learn the realities of the work, stay in touch with real roadblocks and challenges that sometimes only I can resolve, contribute ideas, and help align functions across the company to ensure that we meet our most important goals.\nYou seem to work a lot of hours and around the clock. Do you expect the same from me?\nNo\nI expect you to manage your own work/life balance; no one else can do it for you. Everyone’s needs are unique, so managers can’t really prescribe how to achieve a balance that is right for you.\nManagers should measure whether their reports’ work meets business needs and tell them if they see misalignment. This is part of my job as manager of E-Group.\nWork is by nature a competitive task, and there will always be someone smarter, who works harder or is more skilled than oneself. Some jobs are more complicated and demand more than others. In some periods of life, one may have more or less to give than others. Finding balance is difficult and requires constant management. My advice: Be honest with yourself about who you are and what you need, then give it your best and keep an open dialogue with your manager. Good managers care about and flex with the people they manage to find a win/win for the company and individual.\nCan you share a bit more about your personal life? What do you do outside of work?\nMy family is my #1 priority in life, and I give extreme attention to their needs. My sons are both out of the house on their own, leaving just my wife and me at home. They support me in giving my best to GitLab.\nI really do enjoy work. I’ve had the fortune to take some extended time off in my career, and every time I do, I am reminded that work is so much more than a paycheck. It is something I love and how I find purpose.\nWhen I have free time, my #1 hobby is cycling with my wife. We have cycled in different parts of the world and always strive to see new places by bike.\nI often couple my #2 hobby, photography, with my work and personal travel. I love taking photos because it encourages me to “see” the world in non-obvious ways to create interesting photos, which is also helpful in life and business. I like the blend of science and art skills that photography demands.\nCEO Scam\nSee\nCEO and executive fraud\nin the security practices section of the handbook.\nMeeting request requirements\nFor scheduling a video call or meeting with me or other execs, please see the\nEBA handbook page\n.\nCEO Meeting Cadence\nAs part of my role, I participate in a variety of meetings both internal and external.\nMonthly Meetings\nMonthly CEO AMA,\nagenda in Gdrive\n(internal).\nCEO Shadow Program\nAt GitLab, being a CEO Shadow is not a job title, but a temporary assignment to shadow the CEO\nOffice of the CEO\nDetails about Office of the CEO (OCEO) at GitLab\nLast modified April 9, 2025:\nFixed a minor spelling error (\ne34fa8a4\n)\nView page source\n-\nplease\ncontribute\n.", "num_words": 2384}
