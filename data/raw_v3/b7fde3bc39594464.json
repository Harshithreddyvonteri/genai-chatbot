{
  "url": "https://about.gitlab.com/direction/security_risk_management",
  "title": "Product Stage Direction - Security Risk Management\n|\nGitLab",
  "headings": [
    "Product Stage Direction - Security Risk Management",
    "On this page",
    "Stage Overview"
  ],
  "text": "Product Stage Direction - Security Risk Management\n|\nGitLab\nProduct Stage Direction - Security Risk Management\nMaintained by\n:\nDavid DeSanto\n@david\nYou are here:\nGitLab Direction\nProduct Stage Direction - Security Risk Management\nMaintained by\n:\nDavid DeSanto\n@david\nThe following page may contain information related to upcoming products, features and functionality. It is important to note that the information presented is for informational purposes only, so please do not rely on the information for purchasing or planning purposes. Just like with all projects, the items mentioned on the page are subject to change or delay, and the development, release, and timing of any products, features or functionality remain at the sole discretion of GitLab Inc.\nOn this page\nStage Overview\nStage Vision and Scope of Operations\nStage Strategy\nGroups and Areas of Focus\nCategories\nSecurity Policy Management\nVulnerability Management\nSecurity Testing Configuration\nSecurity Asset Inventories\nSecurity Testing Integrations\nDriving Actionable Security Risk Management with Seamless Automation and Scalability\nSecurity Risk Management\nStage Overview\nStage Vision and Scope of Operations\nThe Security Risk Management stage will deliver actionable insights and seamless workflows that empower Application Security (AppSec) and Development teams to rapidly assess risk through comprehensive visibility, intelligent prioritization, and automated resolution workflows across the software development lifecycle (SDLC).\nThe stage will own the end-to-end user journey, including:\nSeamless onboarding.\nConfiguration and orchestration of our suite of analyzers.\nAssesment, proiritization and resolution of the security risks.\nEnhanced automation through security policies and integrations.\nThe Security Risk Management stage is also responsible for building and maintaining the underlying infrastructure that ensures high performance, scalability, and extensibility. This infrastructure will be foundational in driving continuous innovation, while addressing scale and efficiency needs as the landscape evolves\nStage Strategy\nGitLab Security Stage stands at a unique position in the application security market by offering a broad set of integrated security scanners embedded directly within developers' daily workflows. Our strength lies in consolidating security capabilities within the platform developers already use, significantly reducing the integration costs typically associated with application security solutions. With integration across all stages of the software development lifecycle and strong AI investments, we enable security to shift left while maintaining visibility throughout the entire process, making security an accessible part of development rather than a specialized discipline requiring separate tooling.\nOur strategy will focus on three key areas:\nDeliver an enterprise-ready solution with broad deployment capabilities across the SDLC (IDE, CI, on-demand), comprehensive asset visibility, advanced reporting, and vulnerability management workflows.\nLeverage the GitLab platform's advantages through integration with additional SDLC steps, utilizing our unique data for improved functionality, and enhancing capabilities with AI.\nBuild strategic partnerships with relevant security vendors for ingestion of risks and threat inteligence for broader and improved contextual analysis\nGroups and Areas of Focus\nThe SRM stage is made up of four groups:\nSecurity Insights\n- Enable application security and development teams to efficiently assess, prioritize, triage, and remediate application security risks while keeping an up-to-date, comprehensive view of their applications' structure. Core areas of focus include:\nModern Security Dashboards to address modern application security posture management challenges\nVulnerability report and dependency list management improvements to allow advanced risk assessment and seamless integration as part of the GitLab platform and developers' day-to-day workflows\nIntroduction of Application/Business unit risk assessment to support modern distributed and cloud-native applications across different development teams\nTrack vulnerabilities outside of the default branch\nSecurity Platform Management\n- Enable application security and development teams to orchestrate and control their application security tools from within the GitLab platform, integrate seamlessly with external tools, and provide a frictionless, holistic operational experience across GitLab's suite of security offerings. Core areas of focus include:\nAsset inventory and scanner coverage to enhance orchestration and identify security gaps\nSimplified, scalable configuration to allow deployment of scanners across the different stages of the SDLC\nGuided and seamless onboarding to improve time-to-value for our customers\nSecurity Policies\n- Enable Application security teams to define and enforce security policies across their organizationâs fleet of applications and services. Empower developers to adhere to organizational security standards within the context of their daily workflows. Support the underlying frameworks for GitLabâs security and compliance enforcement functionality. Core areas of focus include:\nSecurity and compliance pipeline enforcement of relevant jobs within GitLab pipeline that scale reliably.\nSeamless and centralized policy management for application security team via improved accuracy, instance level management and easier management\nFaster triage through vulnerability management workflow automation for issue tracking, auto triage, improved filtering, etc.\nSecurity Infrastructure Group - Provide the required infrastructure and database resources to meet enterprise customer demand and required functionalities as a competitive application security platform. Core areas of focus include:\nNext-generation Vulnerability and Dependency Data Layer, enabling faster feature development\nEnhanced data model for vulnerabilities to support vulnerabilities as Work Items\nSupport Database Decomposition Effort\nCategories\nSecurity Policy Management\nUnified security policy management provides security and compliance teams with a way to enforce controls across their organization for all of GitLab's scanners and security technologies. Policies can be used to ensure security scanners are enforced in development team pipelines with proper configuration, all scan jobs execute without any changes or alterations, and proper approvals are provided on merge requests based on results from those findings. This category is at the \"viable\" level of maturity.\nPriority: medium â¢\nDocumentation\nâ¢\nDirection\nVulnerability Management\nVulnerability Management enables collaboration between security teams by providing a uniform interface to assess the security posture of their applications. Security teams can view, triage, trend, track, and resolve vulnerabilities detected by the various GitLab scanners. This category is at the \"complete\" level of maturity.\nPriority: high â¢\nDocumentation\nâ¢\nDirection\nSecurity Testing Configuration\nSeamlessly configure and onboard application security testing. This category is at the \"minimal\" level of maturity.\nDirection\nSecurity Asset Inventories\nIdentify security gaps by understanding which assets are covered by security testing, and when and where security tests have run. This category is at the \"minimal\" level of maturity.\nDirection\nSecurity Testing Integrations\nIntegrate external security testing tools for complete visibility and consolidation of your security workflows. This category is at the \"minimal\" level of maturity.\nDirection\nLast Updated: 2025-03-18\nEdit this page\nView source",
  "html_file": "b7fde3bc39594464.html"
}