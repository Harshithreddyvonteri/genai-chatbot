{
  "url": "https://about.gitlab.com/direction/dev",
  "title": "Product Section Direction - Dev\n|\nGitLab",
  "headings": [
    "Product Section Direction - Dev",
    "Dev Section Overview",
    "Dev Section FY24 Themes",
    "Who is the Dev section targeting?",
    "3 Year Strategy",
    "3 Year Themes",
    "1 Year Plan: Whatâs Next for Dev",
    "Stages & Categories",
    "What's Next"
  ],
  "text": "Product Section Direction - Dev\n|\nGitLab\nProduct Section Direction - Dev\nMaintained by\n:\nG\nYou are here:\nGitLab Direction\nProduct Section Direction - Dev\nMaintained by\n:\nG\nThe following page may contain information related to upcoming products, features and functionality. It is important to note that the information presented is for informational purposes only, so please do not rely on the information for purchasing or planning purposes. Just like with all projects, the items mentioned on the page are subject to change or delay, and the development, release, and timing of any products, features or functionality remain at the sole discretion of GitLab Inc.\nDev Section Overview\nAccomplishments, News, and Updates\nSection News & Team Member Updates\nImportant PI Highlights\nRecent Accomplishments\nWhat's Ahead\nDev Section FY24 Themes\nWorld-class DevSecOps experience]\nAdvanced security and compliance\nObservability, analytics, & feedback\nGitLab for Data Science\nStage focus\nWho is the Dev section targeting?\nToday\nMedium Term (1-2 years)\n3 Year Strategy\n3 Year Themes\nEfficient and Automated Code Review\nMeasurement and Increased Efficiency of the Value Stream\nDevOps for More Personas\nEnterprise Compliance\nProject to Product\nWorkspaces\nUser Management for Enterprises\n1 Year Plan: Whatâs Next for Dev\nPersonal productivity\nPlan\nWhat's Next For Us\nWhat We're Not Doing\nCreate\nWhat we recently completed\nWhat we are currently working on\nWhat is next for us\nThemes that cross all Dev stages\nWhat we're not currently focusing on\nStages & Categories\nManage\nPlan\nCreate\nWhat's Next\n18.3 (2025-08-21)\nPlan\nCreate\n18.5 (2025-10-16)\nPlan\n18.8 (2026-01-15)\nPlan\n18.9 (2026-02-19)\nPlan\n19.0 (2026-05-21)\nPlan\nLast Reviewed: 2023-2-22\nPlan\nCreate\nDev Section Overview\nThe Dev Section is made up of the\nPlan\nand\nCreate\nstages of the DevOps lifecycle. The scope for the Dev section is wide and encompasses a number of analyst categories including\nValue Stream Management (VSM)\n, Project Portfolio Management (PPM), Enterprise Agile Planning Tools (EAP), Source Code Management (SCM), Integrated Development Environments (IDEs) and Design Management. It is difficult to truly estimate Total Available Market (TAMkt) for the Dev Section, as our scope includes so many components from various industries, but market research from the analyst firm\nIDC\nindicates the estimated\nTAM\nin 2022 was roughly ~$4.1B, growing to ~$7.6B in 2026 (13.14% CAGR). Analysis:\nManage\n,\nPlan\nand\nCreate\n.\nNearly\nhalf of organizations\nstill have not adopted DevOps methodologies, despite\ndata\nthat indicates far higher revenue growth for organizations that do so. Migrating a code base to a modern, Git-backed source control platform like GitLab can often be the first step in a DevOps transformation. As such, we must provide industry-leading solutions in source code and code review, as this is not only the entry into DevOps for our customers, but typically the entry into the GitLab platform. Once a user has begun utilizing repositories and code review features like Merge Requests, they often shift âleftâ and ârightâ to explore and utilize other capabilities in GitLab, such as CI and project management features.\nPer our\nStage Monthly Active User data\n(internal access only), we know that Create and Manage have the highest usage amongst GitLab stages. As such, these stages must focus on security fixes, bug fixes, performance improvements, UX improvements, and depth more than other areas of GitLab.\nAccomplishments, News, and Updates\nThe following are the updates from the Dev Section for December 2022 (as presented in the monthly\nProduct Key Review\n). A complete list of released features\ncan be found on the\nRelease Feature Overview\npage and a complete list of upcoming features can be found on the\nUpcoming Releases\npage.\nSection News & Team Member Updates\nThe Organization group has been consolidated with the Pods group and moved to the Enablement section\nThe Import & Integration groups have been merged together\nThe Knowledge group that owns Wiki, Pages & content editor has moved from the Create stage to the Plan stage\nPlan:Optimize - Exec Dashboard: Beta - Beta program to validate and test the design, performance, and MVC readiness with real customers data.\nManage:Personal productivity - Navigation Left side bar Experiment\nYour work sidebar\nManage:Auth - [Users with the Guest role can view private repositories](https://about.gitlab.com/releases/2023/02/22/gitlab-15-9-released/#users-with-the-guest-role-can-view-private-repositories\nCreate:Source Code - Improving Forking experience:\nFetch new upstream contents when fork is behind\nCreate:Source Code\nRequire multiple approvals from Code Owners\nManage:Integrations -\nNotifications now available in the GitLab for Slack app\nCreate:Source Code -\nAllow multiple approvals per CODEOWNER\nImportant PI Highlights\nPlan: Project Management - Congrats on a recorded MoM Paid new all time high!\nPlan::Optimiae - Congratulations on reaching an all time high MAU.\nCreate Stage - Congratulations for reaching an all time high for SMAU & Paid SMAU!\nCreate:: Congrats on reaching an all time high for VS Code extension, continuing to see steady adoption!\nRecent Accomplishments\nMigrating GitLab projects by direct transfer Beta\nSCIM support for self-managed GitLab\nSelective SSO enforcement for group members\nGitLab CLI\nSign commits with your SSH key\nWeb IDE & Workspaces Beta\nSelf-managed support for the GitLab for Jira Cloud app\nAutocomplete suggestions in the Content Editor\nEmail notification when two-factor OTP attempt is wrong\nAdd labels and dates to a task\nWhat's Ahead\nJira Cloud App proxy for Self-managed GitLab users\nAPI Support for user management - Max role\nCreate a custom source control module for VS Code\nHighlight source code syntax on the frontend using HighlightJS\nEnterprise Users - MVC: Claim management of existing users\nPages internal API caching\nMVC: Branch Rules Overview\nRestructure merge requests\nReal-time merge request updates\nAllow users to delete comments that they authored within Design Management\nConsolidate Value Stream Analytics Group & Project into a single workspace\nFetch new upstream contents when fork is behind\nAdding emoji reactions to work items\nNew exploration sidebar where users can go and discover various things within GitLab\nEnterprise Users Badging\nDev Section FY24 Themes\nThe primary\nthemes\nfor the Product department in FY24 are:\nWorld-class DevSecOps experience\nAdvanced security and compliance\nObservability, analytics, & feedback\nGitLab for Data Science\nThe Dev Section will primarily focus on\nWorld-class DevSecOps experience\nwhich also includes improving our user experieince and better support for our Enterprise users.\nWorld-class DevSecOps experience]\nThe Dev Section has the highest TMAU of all sections. Because of this, the Dev section will be highly focused on creating a lovable experience for several core workflows throughout the product. We'll also be focused on product architecture improvements, like simplifying groups/projects, which will enable efficiency gains of GitLab product teams as well as an easier to understand user experience for new users of GitLab. Here are the jobs to be done the Dev section will focus on to improve adoption through usability:\nEasily understand how to set up and manage my organization and projects in GitLab - solved for via\ngroups and projects moving to namespaces\nEasily find exactly what I'm looking for in GitLab - solved for via\nimproving settings and navigation\nProvide an out of the box experience that requires little to no configuration - solved for via enabling all possible Dev section features to be\nworking by default\nEnsure I'm always looking at the most up to date information - solved for by focusing on realtime experiences\nConduct an efficient code review - solved for via code review usability improvements and MR reviewers\nEasily manage my portfolio - solved for by work items, epic boards, roadmap improvements, and workflow automation\nReduce my development cycle time and time managing local environments - solved for by investing in Workspaces tools\nFeature parity between groups and projects\nNew Navigation flow\nAdvanced security and compliance\nThe Dev section will be focused on providing a more secure development experience.\nCustomizable Roles and Permisisons\nObservability, analytics, & feedback\nThe Dev section will be creating a better holistic experience that ties the entire SDLC together connecting planning, source code, deployment and more. This will allow a unique view into the Software Delivery process, allowing you to tie OKRs and other business metrics into you feature development. This will also allow you to identify bottle necks as well as allow team to experiment with different processes to find what boosts their productivity and allow them to practice continuous improvement. DORA4 metrics will help create observability into deployments and production stability. Custom analytics reports will allow to tailor different views for different users of the platform.\nExecutive dashboards and Value Stream Analytics\nGitLab for Data Science\nAI assisted code suggestions\nStage focus\nWithin each stage, the listed items below are in\norder of priority\n. The top priority for each stage or group is:\nManage:\nSlack Integration\nManage:\nCustomizable Roles & Permissions\nPlan:\nWork Items\nPlan:\nSupport OKRs in GitLab\nPlan:\nValue Streams Dashboard for Executive\nCreate:\nWorkspaces\nCreate:\nBranch Rules Overview\nWho is the Dev section targeting?\nWe identify the\npersonas\nthe Dev section features are built for. In order to be transparent about personas we support today and personas we aim to support in the future we use the following categorization of personas listed in priority order.\nð©- Targeted with strong support\nð¨- Targeted but incomplete support\nâ¬ï¸- Not targeted but might find value\nToday\nTo capitalize on the\nopportunities\nlisted above, the Dev section has features that make it useful to the following personas today.\nð©\nSasha - Software Developer\nð©\nDevon - DevOps Engineer\nð©\nDelaney - Development Team Lead\nð©\nParker - Product Manager\nð©\nCameron - Compliance Manager\nð¨\nSam - Security Analyst\nð¨\nPresley - Product Designer\nð¨\nRachel - Release Manager\nð¨\nSimone - Software Engineer in Test\nð¨\nAllison - Application Ops\nð¨\nPriyanka - Platform Engineer\nð¨\nSidney - Systems Administrator\nMedium Term (1-2 years)\nAs we execute our\n3-year strategy\n, our medium term (1-2 year) goal is to provide a single application that enables collaboration between cloud native development and platform teams.\nð©\nSasha - Software Developer\nð©\nDevon - DevOps Engineer\nð©\nDelaney - Development Team Lead\nð©\nParker - Product Manager\nð©\nPresley - Product Designer\nð©\nCameron - Compliance Manager\nð©\nSimone - Software Engineer in Test\nð¨\nRachel - Release Manager\nð¨\nAllison - Application Ops\nð¨\nPriyanka - Platform Engineer\nð¨\nSidney - Systems Administrator\n3 Year Strategy\nIn three years, the Dev Section market will:\nCentralize around Git as the version control of choice for design assets, gaming, silicon designs, and AI/ML models.\nHave a market leader emerge in the value stream management space. Currently, the market is fragmented with most players focused on integrations into various DevOps tools.\nAdopt a mindset shift from project management to product management.\nRecognize the value of a single platform for all software creation activities, including product management.\nSee an uptick in startups, applications, and internal business logic being built on the backs of low or no-code platforms, which will give rise to the\ncitizen developer\nSee an increase in developer tools built on AI technology aimed at increasing efficiency, productivity, and security in code via automatic recommendations offered in-line in code editors\nCoalesce around the notion of a single platform for DevOps, also known as Value Stream Delivery Platforms.\nAs a result, in three years, GitLab will:\nProvide a next-generation, highly performant Git-backed version control system for large assets, such as ML models. Our goal in three years should be to host the most repositories of these non-code assets.\nEmerge as the leader in VSM and be recognized in the industry by customers and analysts as such. Our goal in three years should be to provide the best insights into the product development process that no other tool can come close to, as we have a\nunified data model\ndue to GitLab being a single platform.\nDevelop an industry-leading product management platform where multiple features and products can be measured and managed easily.\nProvide an exellent developer experience via a robust Web IDE, browser-based IDE, support for the citizen developer via a low-code offering, and features that offer AI assistance to developers\nEnsure we are the best VSDP on the market.\n3 Year Themes\nOur direction for the Dev section is to provide the worldâs best product creation and management platform.\nWe believe we have a massive opportunity to change how cross-functional, multi-level teams collaborate by\nprovidng a solution that breaks down organizational silos and enables maximum value delivery.\nWe want to provide a solution that enables higher-quality products to be quickly iterated upon. We also want to make it effortless for companies to migrate to GitLab. In order to obtain adoption from incumbent tools, GitLab has to provide\nsubstantially more value\nthan our competitors, but do so by maintaining simplicity. The following themes listed below represent how we believe we will deliver this value\nand is our view of what will be important to the market and to GitLab over the next 3 to 5 years. As such,\nthey will be the cornerstone of our 3-year strategy, and all activities in the 1-year plan should advance\nGitLab in one or more of these areas.\nEfficient and Automated Code Review\nCode review should be a delightful experience for all involved in the process. Over time, we expect the code review process to evolve from where it is today to become a more automated process in the future. Along the way, incremental improvements will occur, where developer platforms like GitLab will focus on performance and usability of the code review tools. Code review should be an efficient process, and the easier GitLab can make code review, the more efficient dev teams become.\nResearch\nhas shown that better code review should reduce the number of bugs and increase the amount of higher-quality features an organization can ship. The code review process will continue to provide a venue for developers to learn and collaborate together.\nAs examples, GitLab will:\nLoad large, multi-file diffs faster than any other comparable product on the market.\nProvide tailored insights to the code reviewer, alerting them to the most important areas to review.\nProvide ways to reduce the wait time in the code review process.\nMake the experience when browsing multi-file diffs delightful for the code reviewer.\nProvide a code review experience inside of VS Code to help devs stay in flow.\nMeasurement and Increased Efficiency of the Value Stream\nPeter Drucker has stated âIf you canât measure it, you canât improve it.â Many software development teams have no way of measuring their efficiency, and even if they do, there is not enough feedback, information, or actionable insights to improve the efficiency of their team. Even then, once efficiency is improved, it can be difficult to tell if a teamâs performance is good or bad, as there is often no point of comparison. Even the best performing team in an organization could be worse than the competition. Increasing efficiency is paramount to companies increasing their\ntime to value\nand helping organizations answer\nâIs my DevOps transformation working?â\nWe believe efficiency can be improved in two ways. The first way is to reduce cycle times for existing value stream activities. The second is to question and optimize the value stream into higher value-added activities at each step. GitLabâs vision is to help answer both of these questions: âAm I doing things fast enough?â and âAm I doing the right things?â These two questions are intertwined because the faster an organization can ship, the quicker feedback will come in from users, creating a virtuous cycle of shipping things quickly as well as ensuring the things shipped are the right things.\nToday, value stream management is largely focused on visualizing the value chain through deployment. GitLab is uniquely positioned to also visualize, track, and measure value chain activities from the strategic initiative level all the way to captured value from an organization's customer. For example, the value created by post launch activities, such as press releases, blog posts, marketing campaigns, and customer engagement should funnel into value stream management; providing the business with insights and data to continuously improve each step of their value chain.\nThe market for value stream tools has begun to bifurcate into value stream delivery platforms and value stream management platforms. GitLab can solve for both of the use cases of these markets. In order to become a more successful VSMP platform, we'll need to ensure that we provide support for calculating VSM metrics on 3rd party tools, for example, Jira issues.\nAs examples, GitLab will provide:\nEasy-to-use and customizable tools that measure the efficiency of the DevOps lifecycle.\nInsight into areas of waste where teams can improve.\nRecommendations based on large data sets of other teams using GitLab for comparison.\nA visual experience for value stream management that goes beyond code deployment.\nProvide VSM flow metric calculations based on 3rd party tools/integrations.\nDevOps for More Personas\nDevOps started with the merging of Development and Operations and has since been augmented to include Security, highlighting DevSecOps as the next trend. There are many other personas that are involved in software development, such as product managers, project managers, product designers, finance, marketing, legal, procurement, etc. These personas will continue to expand until nearly every role at knowledge-work companies touches some facet of the DevOps lifecycle. Over time, organizations will realize that teams who work out of the same platform/set of tools are more efficient and deliver faster business and customer value.\nBecause of this trend, each persona of the DevOps lifecycle should ultimately be treated as a first-class citizen in GitLab.\nAs examples, GitLab will provide:\nA better experience for project management workflows.\nA space for product designers to design and collaborate on designs with product managers and engineers.\nFinancial reporting for things like resource allocation, capacity planning, and P & L analysis.\nEnterprise Compliance\nMost enterprise customers have custom requirements that need to be implemented inside of GitLab. Examples of these are controls that spans systems such as permissions, approvals, compliance, governance, workflows, and requirements mapping. It is our belief these needs will exist for many years to come, and we will need to incorporate these to truly become a complete DevOps platform that serves enterprise segments. We will strive to do this in ways that are modern and, where possible, adhere to a\nâconvention over configurationâ\napproach.\nAdditionally, compliance, auditing, and surfacing evidence of security/compliance posture to auditors will become more important as more GDPR-like legislation is enacted and passed into law. GitLab should make it easy to not only surface and deliver evidence for GitLab controls (i.e. who has access to GitLab, who did what on what group, etc.), but also to track and manage compliance requirements for various legislation our customers may be bound to for the applications they create inside of GitLab.\nAs examples, GitLab will provide:\nCustomizable workflows and checkpoints, unlocking enforcement, approvals, and insight into these workflows.\nMore customizable and fine-grained permissions.\nLogs for everything that happens within GitLab and allow those events to be accessible via the API and UI.\nAlerting on GitLab audit events.\nProviding a great requirements and quality management experience.\nDeliver chain of custody reporting.\nProvide simple compliance reporting and dashboarding views.\nProject to Product\nProduct Managers often struggle with answering the question, \"Is the product or feature I just launched successful?\" There are many sensing mechanisms to help answer this question, including revenue, users, customer feedback, NPS, etc., but no product currently helps product managers exhaustively manage the product development lifecycle from end-to-end. Many products assist with planning, delivery of code, and deployment, but feedback and iteration are equally as important to product managers as shipping the first iteration. Getting the first iteration out is traditionally celebrated, but is only one of many steps to true product development lifecycle management.\nImagine an experience where product managers can log in and view the \"health\" of their entire portfolio on one dashboard. It is clear which features have the most value to customers (and by extension to the business) as measured by key metrics, assisting PMs with priortization activities. PMs can quickly identify features or products within their portfolio that need more attention and drill into them, identifying the correct next action to take, whether it's iteration on the feature or perhaps sunsetting it. PMs can quickly create an issue for the next iteration, version control features, view security incidents, respond to customer feedback, drill down into analytics, control A/B tests of the feature, and even interact with users of the feature or product directly by creating ad-hoc surveys or questions for users to answer. Additionally, the experience should allow for ROI analysis and tracking of the ROI after capital has been expended.\nWithin three years, project management tools will begin evolving to provide this experience and help PMs answer tough product questions. These tools will also assist with measuring and predicting value to the organization before a feature is prioritized by the PM. The ideal solution most likely uses data science, natural language processing (NPL), machine learning, and predictive analytics to assist product managers with decisions both before and after a feature is launched.\nAs examples, by integrating with GitLab's\nAnalytics\nand\nPlan\ncapabilities GitLab will provide:\nFeature management capabilities, including the ability to link a feature to a specific point in the user's journey. These live on after an issue is closed and contain rich meta-data about user interactions, business KPIs, and the value exchange system.\nAn experience where PMs can quickly analyze the health of all relevant features.\nA framework that helps PMs with prioritization decisions.\nA framework for ROI analysis and measurement.\nWorkspaces\nLocal dev environments can be tricky to set up and often require hours to troubleshoot to set up development kits. Even when successfully configured, the \"works on my machine\" problem can arise as there are likely many differences between production and local environments.\nWe believe Workspaces will become a more popular development paradigm over the next few years and will manifest itself in this way: devs will code in places they are comfortable, such as local IDEs and will run code in Kubernetes environments that their IDE is connected to.\nOkteto\nis an interesting tool that is solving for this right now.\nGitLab is uniquely positioned to serve Workspaces as a remote environment as we have a tight integration with Kubernetes as well as a VSCode Plugin in addition to an in-app editing experience in our Web IDE.\nAs examples, GitLab will provide:\nWorkspaces environments powered by Kubernetes\nWorkspaces environments that can be connected to a local VSCode editor\nWorkspaces environments that can be connected to the Web IDE or a GitLab project\nUser Management for Enterprises\nEnterprise customers on Gitlab.com want to be able to fully manage the entire lifecycle of users in their groups. This desire is for efficiency, increased security protocols, and to protect their intellectual property. Typically, these customers will have centralized user management for their enterprise through an IdP like Okta or Azure and use GitLab SSO/SCIM.\nWe will provide group maintainers administrative control over users whose e-mail address matches a domain that they have proved ownership for. Today, any user provisioned through SCIM and/or an IdP are automatically Enterprise Users. The user claim process allows group owners to find any users that use their company e-mail address but have opened their accounts outside of the provisioning process, and exert ownership over them.\nOnce users are Enterprise Users, we will provide enhanced management to group owners, for example:\nEnterprise Users do not have to validate their e-mail addresses\nDisable passworth Auth - Enterprise Users can sign in via IdP only\nAbility to block inviting users from outside the organization\nPrevent users from changing or adding e-mail addresses\nPolicies for credential rotation for any user within the enterprise\nAbility for group owner impersonate enterprise user\nLogin settings (Password Complexity, Auto log out, two factor authentication and more)\n1 Year Plan: Whatâs Next for Dev\nPlease see the\ncategories page\nfor a more detailed look at Dev's plan by exploring\nDirection\nlinks in areas of interest. This page will highight direction themes for both one year and three year timelines.\nPersonal productivity\nNote, at GitLab we plan aggressively and we can make changes to this at any time!\nView screenshot of roadmap - update Aug 11, 2023\nPlan\nWhat's Next For Us\nOver the next year, we are focused on the following:\nGroup issues\n. Issues can be created within groups without depending on a project within the group. This will optionally allow teams to consolidate their planning workflows within a single location instead of spreading them across a group and a project.\nWork items open in a drawer within boards and lists\n. Reduce the context switching and tab fatique when drilling down into a work item detail view.\nCustomizable work item statuses\n. Provide a foundation for building a more robust work item lifecycle management solution, and enable teams to mark work items as done or cancelled.\nReport on iteration velocity and volatility\nâ Helps teams have meaningful discussions about trade-offs and estimations when planning upcoming iterations. Issues and tasks can be assigned to iterations, so our next step is\nshowing parent/child relationships in the iteration report\n, followed by\ndisplaying velocity and volatility\n.\nWork items are natively supported within Groups\nâ Eliminate the need to maintain projects under groups solely for agile planning purposes, allow teams to consolidate their planning activities at the group level, and enable issues and epics to be migrated to work items. We're currently working on\nthe remaining blockers\nto feature parity between legacy issues and work item issues. Once issues are migrated to work items, we will be able to turn on native Group Issues.\nSurface additional AI Impact Analytics metrics to help customers better understand the impact and ROI for using GitLab Duo Pro and Duo Enterpise\nâ In addition to metrics for code suggestions and chat, we will provide insight into productivity gains from:\nAdoption of\npipeline root cause analysis\n.\nAdoption of\nvulnerability explanation/resolution\n.\nAdding\nAI vs. Non-AI Cohort Analysis\n.\nAdding insight into\n\"language usage\" of Code Suggestions\n.\nWorking on an update\nUX vision for AI adoption dashboard\n.\nMature\nValue Streams Dashboard for Executives\nto enable decision-makers to identify trends, patterns, and opportunities for digital transformation improvements.In the next 1-3 milestones, we will focus on the following:\nConsolidate Group::Optimize dashboards\ninto the\nCross-stage Dashboards framework\n. With the new framework, customers can visualize their DevSecOps data using built-in dashboards provided by GitLab or by creating custom dashboards with custom visualizations.\nCustomizable widgets\nto show data that is relevant to user's goals and needs. Adding the\n\"Platform Insights\" customizable UI capabilities\n. Integrate the Value streams dashboard page into the\nPlatform Insights schema driven UI\n.\nAdding\nVSA settings\nwith label filters configuration. In a similar way to boards, teams want to use saved filtered labels with value streams.\nMoving DORA charts from the\nCI/CD Analytics into the new dashboarding framework\nAdd a new\nDashboard for Executive\nto enable decision-makers to identify trends, patterns, and opportunities for digital transformation improvements. In the next phases, we will focus on the following:\nAdding a\nnew DORA Metrics Overview page\nin the Value Stream Dashboard. This is related to https://gitlab.com/gitlab-org/gitlab/-/issues/453958.\nAdding a\nnew DORA Metrics Analytics page\nin the Value Stream Dashboard. This is related to https://gitlab.com/gitlab-org/gitlab/-/issues/453958.\nAdding\nCustom Metrics Calculation Rules\nfor DORA, to\nsupport multiple environment branches\n(with GitLab flow), and\nimprove the metric calculation\nto effectively track incidents and deployments.\nMove DORA metrics to ClickHouse\nto provide best experience and robust indicators for measuring the metrics.\nAdding the Fifth DORA Metric -\nReliability - Operational performance\nEnhancing our ability to\nvisualize data\nby providing a singular hub for accessing and presenting information, adaptable to different visualization preferences.\nMaturing our Wiki to satisfy more\njobs to be done\n.\nWhat We're Not Doing\nGitLab will not provide extensive configuration options that complicate collaboration and increase the maintenance burden. Examples are:\nBlocking users from editing work items due to field-level configuration.\nCreation of state workflows with transition rules.\nConfiguring screen field layouts.\nPlan functionality will be generic enough to allow its use by many personas and use cases. However, we will focus on optimizing for use cases for DevSecOps workflows in the immediate future. Our long-term vision is to become the system of record for planning across any function, but we are starting with DevSecOps teams as our target. Example use cases that we are not focused on include:\nMarketing\nHR\nLegal\nService Desk\nIn order to meet the vision described in this page, we will decrease investment in our Requirements Management, Test Management, DevOps Reports, Design Management and Time Tracking categories. We will continue to address defects and support community contributions but we are not planning to make significant improvements.\nCreate\nWhat we recently completed\nThe Create stage has been actively delivering updates to help your development teams collaborate faster and more effectively. Here are some highlights from recent releases:\nWorkspace extensions now support proposed APIs\n- Workspace extensions now support enabling proposed APIs, improving compatibility and reliability in production environments. This update allows extensions that depend on proposed APIs to run without errors, including critical development tools like the Python Debugger.\nAdd project files to Duo Chat in VS Code and JetBrains IDEs\n- Add your project files directly to Duo Chat in VS Code and JetBrains to unlock more powerful, context-aware AI assistance.\nWorkspaces container support with Sysbox\n- GitLab workspaces now supports building and running containers directly in your development environment. When your workspace runs on a Kubernetes cluster configured with Sysbox, you can build and run containers without additional configuration.\nCreate workspaces without a custom devfile\n- GitLab now provides you with a default file that includes common development tools. This enhancement removes configuration barriers, enables you to create a workspace quickly from any project, includes common development tools pre-configured and ready to use, and lets you focus on development instead of configuration.\nUse roles to define project members as Code Owners\n- You can now use roles as Code Owners in your CODEOWNERS file to manage role-based expertise and approvals more efficiently.\nNew\n/help\ncommand in GitLab Duo Chat\n- A new, powerful feature for Duo Chat! Just type /help in the chat message field to explore everything it can do for you.\nMerge at a scheduled date and time\n- When you create or edit a merge request you can specify a merge after date. This date will be used to prevent the merge request from being merged until it has passed. Using this new capability with our previously released improvements to auto-merge gives you the flexibility to schedule merge requests to merge in the future.\nAutomated Repository X-Ray\n- When a new commit is pushed to the default branch of your project, Repository X-Ray automatically triggers a background job that scans and parses the applicable configuration files in your repository.\nWhat we are currently working on\nSource Code Management -\nBranch rules for squash settings\n- This is the next iteration of the larger effort to establish a framework for source code rules. Now that rules are co-located, we are working on enabling the editing of additional settings from that interface.\nCode Review Workflow -\nDuo Code Review\nand\nImproved DevSecOps experience in merge requests\nGitLab CLI -\nStacked Diffs via the GitLab CLI\nWorkspaces -\nWorkspaces Settings Configuration Infrastructure in GitLab\nWeb IDE -\nEnable the Web IDE Extension Marketplace for Self-managed\nand\nHosting the Web IDE on a new domain or subdomain\nEditor Extensions -\nRemote SAST Scanning in VS Code\nand\nAdding Duo Quick Chat into the Visual Studio extension\n.\nWhat is next for us\nThe Create stage will focus on the following this year:\nSource Code Management -\nBranch rules for Merge Methods\nCode Review Workflow -\nDuo Code Review\nGitLab CLI - Expand AI capabilities of glab ask - The GitLab CLI currently supports asking questions about how to accomplish some tasks with the usage of git. We will look for more ways to expand this and potentially leverage GitLab Duo Chat in the future.\nWorkspaces -\nSupport additional editors for workspaces\nand\nAutomatically suspend a workspace after a period of inactivity\nWeb IDE -\nSearch across all files in a project from within the Web IDE\nand\n1st Class Editing Experiences for GitLab features\nEditor Extensions -\nDeepen the integration with the core DevSecOps workflows of GitLab\nand\nContinue to improve the usability, quality, and maturity of GitLab Duo features\nThemes that cross all Dev stages\nPerformance and availability:\nWe must invest in the performance, stability, and availability of our application. We will do this by focusing on\napplication limits\n,\ndiff load times\n, and ensuring\navailability\nis top of mind.\nGrowth driver: Retention\nWhat we're not currently focusing on\nChoosing to invest in the above areas in 2022 means we will choose not to:\nEfficiency recommendations: Provide recommendations where customers can improve their efficiency in the DevOps lifecycle. This will likely require comparisons amongst many GitLab users and an AI engine to make intelligent recommendations. We won't be working on features that help companies answer, âAm I doing the right activities?â These improvements will come in years two and three of the VSM plan.\nFeature objects: Creating first class feature objects per the project management morphs into product management block below. While we think this is important, we must spend this year building a better foundation in portfolio management by making our groups/projects structure more simple and delivering epic boards.\nWikis: Investments in wikis such as WYSIWYG editing or real time collaboration ala Notion.\nStages & Categories\nManage\nLearn more about our vision for the Foundations stage\n.\nPlan\nLearn more about our vision for the Plan stage\n.\nCreate\nLearn more about our vision for the Create stage\n.\nWhat's Next\n18.3 (2025-08-21)\nPlan\nEmbedded Views - General Availability\nCreate\nDuo Code Review\nUltimate\n18.5 (2025-10-16)\nPlan\nWork item statuses - Iteration 4 (Multiple lifecycles)\n18.8 (2026-01-15)\nPlan\nEnhanced List View\n18.9 (2026-02-19)\nPlan\nWI lists stage 4 - Consolidated list (group and project)\n19.0 (2026-05-21)\nPlan\nEnhanced listing page follow-up items\nNested listing views for efficient workflows within SDLC and OKR workflows\nUltimate\nEdit this page\nView source",
  "html_file": "4d22d5fe74aff2eb.html"
}